{"name": "AgentQL", "description": "Extract structured data from a given URL using a prompt to describe the data and fields to extract", "tools": [{"name": "extract-web-data", "description": "Extracts structured data from a given URL using a prompt to describe the data and fields to extract.", "parameter": {"url": "(string) The URL of the web page to extract data from.", "prompt": "(string) A description of the actual data and its fields to extract."}}], "domains": [{"name": "Web Data Acquisition", "description": "网络数据采集,包含网页爬虫、内容提取、反爬处理及代码仓库索引分析"}]}
{"name": "Aiven", "description": "1.列出Aiven账户中的所有项目 2.列出特定Aiven项目中的所有服务 3.获取特定Aiven项目中服务的详细信息", "tools": [{"name": "list_projects", "description": "List all projects on your Aiven account.", "parameter": {}}, {"name": "list_services", "description": "List all services in a specific Aiven project.", "parameter": {}}, {"name": "get_service_details", "description": "Get the detail of your service in a specific Aiven project.", "parameter": {}}], "domains": [{"name": "Cloud Service Integration", "description": "云服务集成，调用与管理云平台 API(如 AWS/Azure)，支持云资源对接与 AI 服务整合"}]}
{"name": "Alibaba Cloud AnalyticDB for MySQL", "description": "1.在AnalyticDB for MySQL集群中执行SQL查询 2.获取SQL查询的执行计划 3.获取带运行时统计信息的实际执行计划", "tools": [{"name": "execute_sql", "description": "Execute a SQL query in the AnalyticDB for MySQL Cluster", "parameter": {}}, {"name": "get_query_plan", "description": "Get the query plan for a SQL query", "parameter": {}}, {"name": "get_execution_plan", "description": "Get the actual execution plan with runtime statistics for a SQL query", "parameter": {}}], "domains": [{"name": "DataBase Management", "description": "数据库管理，涵盖数据库创建、查询、优化、备份及数据结构设计"}]}
{"name": "Apache IoTDB", "description": "Database metadata and data query operations, including: SHOW/COUNT queries, SELECT queries, listing tables, and viewing table schema", "tools": [{"name": "metadata_query", "description": "Execute SHOW/COUNT queries to read metadata from the database", "parameter": {"query_sql": "(string) The SHOW/COUNT SQL query to execute"}}, {"name": "select_query", "description": "Execute SELECT queries to read data from the database", "parameter": {"query_sql": "(string) The SELECT SQL query to execute"}}, {"name": "read_query", "description": "Execute SELECT queries to read data from the database", "parameter": {"query": "(string) The SELECT SQL query to execute"}}, {"name": "list_tables", "description": "Get a list of all tables in the database", "parameter": {}}, {"name": "describe-table", "description": "View schema information for a specific table", "parameter": {"table_name": "(string) Name of table to describe"}}], "domains": [{"name": "DataBase Management", "description": "数据库管理，涵盖数据库创建、查询、优化、备份及数据结构设计"}]}
{"name": "Apify", "description": "1.检索特定Actor的文档、输入模式和详细信息 2.通过关键词搜索相关Actor并返回详细信息 3.将Actor添加到可用工具列表 4.从可用工具列表中移除Actor", "tools": [{"name": "get-actor-details", "description": "Retrieves documentation, input schema, and details about a specific Actor.", "parameter": {}}, {"name": "discover-actors", "description": "Searches for relevant Actors using keywords and returns their details.", "parameter": {}}, {"name": "add-actor-as-tool", "description": "Adds an Actor by name to the available tools list without executing it, requiring user consent to run later.", "parameter": {}}, {"name": "remove-actor-from-tool", "description": "Removes an Actor by name from the available tools list when it's no longer needed.", "parameter": {}}], "domains": [{"name": "Tool Management", "description": "工具管理，包括工具信息的检索、搜索、添加和移除"}]}
{"name": "APIMatic MCP", "description": "Validate OpenAPI files using APIMatic's API", "tools": [{"name": "validate-openapi-using-apimatic", "description": "Validates an OpenAPI file using APIMatic’s API and returns a validation summary.", "parameter": {}}], "domains": [{"name": "API Development & Testing", "description": "API开发与测试，包括API规范验证、接口测试、文档生成及SDK生成"}]}
{"name": "Arize Phoenix", "description": "1.提供围绕OpenTelemetry原语的轻量级包装 2.通过OpenAPI REST接口与Phoenix服务器交互的轻量级客户端 3.评估LLM应用程序的工具 4.Arize Phoenix API的客户端 5.Arize Phoenix的MCP服务器实现", "tools": [{"name": "arize-phoenix-otel", "description": "Provides a lightweight wrapper around OpenTelemetry primitives with Phoenix-aware defaults", "parameter": {}}, {"name": "arize-phoenix-client", "description": "Lightweight client for interacting with the Phoenix server via its OpenAPI REST interface", "parameter": {}}, {"name": "arize-phoenix-evals", "description": "Tooling to evaluate LLM applications including RAG relevance, answer relevance, and more", "parameter": {}}, {"name": "@arizeai/phoenix-client", "description": "Client for the Arize Phoenix API", "parameter": {}}, {"name": "@arizeai/phoenix-mcp", "description": "MCP server implementation for Arize Phoenix providing a unified interface to Phoenix's capabilities", "parameter": {}}], "domains": [{"name": "API Development & Testing", "description": "API开发与测试，包括API规范验证、接口测试、文档生成及SDK生成"}, {"name": "AI Model Lifecycle Management", "description": "人工智能模型训练与推理，涵盖深度学习与传统机器学习框架建模、模型优化与部署、实验跟踪、数据预处理及全流程生命周期管理"}]}
{"name": "Astra DB", "description": "Astra DB operations, including: collection management (create/update/delete), record CRUD operations, bulk operations, document count estimation, and client setup assistance", "tools": [{"name": "GetCollections", "description": "Get all collections in the database", "parameter": {}}, {"name": "CreateCollection", "description": "Create a new collection in the database", "parameter": {}}, {"name": "UpdateCollection", "description": "Update an existing collection in the database", "parameter": {}}, {"name": "DeleteCollection", "description": "Delete a collection from the database", "parameter": {}}, {"name": "ListRecords", "description": "List records from a collection in the database", "parameter": {}}, {"name": "GetRecord", "description": "Get a specific record from a collection by ID", "parameter": {}}, {"name": "CreateRecord", "description": "Create a new record in a collection", "parameter": {}}, {"name": "UpdateRecord", "description": "Update an existing record in a collection", "parameter": {}}, {"name": "DeleteRecord", "description": "Delete a record from a collection", "parameter": {}}, {"name": "FindRecord", "description": "Find records in a collection by field value", "parameter": {}}, {"name": "BulkCreateRecords", "description": "Create multiple records in a collection at once", "parameter": {}}, {"name": "BulkUpdateRecords", "description": "Update multiple records in a collection at once", "parameter": {}}, {"name": "BulkDeleteRecords", "description": "Delete multiple records from a collection at once", "parameter": {}}, {"name": "OpenBrowser", "description": "Open a web browser for authentication and setup", "parameter": {}}, {"name": "HelpAddToClient", "description": "Get assistance with adding Astra DB client to your MCP client", "parameter": {}}, {"name": "EstimateDocumentCount", "description": "Get estimate of the number of documents in a collection", "parameter": {}}], "domains": [{"name": "DataBase Management", "description": "数据库管理，涵盖数据库创建、查询、优化、备份及数据结构设计"}]}
{"name": "Audiense Insights", "description": "Audiense insights reports operations, including: retrieving reports list, fetching detailed report information, getting audience insights, retrieving baseline audiences, fetching affinity categories, comparing audience influencers, getting audience content engagement, and generating comprehensive report summaries", "tools": [{"name": "get-reports", "description": "Retrieves the list of Audiense insights reports owned by the authenticated user.", "parameter": {}}, {"name": "get-report-info", "description": "Fetches detailed information about a specific intelligence report, including status, segmentation type, audience size, segments, and access links.", "parameter": {"report_id": "(string) The ID of the intelligence report."}}, {"name": "get-audience-insights", "description": "Retrieves aggregated insights for a given audience, including demographics, behavioral traits, psychographics, and socioeconomic factors.", "parameter": {"audience_insights_id": "(string) The ID of the audience insights.", "insights": "(array of strings, optional) List of specific insight names to filter."}}, {"name": "get-baselines", "description": "Retrieves available baseline audiences, optionally filtered by country.", "parameter": {"country": "(string, optional) ISO country code to filter by."}}, {"name": "get-categories", "description": "Retrieves the list of available affinity categories that can be used in influencer comparisons.", "parameter": {}}, {"name": "compare-audience-influencers", "description": "Compares influencers of a given audience with a baseline audience, providing affinity scores, baseline comparisons, and uniqueness scores.", "parameter": {"audience_influencers_id": "(string) ID of the audience influencers.", "baseline_audience_influencers_id": "(string) ID of the baseline audience influencers.", "cursor": "(number, optional) Pagination cursor.", "count": "(number, optional) Number of items per page (default: 200).", "bio_keyword": "(string, optional) Filter influencers by bio keyword.", "entity_type": "(enum: person | brand, optional) Filter by entity type.", "followers_min": "(number, optional) Minimum number of followers.", "followers_max": "(number, optional) Maximum number of followers.", "categories": "(array of strings, optional) Filter influencers by categories.", "countries": "(array of strings, optional) Filter influencers by country ISO codes."}}, {"name": "get-audience-content", "description": "Retrieves audience content engagement details, including liked, shared, and influential content.", "parameter": {"audience_content_id": "(string) The ID of the audience content."}}, {"name": "report-summary", "description": "Generates a comprehensive summary of an Audiense report, including metadata, audience size, segment information, top insights, and top influencers with comparison metrics.", "parameter": {"report_id": "(string) The ID of the intelligence report to summarize."}}], "domains": [{"name": "Social Media Management", "description": "社交媒体账号运营,涵盖内容发布、粉丝互动、多平台批量管理与舆情分析"}]}
{"name": "AWS", "description": "1.搜索AWS文档和最佳实践 2.获取AWS文档内容推荐 3.将AWS文档转换为Markdown格式 4.发现和查询Amazon Bedrock知识库 5.分析AWS CDK项目并提供构造建议 6.提供基础设施即代码最佳实践 7.分析和可视化AWS成本 8.使用自然语言查询成本数据 9.生成详细成本报告和见解 10.基于文本和颜色生成图像 11.生成专业图表 12.运行AWS Lambda函数 13.实施安全优先的开发工作流程 14.集成Checkov进行安全检查 15.提供AWS和AWSCC提供者文档 16.使用AWS-IA GenAI模块 17.执行Terraform工作流 18.使用地理编码搜索地点 19.获取特定地点的详细信息 20.反向地理编码坐标到地址 21.搜索指定位置附近的地点 22.搜索当前开放的地点 23.计算位置之间的路线 24.优化路线点以提高路由效率 25.使用FAISS和Amazon Bedrock嵌入索引Git仓库 26.在仓库内执行语义搜索 27.分析仓库结构 28.在AWS组织中搜索GitHub仓库 29.支持文本和二进制的文件访问", "tools": [{"name": "Search Documentation", "description": "Search AWS documentation and best practices using the official AWS search API.", "parameter": {}}, {"name": "Get Content Recommendations", "description": "Get content recommendations for AWS documentation pages.", "parameter": {}}, {"name": "Convert Documentation to Markdown", "description": "Convert AWS documentation to markdown format.", "parameter": {}}, {"name": "Discover Knowledge Bases", "description": "Discover Amazon Bedrock Knowledge Bases and their data sources.", "parameter": {}}, {"name": "Query Knowledge Bases", "description": "Query Amazon Bedrock Knowledge Bases with natural language.", "parameter": {}}, {"name": "Filter Results by Data Source", "description": "Filter query results by data source.", "parameter": {}}, {"name": "Rerank Results", "description": "Rerank query results.", "parameter": {}}, {"name": "AWS CDK Project Analysis", "description": "Analyze and assist with AWS CDK projects.", "parameter": {}}, {"name": "CDK Construct Recommendations", "description": "Provide recommendations for CDK constructs.", "parameter": {}}, {"name": "Infrastructure as Code Best Practices", "description": "Provide best practices for infrastructure as code.", "parameter": {}}, {"name": "Analyze and Visualize Costs", "description": "Analyze and visualize AWS costs.", "parameter": {}}, {"name": "Query Cost Data with Natural Language", "description": "Query cost data using natural language.", "parameter": {}}, {"name": "Generate Cost Reports and Insights", "description": "Generate detailed cost reports and insights.", "parameter": {}}, {"name": "Text-Based Image Generation", "description": "Generate images using text with customizable parameters.", "parameter": {}}, {"name": "Color-Guided Image Generation", "description": "Generate images with specific color palettes.", "parameter": {}}, {"name": "Save Generated Images", "description": "Save generated images to the workspace.", "parameter": {}}, {"name": "Generate Professional Diagrams", "description": "Generate professional diagrams using Python code.", "parameter": {}}, {"name": "Customize Diagram Appearance", "description": "Customize the appearance, layout, and styling of diagrams.", "parameter": {}}, {"name": "Code Scanning for Secure Diagram Generation", "description": "Scan code to ensure secure diagram generation.", "parameter": {}}, {"name": "Run AWS Lambda Functions", "description": "Select and run AWS Lambda functions as MCP tools without code changes.", "parameter": {}}, {"name": "Security-First Development Workflow", "description": "Implement a security-first development workflow.", "parameter": {}}, {"name": "Checkov Integration", "description": "Integrate Checkov for security checks.", "parameter": {}}, {"name": "AWS and AWSCC Provider Documentation", "description": "Provide documentation for AWS and AWSCC providers.", "parameter": {}}, {"name": "AWS-IA GenAI Modules", "description": "Use AWS-IA GenAI modules.", "parameter": {}}, {"name": "Terraform Workflow Execution", "description": "Execute Terraform workflows.", "parameter": {}}, {"name": "Search for Places Using Geocoding", "description": "Search for places using geocoding.", "parameter": {}}, {"name": "Get Details for Specific Places", "description": "Get details for specific places by PlaceId.", "parameter": {}}, {"name": "Reverse Geocode Coordinates to Addresses", "description": "Reverse geocode coordinates to addresses.", "parameter": {}}, {"name": "Search for Places Near a Location", "description": "Search for places near a specified location.", "parameter": {}}, {"name": "Search for Places That Are Currently Open", "description": "Search for places that are currently open.", "parameter": {}}, {"name": "Calculate Routes Between Locations", "description": "Calculate routes between locations with turn-by-turn directions.", "parameter": {}}, {"name": "Optimize Waypoints for Efficient Routing", "description": "Optimize waypoints for efficient routing.", "parameter": {}}, {"name": "Repository Indexing", "description": "Index Git repositories using FAISS and Amazon Bedrock embeddings.", "parameter": {}}, {"name": "Semantic Search Within Repositories", "description": "Perform semantic search within repositories.", "parameter": {}}, {"name": "Repository Structure Analysis", "description": "Analyze the structure of repositories.", "parameter": {}}, {"name": "GitHub Repository Search in AWS Organizations", "description": "Search GitHub repositories within AWS organizations.", "parameter": {}}, {"name": "File Access with Text and Binary Support", "description": "Access files with text and binary support.", "parameter": {}}], "domains": [{"name": "Cloud Service Integration", "description": "云服务集成，调用与管理云平台 API(如 AWS/Azure)，支持云资源对接与 AI 服务整合"}, {"name": "Document Format Conversion", "description": "文档格式转换,实现不同文档类型（如 PDF/Word/Markdown）的兼容性转换"}, {"name": "Financial Service", "description": "金融服务,包括支付处理、理财管理、云成本分析及财务报表生成"}, {"name": "Image Processing", "description": "图像处理与生成,包括传统图片编辑、AI 图像生成、图表绘制与可视化"}, {"name": "Code Toolkit", "description": "代码工具集,版本控制(如git命令执行)、代码生成、代码执行、测试等"}, {"name": "Location & Environmental Service", "description": "位置与环境服务,包括地理信息查询、导航、路线规划、酒店、机票、天气数据获取等"}, {"name": "Web Data Acquisition", "description": "网络数据采集,包含网页爬虫、内容提取、反爬处理及代码仓库索引分析"}, {"name": "File System", "description": "文件系统管理,包括本地 / 云端文件的存储、读取、修改、权限控制及分类检索"}]}
{"name": "Axiom", "description": "1. Execute APL queries against Axiom datasets 2. List available Axiom datasets", "tools": [{"name": "queryApl", "description": "Execute APL queries against Axiom datasets", "parameter": {}}, {"name": "listDatasets", "description": "List available Axiom datasets", "parameter": {}}], "domains": [{"name": "DataBase Management", "description": "数据库管理,涵盖数据库创建、查询、优化、备份及数据结构设计"}]}
{"name": "Azure", "description": "1. List and manage Azure AI Search services, indexes, and queries 2. List and manage Cosmos DB accounts, databases, containers, and items 3. Execute SQL queries against Cosmos DB containers 4. List and manage Azure Database for PostgreSQL - Flexible Server databases, tables, and servers 5. List and manage Kusto clusters, databases, tables, and schemas 6. Query Kusto databases using KQL 7. List and manage Storage accounts, blob containers, blobs, and tables 8. Query logs using KQL in Log Analytics workspaces 9. List and manage App Configuration stores, key-value pairs, and labeled configurations 10. Lock/unlock configuration settings in App Configuration stores 11. List, create, and manage keys in Azure Key Vault 12. List and manage resource groups 13. Execute Azure CLI and Azure Developer CLI commands 14. Support for all Azure CLI functionality, JSON output formatting, and cross-platform compatibility 15. Support for template discovery, initialization, provisioning, and deployment", "tools": [{"name": "List Azure AI Search services", "description": "Lists all Azure AI Search services.", "parameter": {}}, {"name": "List indexes and look at their schema and configuration", "description": "Lists indexes and provides details about their schema and configuration.", "parameter": {}}, {"name": "Query search indexes", "description": "Queries search indexes for specific data.", "parameter": {}}, {"name": "List Cosmos DB accounts", "description": "Lists all Cosmos DB accounts.", "parameter": {}}, {"name": "List and query databases", "description": "Lists and queries databases within a Cosmos DB account.", "parameter": {}}, {"name": "Manage containers and items", "description": "Manages containers and items within a Cosmos DB database.", "parameter": {}}, {"name": "Execute SQL queries against containers", "description": "Executes SQL queries against containers within a Cosmos DB database.", "parameter": {}}, {"name": "List and query databases", "description": "Lists and queries databases within an Azure Database for PostgreSQL - Flexible Server.", "parameter": {}}, {"name": "List and get schema for tables", "description": "Lists and retrieves the schema for tables within an Azure Database for PostgreSQL - Flexible Server.", "parameter": {}}, {"name": "List, get configuration and get parameters for servers", "description": "Lists, retrieves configuration, and retrieves parameters for servers within an Azure Database for PostgreSQL - Flexible Server.", "parameter": {}}, {"name": "List Kusto clusters", "description": "Lists all Kusto clusters.", "parameter": {}}, {"name": "List databases in a Kusto cluster", "description": "Lists databases within a Kusto cluster.", "parameter": {}}, {"name": "List tables in a Kusto database", "description": "Lists tables within a Kusto database.", "parameter": {}}, {"name": "Get schema for a Kusto table", "description": "Retrieves the schema for a Kusto table.", "parameter": {}}, {"name": "Sample rows from a Kusto table", "description": "Samples rows from a Kusto table.", "parameter": {}}, {"name": "Query Kusto databases using KQL", "description": "Queries Kusto databases using KQL.", "parameter": {}}, {"name": "List Storage accounts", "description": "Lists all Storage accounts.", "parameter": {}}, {"name": "Manage blob containers and blobs", "description": "Manages blob containers and blobs within a Storage account.", "parameter": {}}, {"name": "List and query Storage tables", "description": "Lists and queries tables within a Storage account.", "parameter": {}}, {"name": "Get container properties and metadata", "description": "Retrieves properties and metadata for a Storage container.", "parameter": {}}, {"name": "List Log Analytics workspaces", "description": "Lists all Log Analytics workspaces.", "parameter": {}}, {"name": "Query logs using KQL", "description": "Queries logs using KQL.", "parameter": {}}, {"name": "List available tables", "description": "Lists available tables within a Log Analytics workspace.", "parameter": {}}, {"name": "Configure monitoring options", "description": "Configures monitoring options within a Log Analytics workspace.", "parameter": {}}, {"name": "List App Configuration stores", "description": "Lists all App Configuration stores.", "parameter": {}}, {"name": "Manage key-value pairs", "description": "Manages key-value pairs within an App Configuration store.", "parameter": {}}, {"name": "Handle labeled configurations", "description": "Handles labeled configurations within an App Configuration store.", "parameter": {}}, {"name": "Lock/unlock configuration settings", "description": "Locks or unlocks configuration settings within an App Configuration store.", "parameter": {}}, {"name": "List, create, and get keys", "description": "Lists, creates, and retrieves keys within an Azure Key Vault.", "parameter": {}}, {"name": "List resource groups", "description": "Lists all resource groups.", "parameter": {}}, {"name": "Resource group management operations", "description": "Performs management operations on resource groups.", "parameter": {}}, {"name": "Execute Azure CLI commands directly", "description": "Executes Azure CLI commands directly.", "parameter": {}}, {"name": "Support for all Azure CLI functionality", "description": "Supports all Azure CLI functionality.", "parameter": {}}, {"name": "JSON output formatting", "description": "Formats output in JSON.", "parameter": {}}, {"name": "Cross-platform compatibility", "description": "Ensures cross-platform compatibility.", "parameter": {}}, {"name": "Execute Azure Developer CLI commands directly", "description": "Executes Azure Developer CLI commands directly.", "parameter": {}}, {"name": "Support for template discovery, template initialization, provisioning and deployment", "description": "Supports template discovery, template initialization, provisioning, and deployment.", "parameter": {}}, {"name": "Cross-platform compatibility", "description": "Ensures cross-platform compatibility.", "parameter": {}}], "domains": [{"name": "Cloud Service Integration", "description": "云服务集成，调用与管理云平台 API(如 AWS/Azure)，支持云资源对接与 AI 服务整合"}, {"name": "DataBase Management", "description": "数据库管理，涵盖数据库创建、查询、优化、备份及数据结构设计"}, {"name": "DevOps Pipeline Management", "description": "DevOps流水线管理，包括持续集成(CI)构建(如Jenkins/GitLab CI)、工作流定义及持续部署(CD)自动化，支持跨平台应用交付(如Kubernetes集群部署、云平台发布)等"}]}
{"name": "Bankless Onchain", "description": "1.从各种区块链网络读取智能合约状态 2.检索代理实现合约地址 3.根据主题获取合约事件日志 4.从事件名称和参数类型生成事件主题签名", "tools": [{"name": "read_contract", "description": "Read state from smart contracts on various blockchain networks.", "parameter": {"network": "(string, required) The blockchain network (e.g., 'ethereum', 'polygon')", "contract": "(string, required) The contract address", "method": "(string, required) The contract method to call", "inputs": "(array, required) Input parameters for the method call, each containing: { type (string), value (any) }", "outputs": "(array, required) Expected output types, each containing: { type (string) }"}}, {"name": "get_proxy", "description": "Retrieve proxy implementation contract addresses.", "parameter": {"network": "(string, required) The blockchain network (e.g., 'ethereum', 'base')", "contract": "(string, required) The contract address"}}, {"name": "get_events", "description": "Fetch event logs for a contract based on topics.", "parameter": {"network": "(string, required) The blockchain network (e.g., 'ethereum', 'base')", "addresses": "(array, required) List of contract addresses to filter events", "topic": "(string, required) Primary topic to filter events", "optionalTopics": "(array, optional) Optional additional topics (can include null values)"}}, {"name": "build_event_topic", "description": "Generate an event topic signature from event name and argument types.", "parameter": {"network": "(string, required) The blockchain network (e.g., 'ethereum', 'base')", "name": "(string, required) Event name (e.g., 'Transfer(address,address,uint256)')", "arguments": "(array, required) Event arguments types, each containing: { type (string) }"}}], "domains": [{"name": "Blockchain Service", "description": "区块链服务，包括智能合约状态读取、代理合约地址检索、事件日志获取及事件主题签名生成"}]}
{"name": "Bitrise", "description": "Bitrise CI/CD平台操作,包括:应用管理、构建触发与监控、工作流配置、Webhook管理、缓存管理、流水线管理、工作区管理、用户与成员管理、发布管理(测试构建与测试者管理)", "tools": [{"name": "list_apps", "description": "List all the apps available for the authenticated account", "parameter": {"sort_by": "(Optional, string) Order of the apps: last_build_at (default) or created_at", "next": "(Optional, string) Slug of the first app in the response", "limit": "(Optional, integer) Max number of elements per page (default: 50)"}}, {"name": "register_app", "description": "Add a new app to Bitrise", "parameter": {"repo_url": "(string) Repository URL", "is_public": "(boolean) Whether the app's builds visibility is 'public'", "organization_slug": "(string) The organization (aka workspace) the app to add to", "project_type": "(Optional, string) Type of project (ios, android, etc.)", "provider": "(Optional, string) github"}}, {"name": "finish_bitrise_app", "description": "Finish the setup of a Bitrise app", "parameter": {"app_slug": "(string) The slug of the Bitrise app to finish setup for", "project_type": "(Optional, string) The type of project (e.g., android, ios, flutter, etc.)", "stack_id": "(Optional, string) The stack ID to use for the app", "mode": "(Optional, string) The mode of setup", "config": "(Optional, string) The configuration to use for the app"}}, {"name": "get_app", "description": "Get the details of a specific app", "parameter": {"app_slug": "(string) Identifier of the Bitrise app"}}, {"name": "delete_app", "description": "Delete an app from Bitrise", "parameter": {"app_slug": "(string) Identifier of the Bitrise app"}}, {"name": "update_app", "description": "Update an app", "parameter": {"app_slug": "(string) Identifier of the Bitrise app", "is_public": "(boolean) Whether the app's builds visibility is 'public'", "project_type": "(string) Type of project", "provider": "(string) Repository provider", "repo_url": "(string) Repository URL"}}, {"name": "get_bitrise_yml", "description": "Get the current Bitrise YML config file of a specified Bitrise app", "parameter": {"app_slug": "(string) Identifier of the Bitrise app"}}, {"name": "update_bitrise_yml", "description": "Update the Bitrise YML config file of a specified Bitrise app", "parameter": {"app_slug": "(string) Identifier of the Bitrise app", "bitrise_yml_as_json": "(string) The new Bitrise YML config file content"}}, {"name": "list_branches", "description": "List the branches with existing builds of an app's repository", "parameter": {"app_slug": "(string) Identifier of the Bitrise app"}}, {"name": "register_ssh_key", "description": "Add an SSH-key to a specific app", "parameter": {"app_slug": "(string) Identifier of the Bitrise app", "auth_ssh_private_key": "(string) Private SSH key", "auth_ssh_public_key": "(string) Public SSH key", "is_register_key_into_provider_service": "(boolean) Register the key in the provider service"}}, {"name": "register_webhook", "description": "Register an incoming webhook for a specific application", "parameter": {"app_slug": "(string) Identifier of the Bitrise app"}}, {"name": "list_builds", "description": "List all the builds of a specified Bitrise app or all accessible builds", "parameter": {"app_slug": "(Optional, string) Identifier of the Bitrise app", "sort_by": "(Optional, string) Order of builds: created_at (default), running_first", "branch": "(Optional, string) Filter builds by branch", "workflow": "(Optional, string) Filter builds by workflow", "status": "(Optional, integer) Filter builds by status (0: not finished, 1: successful, 2: failed, 3: aborted, 4: in-progress)", "next": "(Optional, string) Slug of the first build in the response", "limit": "(Optional, integer) Max number of elements per page (default: 50)"}}, {"name": "trigger_bitrise_build", "description": "Trigger a new build/pipeline for a specified Bitrise app", "parameter": {"app_slug": "(string) Identifier of the Bitrise app", "branch": "(Optional, string) The branch to build (default: main)", "workflow_id": "(Optional, string) The workflow to build", "commit_message": "(Optional, string) The commit message for the build", "commit_hash": "(Optional, string) The commit hash for the build"}}, {"name": "get_build", "description": "Get a specific build of a given app", "parameter": {"app_slug": "(string) Identifier of the Bitrise app", "build_slug": "(string) Identifier of the build"}}, {"name": "abort_build", "description": "Abort a specific build", "parameter": {"app_slug": "(string) Identifier of the Bitrise app", "build_slug": "(string) Identifier of the build", "reason": "(Optional, string) Reason for aborting the build"}}, {"name": "get_build_log", "description": "Get the build log of a specified build of a Bitrise app", "parameter": {"app_slug": "(string) Identifier of the Bitrise app", "build_slug": "(string) Identifier of the Bitrise build"}}, {"name": "get_build_bitrise_yml", "description": "Get the bitrise.yml of a build", "parameter": {"app_slug": "(string) Identifier of the Bitrise app", "build_slug": "(string) Identifier of the build"}}, {"name": "list_build_workflows", "description": "List the workflows of an app", "parameter": {"app_slug": "(string) Identifier of the Bitrise app"}}, {"name": "list_artifacts", "description": "Get a list of all build artifacts", "parameter": {"app_slug": "(string) Identifier of the Bitrise app", "build_slug": "(string) Identifier of the build", "next": "(Optional, string) Slug of the first artifact in the response", "limit": "(Optional, integer) Max number of elements per page (default: 50)"}}, {"name": "get_artifact", "description": "Get a specific build artifact", "parameter": {"app_slug": "(string) Identifier of the Bitrise app", "build_slug": "(string) Identifier of the build", "artifact_slug": "(string) Identifier of the artifact"}}, {"name": "delete_artifact", "description": "Delete a build artifact", "parameter": {"app_slug": "(string) Identifier of the Bitrise app", "build_slug": "(string) Identifier of the build", "artifact_slug": "(string) Identifier of the artifact"}}, {"name": "update_artifact", "description": "Update a build artifact", "parameter": {"app_slug": "(string) Identifier of the Bitrise app", "build_slug": "(string) Identifier of the build", "artifact_slug": "(string) Identifier of the artifact", "is_public_page_enabled": "(boolean) Enable public page for the artifact"}}, {"name": "list_outgoing_webhooks", "description": "List the outgoing webhooks of an app", "parameter": {"app_slug": "(string) Identifier of the Bitrise app"}}, {"name": "delete_outgoing_webhook", "description": "Delete the outgoing webhook of an app", "parameter": {"app_slug": "(string) Identifier of the Bitrise app", "webhook_slug": "(string) Identifier of the webhook"}}, {"name": "update_outgoing_webhook", "description": "Update an outgoing webhook for an app", "parameter": {"app_slug": "(string) Identifier of the Bitrise app", "webhook_slug": "(string) Identifier of the webhook", "events": "(array) List of events to trigger the webhook", "url": "(string) URL of the webhook", "headers": "(Optional, array) Headers to be sent with the webhook"}}, {"name": "create_outgoing_webhook", "description": "Create an outgoing webhook for an app", "parameter": {"app_slug": "(string) Identifier of the Bitrise app", "events": "(array) List of events to trigger the webhook", "url": "(string) URL of the webhook", "headers": "(Optional, array) Headers to be sent with the webhook"}}, {"name": "list_cache_items", "description": "List the key-value cache items belonging to an app", "parameter": {"app_slug": "(string) Identifier of the Bitrise app"}}, {"name": "delete_all_cache_items", "description": "Delete all key-value cache items belonging to an app", "parameter": {"app_slug": "(string) Identifier of the Bitrise app"}}, {"name": "delete_cache_item", "description": "Delete a key-value cache item", "parameter": {"app_slug": "(string) Identifier of the Bitrise app", "cache_item_id": "(string) Identifier of the cache item"}}, {"name": "get_cache_item_download_url", "description": "Get the download URL of a key-value cache item", "parameter": {"app_slug": "(string) Identifier of the Bitrise app", "cache_item_id": "(string) Identifier of the cache item"}}, {"name": "list_pipelines", "description": "List all pipelines and standalone builds of an app", "parameter": {"app_slug": "(string) Identifier of the Bitrise app"}}, {"name": "get_pipeline", "description": "Get a pipeline of a given app", "parameter": {"app_slug": "(string) Identifier of the Bitrise app", "pipeline_id": "(string) Identifier of the pipeline"}}, {"name": "abort_pipeline", "description": "Abort a pipeline", "parameter": {"app_slug": "(string) Identifier of the Bitrise app", "pipeline_id": "(string) Identifier of the pipeline", "reason": "(Optional, string) Reason for aborting the pipeline"}}, {"name": "rebuild_pipeline", "description": "Rebuild a pipeline", "parameter": {"app_slug": "(string) Identifier of the Bitrise app", "pipeline_id": "(string) Identifier of the pipeline"}}, {"name": "list_group_roles", "description": "List group roles for an app", "parameter": {"app_slug": "(string) Identifier of the Bitrise app", "role_name": "(string) Name of the role"}}, {"name": "replace_group_roles", "description": "Replace group roles for an app", "parameter": {"app_slug": "(string) Identifier of the Bitrise app", "role_name": "(string) Name of the role", "group_slugs": "(array) List of group slugs"}}, {"name": "list_workspaces", "description": "List the workspaces the user has access to", "parameter": {}}, {"name": "get_workspace", "description": "Get details for one workspace", "parameter": {"workspace_slug": "(string) Slug of the Bitrise workspace"}}, {"name": "get_workspace_groups", "description": "Get the groups in a workspace", "parameter": {"workspace_slug": "(string) Slug of the Bitrise workspace"}}, {"name": "create_workspace_group", "description": "Create a group in a workspace", "parameter": {"workspace_slug": "(string) Slug of the Bitrise workspace", "group_name": "(string) Name of the group"}}, {"name": "get_workspace_members", "description": "Get the members in a workspace", "parameter": {"workspace_slug": "(string) Slug of the Bitrise workspace"}}, {"name": "invite_member_to_workspace", "description": "Invite a member to a workspace", "parameter": {"workspace_slug": "(string) Slug of the Bitrise workspace", "email": "(string) Email address of the user"}}, {"name": "add_member_to_group", "description": "Add a member to a group", "parameter": {"group_slug": "(string) Slug of the group", "user_slug": "(string) Slug of the user"}}, {"name": "me", "description": "Get info from the currently authenticated user account", "parameter": {}}, {"name": "create_connected_app", "description": "Add a new Release Management connected app to Bitrise", "parameter": {"platform": "(string) The mobile platform for the connected app (ios/android)", "store_app_id": "(string) The app store identifier for the connected app", "workspace_slug": "(string) Identifier of the Bitrise workspace", "id": "(Optional, string) An uuidV4 identifier for your new connected app", "manual_connection": "(Optional, boolean) Indicates a manual connection", "project_id": "(Optional, string) Specifies which Bitrise Project to associate with", "store_app_name": "(Optional, string) App name for manual connections", "store_credential_id": "(Optional, string) Selection of credentials added on Bitrise"}}, {"name": "list_connected_apps", "description": "List Release Management connected apps available for the authenticated account within a workspace", "parameter": {"workspace_slug": "(string) Identifier of the Bitrise workspace", "items_per_page": "(Optional, integer) Maximum number of connected apps per page", "page": "(Optional, integer) Page number to return", "platform": "(Optional, string) Filter for a specific mobile platform", "project_id": "(Optional, string) Filter for a specific Bitrise Project", "search": "(Optional, string) Search by bundle ID, package name, or app title"}}, {"name": "get_connected_app", "description": "Gives back a Release Management connected app for the authenticated account", "parameter": {"id": "(string) Identifier of the Release Management connected app"}}, {"name": "update_connected_app", "description": "Updates a connected app", "parameter": {"connected_app_id": "(string) The uuidV4 identifier for your connected app", "store_app_id": "(string) The store identifier for your app", "connect_to_store": "(Optional, boolean) Check validity against the App Store or Google Play", "store_credential_id": "(Optional, string) Selection of credentials added on Bitrise"}}, {"name": "list_installable_artifacts", "description": "List Release Management installable artifacts of a connected app", "parameter": {"connected_app_id": "(string) Identifier of the Release Management connected app", "after_date": "(Optional, string) Start of the interval for artifact creation/upload", "artifact_type": "(Optional, string) Filter for a specific artifact type", "before_date": "(Optional, string) End of the interval for artifact creation/upload", "branch": "(Optional, string) Filter for the Bitrise CI branch", "distribution_ready": "(Optional, boolean) Filter for distribution ready artifacts", "items_per_page": "(Optional, integer) Maximum number of artifacts per page", "page": "(Optional, integer) Page number to return", "platform": "(Optional, string) Filter for a specific mobile platform", "search": "(Optional, string) Search by version, filename or build number", "source": "(Optional, string) Filter for the source of installable artifacts", "store_signed": "(Optional, boolean) Filter for store ready installable artifacts", "version": "(Optional, string) Filter for a specific version", "workflow": "(Optional, string) Filter for a specific Bitrise CI workflow"}}, {"name": "generate_installable_artifact_upload_url", "description": "Generates a signed upload URL for an installable artifact to be uploaded to Bitrise", "parameter": {"connected_app_id": "(string) Identifier of the Release Management connected app", "installable_artifact_id": "(string) An uuidv4 identifier for the installable artifact", "file_name": "(string) The name of the installable artifact file", "file_size_bytes": "(integer) The byte size of the installable artifact file", "branch": "(Optional, string) Name of the CI branch", "with_public_page": "(Optional, boolean) Enable public install page", "workflow": "(Optional, string) Name of the CI workflow"}}, {"name": "get_installable_artifact_upload_and_processing_status", "description": "Gets the processing and upload status of an installable artifact", "parameter": {"connected_app_id": "(string) Identifier of the Release Management connected app", "installable_artifact_id": "(string) The uuidv4 identifier for the installable artifact"}}, {"name": "set_installable_artifact_public_install_page", "description": "Changes whether public install page should be available for the installable artifact", "parameter": {"connected_app_id": "(string) Identifier of the Release Management connected app", "installable_artifact_id": "(string) The uuidv4 identifier for the installable artifact", "with_public_page": "(boolean) Boolean flag for enabling/disabling public install page"}}, {"name": "list_build_distribution_versions", "description": "Lists Build Distribution versions available for testers", "parameter": {"connected_app_id": "(string) The uuidV4 identifier of the connected app", "items_per_page": "(Optional, integer) Maximum number of versions per page", "page": "(Optional, integer) Page number to return"}}, {"name": "list_build_distribution_version_test_builds", "description": "Gives back a list of test builds for the given build distribution version", "parameter": {"connected_app_id": "(string) The uuidV4 identifier of the connected app", "version": "(string) The version of the build distribution", "items_per_page": "(Optional, integer) Maximum number of test builds per page", "page": "(Optional, integer) Page number to return"}}, {"name": "create_tester_group", "description": "Creates a tester group for a Release Management connected app", "parameter": {"connected_app_id": "(string) The uuidV4 identifier of the connected app", "name": "(string) The name for the new tester group", "auto_notify": "(Optional, boolean) Indicates automatic notifications for the group"}}, {"name": "notify_tester_group", "description": "Notifies a tester group about a new test build", "parameter": {"connected_app_id": "(string) The uuidV4 identifier of the connected app", "id": "(string) The uuidV4 identifier of the tester group", "test_build_id": "(string) The unique identifier of the test build"}}, {"name": "add_testers_to_tester_group", "description": "Adds testers to a tester group of a connected app", "parameter": {"connected_app_id": "(string) The uuidV4 identifier of the connected app", "id": "(string) The uuidV4 identifier of the tester group", "user_slugs": "(array) The list of users identified by slugs to be added"}}, {"name": "update_tester_group", "description": "Updates the given tester group settings", "parameter": {"connected_app_id": "(string) The uuidV4 identifier of the connected app", "id": "(string) The uuidV4 identifier of the tester group", "auto_notify": "(Optional, boolean) Setting for automatic email notifications", "name": "(Optional, string) The new name for the tester group"}}, {"name": "list_tester_groups", "description": "Gives back a list of tester groups related to a specific connected app", "parameter": {"connected_app_id": "(string) The uuidV4 identifier of the connected app", "items_per_page": "(Optional, integer) Maximum number of tester groups per page", "page": "(Optional, integer) Page number to return"}}, {"name": "get_tester_group", "description": "Gives back the details of the selected tester group", "parameter": {"connected_app_id": "(string) The uuidV4 identifier of the connected app", "id": "(string) The uuidV4 identifier of the tester group"}}, {"name": "get_potential_testers", "description": "Gets a list of potential testers who can be added to a specific tester group", "parameter": {"connected_app_id": "(string) The uuidV4 identifier of the connected app", "id": "(string) The uuidV4 identifier of the tester group", "items_per_page": "(Optional, integer) Maximum number of potential testers per page", "page": "(Optional, integer) Page number to return", "search": "(Optional, string) Search for testers by email or username"}}], "domains": [{"name": "DevOps Pipeline Management", "description": "DevOps流水线管理，包括持续集成(CI)构建(如Jenkins/GitLab CI)、工作流定义及持续部署(CD)自动化，支持跨平台应用交付(如Kubernetes集群部署、云平台发布)等"}]}
{"name": "Box", "description": "Box云存储服务操作,包括:用户信息获取、文件搜索与读取、AI文件分析、文件夹管理、文件上传下载、文档生成模板管理及作业跟踪", "tools": [{"name": "box_who_am_i", "description": "Get your current user information and check connection status.", "parameter": {}}, {"name": "box_authorize_app_tool", "description": "Start the Box application authorization process.", "parameter": {}}, {"name": "box_search_tool", "description": "Search for files in Box.", "parameter": {"query": "(str) The query to search for.", "file_extensions": "(List[str], optional) File extensions to filter results.", "where_to_look_for_query": "(List[str], optional) Locations to search (e.g. NAME, DESCRIPTION, FILE_CONTENT, COMMENTS, TAG).", "ancestor_folder_ids": "(List[str], optional) List of folder IDs in which to search."}}, {"name": "box_read_tool", "description": "Read the text content of a Box file.", "parameter": {"file_id": "(str) ID of the file to read"}}, {"name": "box_ask_ai_tool", "description": "Ask Box AI about a file.", "parameter": {"file_id": "(str) ID of the file", "prompt": "(str) Question for the AI"}}, {"name": "box_hubs_ask_ai_tool", "description": "Ask Box AI about a hub. There is currently no way via API to discover a hub ID, so you must know the ID to use this tool. We will fix this in the future.", "parameter": {"hubs_id": "(str) ID of the hub", "prompt": "(str) Question for the AI"}}, {"name": "box_search_folder_by_name", "description": "Locate a folder by name.", "parameter": {"folder_name": "(str) Name of the folder"}}, {"name": "box_ai_extract_data", "description": "Extract data from a file using AI.", "parameter": {"file_id": "(str) ID of the file", "fields": "(str) Fields to extract"}}, {"name": "box_list_folder_content_by_folder_id", "description": "List folder contents.", "parameter": {"folder_id": "(str) ID of the folder", "is_recursive": "(bool) Whether to list recursively"}}, {"name": "box_manage_folder_tool", "description": "Create, update, or delete folders in Box.", "parameter": {"action": "(str) Action to perform: 'create', 'delete', or 'update'", "folder_id": "(str, optional) ID of the folder (required for delete/update)", "name": "(str, optional) Folder name (required for create, optional for update)", "parent_id": "(str, optional) Parent folder ID (required for create, optional for update)", "description": "(str, optional) Folder description (optional for update)", "recursive": "(bool, optional) Whether to delete recursively (optional for delete)"}}, {"name": "box_upload_file_from_path_tool", "description": "Upload a file to Box from a local filesystem path.", "parameter": {"file_path": "(str) Local file path", "folder_id": "(str, optional) Destination folder ID (defaults to '0')", "new_file_name": "(str, optional) New file name (if not provided, uses the original file name)"}}, {"name": "box_upload_file_from_content_tool", "description": "Upload content as a file to Box.", "parameter": {"content": "(str | bytes) Content to upload (text or binary)", "file_name": "(str) The name to assign the file", "folder_id": "(str, optional) Destination folder ID (defaults to '0')", "is_base64": "(bool, optional) Indicates if the provided content is base64 encoded"}}, {"name": "box_download_file_tool", "description": "Download a file from Box.", "parameter": {"file_id": "(str) The ID of the file to download", "save_file": "(bool, optional) Whether to save the file locally", "save_path": "(str, optional) The local path where the file should be saved"}}, {"name": "box_docgen_create_batch_tool", "description": "Generate documents using a Box Doc Gen template and a local JSON file.", "parameter": {"file_id": "(str) Template file ID", "destination_folder_id": "(str) Folder ID where generated documents should be stored", "user_input_file_path": "(str) Path to a JSON file with input data", "output_type": "(str, optional) Output format (default is 'pdf')"}}, {"name": "box_docgen_get_job_tool", "description": "Fetch a single Doc Gen job by its ID.", "parameter": {"job_id": "(str) The job identifier"}}, {"name": "box_docgen_list_jobs_tool", "description": "List all Doc Gen jobs associated with the current user.", "parameter": {"marker": "(str | None, optional) Pagination marker", "limit": "(int | None, optional) Maximum number of jobs to return"}}, {"name": "box_docgen_list_jobs_by_batch_tool", "description": "List Doc Gen jobs belonging to a specific batch.", "parameter": {"batch_id": "(str) The batch identifier", "marker": "(str | None, optional) Pagination marker", "limit": "(int | None, optional) Maximum number of jobs to return"}}, {"name": "box_docgen_template_create_tool", "description": "Mark a file as a Box Doc Gen template.", "parameter": {"file_id": "(str) File ID to mark as a template"}}, {"name": "box_docgen_template_list_tool", "description": "List all available Box Doc Gen templates.", "parameter": {"marker": "(str | None, optional) Pagination marker", "limit": "(int | None, optional) Maximum number of templates to list"}}, {"name": "box_docgen_template_delete_tool", "description": "Remove the Doc Gen template marking from a file.", "parameter": {"template_id": "(str) The template identifier"}}, {"name": "box_docgen_template_get_by_id_tool", "description": "Retrieve details of a specific Doc Gen template.", "parameter": {"template_id": "(str) The template identifier"}}, {"name": "box_docgen_template_list_tags_tool", "description": "List all tags associated with a Box Doc Gen template.", "parameter": {"template_id": "(str) The template ID", "template_version_id": "(str | None, optional) Specific version ID", "marker": "(str | None, optional) Pagination marker", "limit": "(int | None, optional) Maximum number of tags to return"}}, {"name": "box_docgen_template_list_jobs_tool", "description": "List all Doc Gen jobs that used a specific template.", "parameter": {"template_id": "(str) The template identifier", "marker": "(str | None, optional) Pagination marker", "limit": "(int | None, optional) Maximum number of jobs to list"}}], "domains": [{"name": "Cloud Service Integration", "description": "云服务集成，调用与管理云平台 API(如 AWS/Azure)，支持云资源对接与 AI 服务整合"}, {"name": "File System", "description": "文件系统管理,包括本地 / 云端文件的存储、读取、修改、权限控制及分类检索"}]}
{"name": "Chroma", "description": "Chroma collection management, including: listing, creating, peeking, getting info, counting, modifying, and deleting collections. Also includes document operations like adding, querying, retrieving, updating, and deleting documents with semantic search and filtering.", "tools": [{"name": "chroma_list_collections", "description": "List all collections with pagination support", "parameter": {}}, {"name": "chroma_create_collection", "description": "Create a new collection with optional HNSW configuration", "parameter": {}}, {"name": "chroma_peek_collection", "description": "View a sample of documents in a collection", "parameter": {}}, {"name": "chroma_get_collection_info", "description": "Get detailed information about a collection", "parameter": {}}, {"name": "chroma_get_collection_count", "description": "Get the number of documents in a collection", "parameter": {}}, {"name": "chroma_modify_collection", "description": "Update a collection's name or metadata", "parameter": {}}, {"name": "chroma_delete_collection", "description": "Delete a collection", "parameter": {}}, {"name": "chroma_add_documents", "description": "Add documents with optional metadata and custom IDs", "parameter": {}}, {"name": "chroma_query_documents", "description": "Query documents using semantic search with advanced filtering", "parameter": {}}, {"name": "chroma_get_documents", "description": "Retrieve documents by IDs or filters with pagination", "parameter": {}}, {"name": "chroma_update_documents", "description": "Update existing documents' content, metadata, or embeddings", "parameter": {}}, {"name": "chroma_delete_documents", "description": "Delete specific documents from a collection", "parameter": {}}], "domains": [{"name": "DataBase Management", "description": "数据库管理，涵盖数据库创建、查询、优化、备份及数据结构设计"}]}
{"name": "CircleCI", "description": "1. Retrieve CircleCI build failure logs 2. Identify flaky tests in CircleCI projects 3. Get latest pipeline status for a branch 4. Retrieve test metadata for CircleCI jobs 5. Assist with CircleCI configuration tasks 6. Generate structured prompt templates for AI applications 7. Generate test cases for prompt templates", "tools": [{"name": "get_build_failure_logs", "description": "Retrieves detailed failure logs from CircleCI builds. Can be used with CircleCI URLs or local project context.", "parameter": {"url_or_context": "(string) Either a CircleCI URL or a combination of workspace root path, Git remote URL, and branch name"}}, {"name": "find_flaky_tests", "description": "Identifies flaky tests in a CircleCI project by analyzing test execution history. Can be used with CircleCI project URLs or local project context.", "parameter": {"url_or_context": "(string) Either a CircleCI project URL or a combination of workspace root path and Git remote URL"}}, {"name": "get_latest_pipeline_status", "description": "Retrieves the status of the latest pipeline for a given branch. Can be used with CircleCI project URLs or local project context.", "parameter": {"url_or_context": "(string) Either a CircleCI project URL or a combination of workspace root path, Git remote URL, and branch name"}}, {"name": "get_job_test_results", "description": "Retrieves test metadata for CircleCI jobs. Can be used with CircleCI URLs or local project context.", "parameter": {"url_or_context": "(string) Either a CircleCI URL (job, workflow, or pipeline) or a combination of workspace root path, Git remote URL, and branch name"}}, {"name": "config_helper", "description": "Assists with CircleCI configuration tasks by providing guidance and validation. Can validate CircleCI config files.", "parameter": {"config_path": "(string) Path to the .circleci/config.yml file"}}, {"name": "create_prompt_template", "description": "Helps generate structured prompt templates for AI-enabled applications based on feature requirements.", "parameter": {"requirements": "(string) User requirements for the prompt template"}}, {"name": "recommend_prompt_template_tests", "description": "Generates test cases for prompt templates to ensure they produce expected results.", "parameter": {"template": "(string) The prompt template to generate tests for"}}], "domains": [{"name": "DevOps Pipeline Management", "description": "DevOps流水线管理，包括持续集成(CI)构建(如Jenkins/GitLab CI)、工作流定义及持续部署(CD)自动化，支持跨平台应用交付(如Kubernetes集群部署、云平台发布)等"}, {"name": "AI Model Lifecycle Management", "description": "人工智能模型训练与推理，涵盖深度学习与传统机器学习框架建模、模型优化与部署、实验跟踪、数据预处理及全流程生命周期管理"}]}
{"name": "ClickHouse", "description": "1.在ClickHouse集群上执行SQL查询 2.列出ClickHouse集群中的所有数据库 3.列出数据库中的所有表", "tools": [{"name": "run_select_query", "description": "Execute SQL queries on your ClickHouse cluster.", "parameter": {"sql": "(string) The SQL query to execute."}}, {"name": "list_databases", "description": "List all databases on your ClickHouse cluster.", "parameter": {}}, {"name": "list_tables", "description": "List all tables in a database.", "parameter": {"database": "(string) The name of the database."}}], "domains": [{"name": "DataBase Management", "description": "数据库管理，涵盖数据库创建、查询、优化、备份及数据结构设计"}]}
{"name": "Codacy", "description": "Codacy代码质量分析工具集，包括：组织与仓库管理、代码质量指标分析（Grade, Issues, Duplication, Complexity, Coverage）、安全风险管理（SRM）、Pull Request分析、代码分析工具管理、本地CLI分析", "tools": [{"name": "codacy_list_organizations", "description": "List organizations with pagination support.", "parameter": {}}, {"name": "codacy_list_organization_repositories", "description": "List repositories in an organization with pagination support.", "parameter": {}}, {"name": "codacy_get_repository_with_analysis", "description": "Get repository with analysis information, including metrics for Grade, Issues, Duplication, Complexity, and Coverage.", "parameter": {}}, {"name": "codacy_list_repository_issues", "description": "Lists and filters code quality issues in a repository. This is the primary tool for investigating general code quality concerns (e.g., best practices, performance, complexity, style) but NOT security issues. For security-related issues, use the SRM items tool instead.", "parameter": {"severity": "(Optional, string) Filter by issue severity", "category": "(Optional, string) Filter by issue category", "language": "(Optional, string) Filter by programming language", "author": "(Optional, string) Filter by author", "branch": "(Optional, string) Specify the branch for analysis", "pattern": "(Optional, string) Pattern-based searching"}}, {"name": "codacy_list_files", "description": "List files in a repository with pagination support.", "parameter": {}}, {"name": "codacy_get_file_issues", "description": "Get the issue list for a file in a repository.", "parameter": {}}, {"name": "codacy_get_file_coverage", "description": "Get coverage information for a file in the head commit of a repository branch.", "parameter": {}}, {"name": "codacy_get_file_clones", "description": "Get the list of duplication clones (identical or very similar code segments) for a file in a repository.", "parameter": {}}, {"name": "codacy_get_file_with_analysis", "description": "Get detailed analysis information for a file, including metrics for Grade, Issues, Duplication, Complexity, and Coverage.", "parameter": {}}, {"name": "codacy_search_organization_srm_items", "description": "Primary tool to list security items/issues/vulnerabilities/findings across an organization. Results are related to the organization's security and risk management (SRM) dashboard on Codacy.", "parameter": {}}, {"name": "codacy_search_repository_srm_items", "description": "List security items/issues/vulnerabilities/findings for a specific repository.", "parameter": {}}, {"name": "codacy_list_repository_pull_requests", "description": "List pull requests from a repository that the user has access to.", "parameter": {}}, {"name": "codacy_get_repository_pull_request", "description": "Get detailed information about a specific pull request.", "parameter": {}}, {"name": "codacy_list_pull_request_issues", "description": "Returns a list of issues found in a pull request (new or fixed issues).", "parameter": {}}, {"name": "codacy_get_pull_request_files_coverage", "description": "Get diff coverage information for all files in a pull request.", "parameter": {}}, {"name": "codacy_get_pull_request_git_diff", "description": "Returns the human-readable Git diff of a pull request.", "parameter": {}}, {"name": "codacy_list_tools", "description": "List all code analysis tools available in Codacy.", "parameter": {}}, {"name": "codacy_list_repository_tools", "description": "Get analysis tools settings and available tools for a repository.", "parameter": {}}, {"name": "codacy_get_pattern", "description": "Get the definition of a specific pattern.", "parameter": {}}, {"name": "codacy_list_repository_tool_patterns", "description": "List the patterns of a tool available for a repository.", "parameter": {}}, {"name": "codacy_get_issue", "description": "Get detailed information about a specific issue.", "parameter": {}}, {"name": "codacy_cli_analyze", "description": "Run quality analysis locally using Codacy CLI. Features include analyzing specific files or entire directories, using specific tools or all available tools, getting immediate results without waiting for scheduled analysis, and applying fixes based on Codacy configuration.", "parameter": {}}], "domains": [{"name": "Code Toolkit", "description": "代码工具集,版本控制(如git命令执行)、代码生成、代码执行、测试等"}, {"name": "DevOps Pipeline Management", "description": "DevOps流水线管理，包括持续集成(CI)构建(如Jenkins/GitLab CI)、工作流定义及持续部署(CD)自动化，支持跨平台应用交付(如Kubernetes集群部署、云平台发布)等"}]}
{"name": "CodeLogic", "description": "1.从CodeLogic服务器API获取指定代码方法和类的影响评估 2.分析代码和数据库实体之间的影响", "tools": [{"name": "codelogic-method-impact", "description": "Pulls an impact assessment from the CodeLogic server's APIs for the specified code method and class.", "parameter": {"method": "(string) The method that you're working on", "class": "(string) The class associated with the method"}}, {"name": "codelogic-database-impact", "description": "Analyzes impacts between code and database entities.", "parameter": {"entity_type": "(string) The type of database entity (column, table, or view)", "entity_name": "(string) The name of the database entity"}}], "domains": [{"name": "Code Toolkit", "description": "代码工具集,版本控制(如git命令执行)、代码生成、代码执行、测试等"}]}
{"name": "Comet Opik", "description": "1.管理提示词（创建、列表、更新、删除） 2.组织和管理项目/工作区 3.跟踪和分析追踪数据 4.收集和查询指标数据", "tools": [{"name": "Prompts Management", "description": "Create, list, update, and delete prompts", "parameter": {}}, {"name": "Projects/Workspaces Management", "description": "Organize and manage projects", "parameter": {}}, {"name": "Traces", "description": "Track and analyze trace data", "parameter": {}}, {"name": "Metrics", "description": "Gather and query metrics data", "parameter": {}}], "domains": [{"name": "Tool Management", "description": "工具管理，包括工具信息的检索、搜索、添加和移除"}, {"name": "Data Analysis", "description": "数据分析，包括数据收集、查询、追踪和分析"}]}
{"name": "Couchbase", "description": "Couchbase数据库操作,包括:获取作用域和集合列表、获取集合结构、通过ID获取/更新/删除文档、执行SQL++查询", "tools": [{"name": "get_scopes_and_collections", "description": "Get a list of all the scopes and collections in the specified bucket.", "parameter": {}}, {"name": "get_collection_structure", "description": "Get the structure for a collection.", "parameter": {}}, {"name": "get_document_by_id", "description": "Get a document by ID from a specified scope and collection.", "parameter": {}}, {"name": "upsert_document_by_id", "description": "Upsert a document by ID to a specified scope and collection.", "parameter": {}}, {"name": "delete_document_by_id", "description": "Delete a document by ID from a specified scope and collection.", "parameter": {}}, {"name": "run_sqlpp_query", "description": "Run a SQL++ query on a specified scope. The `READ_ONLY_QUERY_MODE` environment variable controls whether data-modifying queries are allowed.", "parameter": {}}], "domains": [{"name": "DataBase Management", "description": "数据库管理，涵盖数据库创建、查询、优化、备份及数据结构设计"}]}
{"name": "Dart", "description": "1. Get user space configuration 2. List, create, retrieve, update, and delete tasks with filtering options 3. List, create, retrieve, update, and delete docs with filtering options", "tools": [{"name": "get_config", "description": "Get information about the user's space, including available assignees, dartboards, folders, statuses, tags, priorities, and sizes", "parameter": {}}, {"name": "list_tasks", "description": "List tasks with optional filtering by assignee, status, dartboard, priority, due date, and more", "parameter": {}}, {"name": "create_task", "description": "Create a new task with title, description, status, priority, size, dates, dartboard, assignees, tags, and parent task", "parameter": {}}, {"name": "get_task", "description": "Retrieve an existing task by its ID", "parameter": {}}, {"name": "update_task", "description": "Update an existing task's properties", "parameter": {}}, {"name": "delete_task", "description": "Move a task to the trash (recoverable)", "parameter": {}}, {"name": "list_docs", "description": "List docs with optional filtering by folder, title, text content, and more", "parameter": {}}, {"name": "create_doc", "description": "Create a new doc with title, text content, and folder", "parameter": {}}, {"name": "get_doc", "description": "Retrieve an existing doc by its ID", "parameter": {}}, {"name": "update_doc", "description": "Update an existing doc's properties", "parameter": {}}, {"name": "delete_doc", "description": "Move a doc to the trash (recoverable)", "parameter": {}}], "domains": [{"name": "Office Productivity", "description": "办公生产力工具,涵盖文档编辑、邮件通信、日程管理及团队协作"}, {"name": "Time & Task Management", "description": "时间与任务管理,涵盖日历日程、待办事项、项目进度跟踪及会议调度"}]}
{"name": "DevHub", "description": "1.获取DevHub账户中的所有业务信息 2.获取特定业务的所有位置信息 3.获取DevHub位置的营业时间 4.更新DevHub位置的营业时间 5.根据地理坐标查找最近的DevHub位置 6.从URL获取DevHub站点ID和详细信息 7.按ID检索博客文章 8.创建新的博客文章 9.更新现有博客文章的标题和/或内容 10.将图像上传到DevHub媒体库", "tools": [{"name": "get_businesses", "description": "Gets all businesses within the DevHub account. Returns a list of businesses with their IDs and names.", "parameter": {}}, {"name": "get_locations", "description": "Gets all locations for a specific business. Returns detailed location information including address, coordinates, and URLs.", "parameter": {"business_id": "(string) The ID of the business."}}, {"name": "get_hours_of_operation", "description": "Gets the hours of operation for a specific DevHub location. Returns a structured list of time ranges for each day of the week.", "parameter": {"location_id": "(string) The ID of the location.", "hours_type": "(Optional, string) The type of hours to retrieve, default is 'primary'."}}, {"name": "update_hours", "description": "Updates the hours of operation for a DevHub location.", "parameter": {"location_id": "(string) The ID of the location.", "new_hours": "(dict) The new hours of operation.", "hours_type": "(Optional, string) The type of hours to update, default is 'primary'."}}, {"name": "get_nearest_location", "description": "Finds the nearest DevHub location based on geographic coordinates.", "parameter": {"business_id": "(string) The ID of the business.", "latitude": "(float) The latitude coordinate.", "longitude": "(float) The longitude coordinate."}}, {"name": "site_from_url", "description": "Gets the DevHub site ID and details from a URL. Returns site ID, URL, and associated location IDs.", "parameter": {"url": "(string) The URL of the DevHub site."}}, {"name": "get_blog_post", "description": "Retrieves a single blog post by ID, including its title, date, and HTML content.", "parameter": {"post_id": "(string) The ID of the blog post."}}, {"name": "create_blog_post", "description": "Creates a new blog post. The content should be in HTML format and should not include an H1 tag.", "parameter": {"site_id": "(string) The ID of the site where the blog post will be created.", "title": "(string) The title of the blog post.", "content": "(string) The HTML content of the blog post."}}, {"name": "update_blog_post", "description": "Updates an existing blog post's title and/or content.", "parameter": {"post_id": "(string) The ID of the blog post.", "title": "(Optional, string) The new title of the blog post.", "content": "(Optional, string) The new HTML content of the blog post."}}, {"name": "upload_image", "description": "Uploads an image to the DevHub media gallery. Supports webp, jpeg, and png formats. The image must be provided as a base64-encoded string.", "parameter": {"base64_image_content": "(string) The base64-encoded content of the image.", "filename": "(string) The filename of the image."}}], "domains": [{"name": "Business Management", "description": "业务管理，包括业务信息获取、位置管理、营业时间更新及媒体内容管理"}, {"name": "Content Management", "description": "内容管理，包括博客文章的创建、更新、检索及媒体上传"}]}
{"name": "Dynatrace", "description": "1.列出Kubernetes等服务的问题详情 2.列出和检索安全问题和漏洞详情 3.执行DQL查询获取事件或日志 4.使用Slack Connector发送Slack消息 5.使用Dynatrace Automation Engine设置通知工作流 6.检索实体的所有权信息", "tools": [{"name": "list_problems", "description": "Lists problem details from your services, such as Kubernetes.", "parameter": {}}, {"name": "get_security_problems", "description": "Lists and retrieves security problems or vulnerability details.", "parameter": {}}, {"name": "execute_dql", "description": "Executes DQL (Dynatrace Query Language) queries to fetch events or logs.", "parameter": {}}, {"name": "send_slack_message", "description": "Sends Slack messages using the Slack Connector.", "parameter": {}}, {"name": "set_up_notification_workflow", "description": "Sets up notification workflows using the Dynatrace Automation Engine.", "parameter": {}}, {"name": "get_ownership", "description": "Retrieves ownership information of an entity.", "parameter": {}}], "domains": [{"name": "DevOps Pipeline Management", "description": "DevOps流水线管理，包括持续集成(CI)构建(如Jenkins/GitLab CI)、工作流定义及持续部署(CD)自动化，支持跨平台应用交付(如Kubernetes集群部署、云平台发布)等"}, {"name": "Cloud Service Integration", "description": "云服务集成，调用与管理云平台 API(如 AWS/Azure)，支持云资源对接与 AI 服务整合"}, {"name": "Office Productivity", "description": "办公生产力工具,涵盖文档编辑、邮件通信、日程管理及团队协作"}]}
{"name": "EduBase", "description": "Retrieve user information from the EduBase platform", "tools": [{"name": "edubase_get_user", "description": "Retrieves user information from the EduBase platform.", "parameter": {}}], "domains": [{"name": "Content Management", "description": "内容管理，包括博客文章的创建、更新、检索及媒体上传"}]}
{"name": "Elasticsearch", "description": "Elasticsearch operations, including: listing indices, getting field mappings, performing searches with query DSL, and retrieving shard information", "tools": [{"name": "list_indices", "description": "List all available Elasticsearch indices", "parameter": {}}, {"name": "get_mappings", "description": "Get field mappings for a specific Elasticsearch index", "parameter": {}}, {"name": "search", "description": "Perform an Elasticsearch search with the provided query DSL", "parameter": {}}, {"name": "get_shards", "description": "Get shard information for all or specific indices", "parameter": {}}], "domains": [{"name": "DataBase Management", "description": "数据库管理，涵盖数据库创建、查询、优化、备份及数据结构设计"}]}
{"name": "eSignatures", "description": "Contract management operations including: create/query/withdraw/delete contracts, create/update/query/delete templates, and manage template collaborators", "tools": [{"name": "create_contract", "description": "Draft for review or send contract", "parameter": {}}, {"name": "query_contract", "description": "Retrieve contract info", "parameter": {}}, {"name": "withdraw_contract", "description": "Withdraw an unsigned contract", "parameter": {}}, {"name": "delete_contract", "description": "Delete a draft or test contract", "parameter": {}}, {"name": "list_recent_contracts", "description": "List the recent contracts", "parameter": {}}, {"name": "create_template", "description": "Create a new contract template", "parameter": {}}, {"name": "update_template", "description": "Update an existing template", "parameter": {}}, {"name": "query_template", "description": "Retrieve template content and info", "parameter": {}}, {"name": "delete_template", "description": "Delete a template", "parameter": {}}, {"name": "list_templates", "description": "List all your templates", "parameter": {}}, {"name": "add_template_collaborator", "description": "Invite someone to edit a template", "parameter": {}}, {"name": "remove_template_collaborator", "description": "Revoke template editing rights", "parameter": {}}, {"name": "list_template_collaborators", "description": "View who can edit a template", "parameter": {}}], "domains": [{"name": "Business Management", "description": "业务管理，包括业务信息获取、位置管理、营业时间更新及媒体内容管理"}]}
{"name": "Exa", "description": "1.实时网页搜索与内容提取 2.学术论文与研究内容搜索 3.公司信息爬取与研究 4.特定URL内容提取 5.竞争对手查找 6.LinkedIn公司及人员搜索 7.Wikipedia信息检索 8.GitHub仓库搜索", "tools": [{"name": "web_search_exa", "description": "Performs real-time web searches with optimized results and content extraction.", "parameter": {}}, {"name": "research_paper_search", "description": "Specialized search focused on academic papers and research content.", "parameter": {}}, {"name": "company_research", "description": "Comprehensive company research tool that crawls company websites to gather detailed information about businesses.", "parameter": {}}, {"name": "crawling", "description": "Extracts content from specific URLs, useful for reading articles, PDFs, or any web page when you have the exact URL.", "parameter": {}}, {"name": "competitor_finder", "description": "Identifies competitors of a company by searching for businesses offering similar products or services.", "parameter": {}}, {"name": "linkedin_search", "description": "Search LinkedIn for companies and people using Exa AI. Simply include company names, person names, or specific LinkedIn URLs in your query.", "parameter": {}}, {"name": "wikipedia_search_exa", "description": "Search and retrieve information from Wikipedia articles on specific topics, giving you accurate, structured knowledge from the world's largest encyclopedia.", "parameter": {}}, {"name": "github_search", "description": "Search GitHub repositories using Exa AI - performs real-time searches on GitHub.com to find relevant repositories, issues, and GitHub accounts.", "parameter": {}}], "domains": [{"name": "Web Search", "description": "网页信息检索,通过关键词查询公开网页内容,支持多类型信息主动获取"}, {"name": "Web Data Acquisition", "description": "网络数据采集,包含网页爬虫、内容提取、反爬处理及代码仓库索引分析"}]}
{"name": "Fewsats", "description": "1. Retrieve the balance of the user's wallet 2. Retrieve the user's payment methods 3. Pay an offer with the specified ID from the l402_offers 4. Retrieve the details of a payment", "tools": [{"name": "balance", "description": "Retrieve the balance of the user's wallet", "parameter": {}}, {"name": "payment_methods", "description": "Retrieve the user's payment methods", "parameter": {}}, {"name": "pay_offer", "description": "Pays an offer with the specified ID from the l402_offers", "parameter": {"offer_id": "(string) String identifier for the offer", "l402_offer": "(object) Offer details containing: offers (Array of offer objects with ID, amount, currency, description, title), payment_context_token (Payment context token string), payment_request_url (URL for payment request), version (API version string)"}}, {"name": "payment_info", "description": "Retrieve the details of a payment", "parameter": {"pid": "(string) Payment ID to retrieve information for"}}], "domains": [{"name": "Financial Service", "description": "金融服务,包括支付处理、理财管理、云成本分析及财务报表生成"}]}
{"name": "Fibery", "description": "Fibery workspace operations, including: list databases, describe database structure, query database, create/update entities", "tools": [{"name": "list_databases", "description": "Retrieves a list of all databases available in your Fibery workspace.", "parameter": {}}, {"name": "describe_database", "description": "Provides a detailed breakdown of a specific database's structure, showing all fields with their titles, names, and types.", "parameter": {}}, {"name": "query_database", "description": "Offers powerful, flexible access to your Fibery data through the Fibery API.", "parameter": {}}, {"name": "create_entity", "description": "Creates new entities in your Fibery workspace with specified field values.", "parameter": {}}, {"name": "create_entities_batch", "description": "Creates multiple new entities in your Fibery workspace with specified field values.", "parameter": {}}, {"name": "update_entity", "description": "Updates existing entities in your Fibery workspace with new field values.", "parameter": {}}], "domains": [{"name": "DataBase Management", "description": "数据库管理,涵盖数据库创建、查询、优化、备份及数据结构设计"}, {"name": "Content Management", "description": "内容管理，包括博客文章的创建、更新、检索及媒体上传"}]}
{"name": "Financial Datasets", "description": "1.获取公司财务报表（收入、资产负债表、现金流量表） 2.获取公司股票价格（当前和历史） 3.获取公司新闻 4.获取加密货币行情（当前和历史价格）", "tools": [{"name": "get_income_statements", "description": "Get income statements for a company.", "parameter": {}}, {"name": "get_balance_sheets", "description": "Get balance sheets for a company.", "parameter": {}}, {"name": "get_cash_flow_statements", "description": "Get cash flow statements for a company.", "parameter": {}}, {"name": "get_current_stock_price", "description": "Get the current / latest price of a company.", "parameter": {}}, {"name": "get_historical_stock_prices", "description": "Gets historical stock prices for a company.", "parameter": {}}, {"name": "get_company_news", "description": "Get news for a company.", "parameter": {}}, {"name": "get_available_crypto_tickers", "description": "Gets all available crypto tickers.", "parameter": {}}, {"name": "get_crypto_prices", "description": "Gets historical prices for a crypto currency.", "parameter": {}}, {"name": "get_historical_crypto_prices", "description": "Gets historical prices for a crypto currency.", "parameter": {}}, {"name": "get_current_crypto_price", "description": "Get the current / latest price of a crypto currency.", "parameter": {}}], "domains": [{"name": "Financial Service", "description": "金融服务,包括支付处理、理财管理、云成本分析及财务报表生成"}, {"name": "News & Content Services", "description": "新闻与内容服务,提供资讯聚合、热点推送、主题订阅及媒体品牌内容"}]}
{"name": "Firecrawl", "description": "Firecrawl web data acquisition tools, including: single URL scraping, batch URL scraping with rate limiting, batch operation status checking, web search with content extraction, asynchronous crawling, structured information extraction using LLM, deep web research with LLM analysis, and llms.txt file generation", "tools": [{"name": "firecrawl_scrape", "description": "Scrape content from a single URL with advanced options.", "parameter": {"url": "(string) The URL to scrape", "formats": "(array) List of formats to return (e.g., ['markdown'])", "onlyMainContent": "(boolean) Whether to only return the main content", "waitFor": "(number) Time to wait for page elements to load (in milliseconds)", "timeout": "(number) Maximum time to wait for the scrape to complete (in milliseconds)", "mobile": "(boolean) Whether to simulate a mobile device", "includeTags": "(array) List of tags to include in the scrape", "excludeTags": "(array) List of tags to exclude from the scrape", "skipTlsVerification": "(boolean) Whether to skip TLS verification"}}, {"name": "firecrawl_batch_scrape", "description": "Scrape multiple URLs efficiently with built-in rate limiting and parallel processing.", "parameter": {"urls": "(array) List of URLs to scrape", "options": "(object) Additional options for the scrape"}}, {"name": "firecrawl_check_batch_status", "description": "Check the status of a batch operation.", "parameter": {"id": "(string) The ID of the batch operation to check"}}, {"name": "firecrawl_search", "description": "Search the web and optionally extract content from search results.", "parameter": {"query": "(string) The search query", "limit": "(number) Maximum number of results to return", "lang": "(string) Language of the search results", "country": "(string) Country code for the search results", "scrapeOptions": "(object) Additional options for scraping the search results"}}, {"name": "firecrawl_crawl", "description": "Start an asynchronous crawl with advanced options.", "parameter": {"url": "(string) The starting URL for the crawl", "maxDepth": "(number) Maximum recursive depth for the crawl", "limit": "(number) Maximum number of URLs to crawl", "allowExternalLinks": "(boolean) Whether to follow external links", "deduplicateSimilarURLs": "(boolean) Whether to deduplicate similar URLs"}}, {"name": "firecrawl_extract", "description": "Extract structured information from web pages using LLM capabilities.", "parameter": {"urls": "(array) List of URLs to extract information from", "prompt": "(string) Custom prompt for the LLM extraction", "systemPrompt": "(string) System prompt to guide the LLM", "schema": "(object) JSON schema for structured data extraction", "allowExternalLinks": "(boolean) Allow extraction from external links", "enableWebSearch": "(boolean) Enable web search for additional context", "includeSubdomains": "(boolean) Include subdomains in extraction"}}, {"name": "firecrawl_deep_research", "description": "Conduct deep web research on a query using intelligent crawling, search, and LLM analysis.", "parameter": {"query": "(string, required) The research question or topic to explore", "maxDepth": "(number, optional) Maximum recursive depth for crawling/search (default: 3)", "timeLimit": "(number, optional) Time limit in seconds for the research session (default: 120)", "maxUrls": "(number, optional) Maximum number of URLs to analyze (default: 50)"}}, {"name": "firecrawl_generate_llmstxt", "description": "Generate a standardized llms.txt (and optionally llms-full.txt) file for a given domain.", "parameter": {"url": "(string, required) The base URL of the website to analyze", "maxUrls": "(number, optional) Max number of URLs to include (default: 10)", "showFullText": "(boolean, optional) Whether to include llms-full.txt contents in the response"}}], "domains": [{"name": "Web Data Acquisition", "description": "网络数据采集,包含网页爬虫、内容提取、反爬处理及代码仓库索引分析"}]}
{"name": "Gitee", "description": "GitHub/Gitee repository operations, including: listing user repositories, getting file content, creating repositories (user/org/enterprise), forking repositories, managing releases, searching open source repositories, managing pull requests (listing, creating, updating, merging, commenting), managing issues (creating, updating, commenting), and user information management (getting user info, searching users, listing notifications)", "tools": [{"name": "list_user_repos", "description": "List user authorized repositories", "parameter": {}}, {"name": "get_file_content", "description": "Get the content of a file in a repository", "parameter": {}}, {"name": "create_user_repo", "description": "Create a user repository", "parameter": {}}, {"name": "create_org_repo", "description": "Create an organization repository", "parameter": {}}, {"name": "create_enter_repo", "description": "Create an enterprise repository", "parameter": {}}, {"name": "fork_repository", "description": "Fork a repository", "parameter": {}}, {"name": "create_release", "description": "Create a release for a repository", "parameter": {}}, {"name": "list_releases", "description": "List repository releases", "parameter": {}}, {"name": "search_open_source_repositories", "description": "Search open source repositories on Gitee", "parameter": {}}, {"name": "list_repo_pulls", "description": "List pull requests in a repository", "parameter": {}}, {"name": "merge_pull", "description": "Merge a pull request", "parameter": {}}, {"name": "create_pull", "description": "Create a pull request", "parameter": {}}, {"name": "update_pull", "description": "Update a pull request", "parameter": {}}, {"name": "get_pull_detail", "description": "Get details of a pull request", "parameter": {}}, {"name": "comment_pull", "description": "Comment on a pull request", "parameter": {}}, {"name": "list_pull_comments", "description": "List all comments for a pull request", "parameter": {}}, {"name": "create_issue", "description": "Create an issue", "parameter": {}}, {"name": "update_issue", "description": "Update an issue", "parameter": {}}, {"name": "get_repo_issue_detail", "description": "Get details of a repository issue", "parameter": {}}, {"name": "list_repo_issues", "description": "List repository issues", "parameter": {}}, {"name": "comment_issue", "description": "Comment on an issue", "parameter": {}}, {"name": "list_issue_comments", "description": "List comments on an issue", "parameter": {}}, {"name": "get_user_info", "description": "Get current authenticated user information", "parameter": {}}, {"name": "search_users", "description": "Search for users", "parameter": {}}, {"name": "list_user_notifications", "description": "List user notifications", "parameter": {}}], "domains": [{"name": "Code Toolkit", "description": "代码工具集,版本控制(如git命令执行)、代码生成、代码执行、测试等"}]}
{"name": "Gyazo", "description": "Gyazo图片管理,包括:全文搜索、获取图片内容与元数据、获取最新图片、上传图片", "tools": [{"name": "gyazo_search", "description": "Full-text search for captures uploaded by users on Gyazo", "parameter": {"keyword": "(string) Search by keyword, title, app, URL, or date range", "pagination": "(Optional, boolean) Supports pagination for browsing multiple results"}}, {"name": "gyazo_image", "description": "Fetch image content and metadata from Gyazo", "parameter": {"id_or_url": "(string) Retrieve specific images by ID or URL"}}, {"name": "gyazo_latest_image", "description": "Fetch the most recent image from Gyazo", "parameter": {}}, {"name": "gyazo_upload", "description": "Upload an image to Gyazo", "parameter": {"image_data": "(string) Base64 encoded image data", "title": "(Optional, string) Title of the image", "description": "(Optional, string) Description of the image", "referer_url": "(Optional, string) Referer URL", "app_name": "(Optional, string) App name"}}], "domains": [{"name": "Image Processing", "description": "图像处理与生成,包括传统图片编辑、AI 图像生成、图表绘制与可视化"}]}
{"name": "gotoHuman", "description": "1.列出所有可用的审查表单 2.获取给定表单的审查模式 3.请求人工审查", "tools": [{"name": "list-forms", "description": "List all available review forms.", "parameter": {}}, {"name": "get-form-schema", "description": "Get the schema to use when requesting a human review for a given form.", "parameter": {"formId": "(string) The form ID to fetch the schema for"}}, {"name": "request-human-review-with-form", "description": "Request a human review. Will appear in your gotoHuman inbox.", "parameter": {"formId": "(string) The form ID for the review", "fieldData": "(object) Content (AI-output to review, context,...) and configuration for the form's fields. The schema for this needs to be fetched with get-form-schema", "metadata": "(Optional, object) Optional additional data that will be incl. in the webhook response after form submission", "assignToUsers": "(Optional, array) Optional list of user emails to assign the review to"}}], "domains": [{"name": "Content Management", "description": "内容管理，包括博客文章的创建、更新、检索及媒体上传"}]}
{"name": "Grafana", "description": "Grafana相关操作,包括:仪表盘搜索与管理、数据源查询与管理、Prometheus查询与元数据获取、Grafana Incident事件管理、Loki日志查询与统计、告警规则管理、OnCall调度管理、Sift调查分析、错误模式日志查找、慢请求查找", "tools": [{"name": "search_dashboards", "description": "Search for dashboards", "parameter": {}}, {"name": "get_dashboard_by_uid", "description": "Get a dashboard by uid", "parameter": {}}, {"name": "update_dashboard", "description": "Update or create a new dashboard", "parameter": {}}, {"name": "list_datasources", "description": "List datasources", "parameter": {}}, {"name": "get_datasource_by_uid", "description": "Get a datasource by uid", "parameter": {}}, {"name": "get_datasource_by_name", "description": "Get a datasource by name", "parameter": {}}, {"name": "query_prometheus", "description": "Execute a query against a Prometheus datasource", "parameter": {}}, {"name": "list_prometheus_metric_metadata", "description": "List metric metadata", "parameter": {}}, {"name": "list_prometheus_metric_names", "description": "List available metric names", "parameter": {}}, {"name": "list_prometheus_label_names", "description": "List label names matching a selector", "parameter": {}}, {"name": "list_prometheus_label_values", "description": "List values for a specific label", "parameter": {}}, {"name": "list_incidents", "description": "List incidents in Grafana Incident", "parameter": {}}, {"name": "create_incident", "description": "Create an incident in Grafana Incident", "parameter": {}}, {"name": "add_activity_to_incident", "description": "Add an activity item to an incident in Grafana Incident", "parameter": {}}, {"name": "resolve_incident", "description": "Resolve an incident in Grafana Incident", "parameter": {}}, {"name": "query_loki_logs", "description": "Query and retrieve logs using LogQL (either log or metric queries)", "parameter": {}}, {"name": "list_loki_label_names", "description": "List all available label names in logs", "parameter": {}}, {"name": "list_loki_label_values", "description": "List values for a specific log label", "parameter": {}}, {"name": "query_loki_stats", "description": "Get statistics about log streams", "parameter": {}}, {"name": "list_alert_rules", "description": "List alert rules", "parameter": {}}, {"name": "get_alert_rule_by_uid", "description": "Get alert rule by UID", "parameter": {}}, {"name": "list_oncall_schedules", "description": "List schedules from Grafana OnCall", "parameter": {}}, {"name": "get_oncall_shift", "description": "Get details for a specific OnCall shift", "parameter": {}}, {"name": "get_current_oncall_users", "description": "Get users currently on-call for a specific schedule", "parameter": {}}, {"name": "list_oncall_teams", "description": "List teams from Grafana OnCall", "parameter": {}}, {"name": "list_oncall_users", "description": "List users from Grafana OnCall", "parameter": {}}, {"name": "get_investigation", "description": "Retrieve an existing Sift investigation by its UUID", "parameter": {}}, {"name": "get_analysis", "description": "Retrieve a specific analysis from a Sift investigation", "parameter": {}}, {"name": "list_investigations", "description": "Retrieve a list of Sift investigations with an optional limit", "parameter": {}}, {"name": "find_error_pattern_logs", "description": "Finds elevated error patterns in Loki logs", "parameter": {}}, {"name": "find_slow_requests", "description": "Finds slow requests from the relevant tempo datasources", "parameter": {}}], "domains": [{"name": "Data Analysis", "description": "数据分析，包括数据收集、查询、追踪和分析"}, {"name": "DevOps Pipeline Management", "description": "DevOps流水线管理，包括持续集成(CI)构建(如Jenkins/GitLab CI)、工作流定义及持续部署(CD)自动化，支持跨平台应用交付(如Kubernetes集群部署、云平台发布)等"}]}
{"name": "Graphlit", "description": "1.知识库内容查询与检索（包括内容、集合、订阅源、对话） 2.相关资源检索（文本、图像） 3.图像处理与描述 4.语言模型对话 5.结构化数据提取 6.内容发布（音频、图像） 7.多源数据采集（文件、网页、消息、社交媒体、邮件、问题、文本、短期记忆） 8.平台集成（邮件、项目管理、云存储、社交、团队协作） 9.网络爬虫与搜索 10.通知发送（Slack、邮件、Webhook、Twitter） 11.知识库项目管理（配置、集合操作） 12.平台资源列表查询", "tools": [{"name": "Query Contents", "description": "Searches and retrieves contents from the knowledge base.", "parameter": {}}, {"name": "Query Collections", "description": "Searches and retrieves collections from the knowledge base.", "parameter": {}}, {"name": "Query Feeds", "description": "Searches and retrieves feeds from the knowledge base.", "parameter": {}}, {"name": "Query Conversations", "description": "Searches and retrieves conversations from the knowledge base.", "parameter": {}}, {"name": "Retrieve Relevant Sources", "description": "Retrieves relevant sources based on a query.", "parameter": {}}, {"name": "Retrieve Similar Images", "description": "Retrieves images similar to a given image.", "parameter": {}}, {"name": "Visually Describe Image", "description": "Provides a visual description of an image.", "parameter": {}}, {"name": "Prompt LLM Conversation", "description": "Initiates a conversation with a language model.", "parameter": {}}, {"name": "Extract Structured JSON from Text", "description": "Extracts structured JSON data from text.", "parameter": {}}, {"name": "Publish as Audio (ElevenLabs Audio)", "description": "Publishes content as audio using ElevenLabs.", "parameter": {}}, {"name": "Publish as Image (OpenAI Image Generation)", "description": "Publishes content as an image using OpenAI.", "parameter": {}}, {"name": "Files", "description": "Ingests files into the knowledge base.", "parameter": {}}, {"name": "Web Pages", "description": "Ingests web pages into the knowledge base.", "parameter": {}}, {"name": "Messages", "description": "Ingests messages from communication platforms into the knowledge base.", "parameter": {}}, {"name": "Posts", "description": "Ingests posts from social media platforms into the knowledge base.", "parameter": {}}, {"name": "Emails", "description": "Ingests emails into the knowledge base.", "parameter": {}}, {"name": "Issues", "description": "Ingests issues from project management tools into the knowledge base.", "parameter": {}}, {"name": "Text", "description": "Ingests plain text into the knowledge base.", "parameter": {}}, {"name": "Memory (Short-Term)", "description": "Ingests short-term memory data into the knowledge base.", "parameter": {}}, {"name": "Microsoft Outlook email", "description": "Connects to Microsoft Outlook to ingest emails.", "parameter": {}}, {"name": "Google Mail", "description": "Connects to Google Mail to ingest emails.", "parameter": {}}, {"name": "Notion", "description": "Connects to Notion to ingest data.", "parameter": {}}, {"name": "Reddit", "description": "Connects to Reddit to ingest data.", "parameter": {}}, {"name": "Linear", "description": "Connects to Linear to ingest data.", "parameter": {}}, {"name": "Jira", "description": "Connects to Jira to ingest data.", "parameter": {}}, {"name": "GitHub Issues", "description": "Connects to GitHub to ingest issues.", "parameter": {}}, {"name": "Google Drive", "description": "Connects to Google Drive to ingest files.", "parameter": {}}, {"name": "OneDrive", "description": "Connects to OneDrive to ingest files.", "parameter": {}}, {"name": "SharePoint", "description": "Connects to SharePoint to ingest files.", "parameter": {}}, {"name": "Dropbox", "description": "Connects to Dropbox to ingest files.", "parameter": {}}, {"name": "Box", "description": "Connects to Box to ingest files.", "parameter": {}}, {"name": "GitHub", "description": "Connects to GitHub to ingest repositories and files.", "parameter": {}}, {"name": "Slack", "description": "Connects to Slack to ingest messages and files.", "parameter": {}}, {"name": "Microsoft Teams", "description": "Connects to Microsoft Teams to ingest messages and files.", "parameter": {}}, {"name": "Discord", "description": "Connects to Discord to ingest messages and files.", "parameter": {}}, {"name": "Twitter/X", "description": "Connects to Twitter/X to ingest tweets and media.", "parameter": {}}, {"name": "Podcasts (RSS)", "description": "Connects to podcast RSS feeds to ingest episodes.", "parameter": {}}, {"name": "Web Crawling", "description": "Crawls web pages and ingests the content.", "parameter": {}}, {"name": "Web Search (including Podcast Search)", "description": "Performs web searches and ingests the results.", "parameter": {}}, {"name": "Web Mapping", "description": "Maps and visualizes web content.", "parameter": {}}, {"name": "Screenshot Page", "description": "Takes screenshots of web pages and ingests them.", "parameter": {}}, {"name": "Slack", "description": "Sends notifications to Slack.", "parameter": {}}, {"name": "Email", "description": "Sends notifications via email.", "parameter": {}}, {"name": "Webhook", "description": "Sends notifications via webhook.", "parameter": {}}, {"name": "Twitter/X", "description": "Sends notifications to Twitter/X.", "parameter": {}}, {"name": "Configure Project", "description": "Configures a project in the knowledge base.", "parameter": {}}, {"name": "Create Collection", "description": "Creates a new collection in the knowledge base.", "parameter": {}}, {"name": "Add Contents to Collection", "description": "Adds contents to an existing collection.", "parameter": {}}, {"name": "Remove Contents from Collection", "description": "Removes contents from an existing collection.", "parameter": {}}, {"name": "Delete Collection(s)", "description": "Deletes one or more collections from the knowledge base.", "parameter": {}}, {"name": "Delete Feed(s)", "description": "Deletes one or more feeds from the knowledge base.", "parameter": {}}, {"name": "Delete Content(s)", "description": "Deletes one or more contents from the knowledge base.", "parameter": {}}, {"name": "Delete Conversation(s)", "description": "Deletes one or more conversations from the knowledge base.", "parameter": {}}, {"name": "Is Feed Done?", "description": "Checks if a feed is done processing.", "parameter": {}}, {"name": "Is Content Done?", "description": "Checks if a content item is done processing.", "parameter": {}}, {"name": "List Slack Channels", "description": "Lists available Slack channels.", "parameter": {}}, {"name": "List Microsoft Teams Teams", "description": "Lists available Microsoft Teams teams.", "parameter": {}}, {"name": "List Microsoft Teams Channels", "description": "Lists available channels within a Microsoft Teams team.", "parameter": {}}, {"name": "List SharePoint Libraries", "description": "Lists available libraries in SharePoint.", "parameter": {}}, {"name": "List SharePoint Folders", "description": "Lists available folders within a SharePoint library.", "parameter": {}}, {"name": "List Linear Projects", "description": "Lists available projects in Linear.", "parameter": {}}, {"name": "List Notion Databases", "description": "Lists available databases in Notion.", "parameter": {}}], "domains": [{"name": "Content Management", "description": "内容管理，包括博客文章的创建、更新、检索及媒体上传"}, {"name": "Image Processing", "description": "图像处理与生成,包括传统图片编辑、AI 图像生成、图表绘制与可视化"}, {"name": "AI Model Lifecycle Management", "description": "人工智能模型训练与推理，涵盖深度学习与传统机器学习框架建模、模型优化与部署、实验跟踪、数据预处理及全流程生命周期管理"}, {"name": "Data Analysis", "description": "数据分析，包括数据收集、查询、追踪和分析"}, {"name": "Social Media Management", "description": "社交媒体账号运营,涵盖内容发布、粉丝互动、多平台批量管理与舆情分析"}, {"name": "Office Productivity", "description": "办公生产力工具,涵盖文档编辑、邮件通信、日程管理及团队协作"}, {"name": "Web Data Acquisition", "description": "网络数据采集,包含网页爬虫、内容提取、反爬处理及代码仓库索引分析"}, {"name": "Cloud Service Integration", "description": "云服务集成，调用与管理云平台 API(如 AWS/Azure)，支持云资源对接与 AI 服务整合"}, {"name": "File System", "description": "文件系统管理,包括本地 / 云端文件的存储、读取、修改、权限控制及分类检索"}, {"name": "Business Management", "description": "业务管理，包括业务信息获取、位置管理、营业时间更新及媒体内容管理"}]}
{"name": "GreptimeDB", "description": "1.列出数据库中的表 2.从表中读取数据 3.列出可用工具 4.执行SQL查询 5.列出可用提示 6.按名称获取提示", "tools": [{"name": "list_resources", "description": "Lists tables in the database.", "parameter": {}}, {"name": "read_resource", "description": "Reads data from a table.", "parameter": {}}, {"name": "list_tools", "description": "Lists available tools.", "parameter": {}}, {"name": "call_tool", "description": "Executes an SQL query.", "parameter": {}}, {"name": "list_prompts", "description": "Lists available prompts.", "parameter": {}}, {"name": "get_prompt", "description": "Gets a prompt by name.", "parameter": {}}], "domains": [{"name": "DataBase Management", "description": "数据库管理，涵盖数据库创建、查询、优化、备份及数据结构设计"}, {"name": "Tool Management", "description": "工具管理，包括工具信息的检索、搜索、添加和移除"}]}
{"name": "Heroku", "description": "Heroku平台应用管理,包括:应用列表查询、应用信息获取、应用创建与重命名、应用所有权转移、项目部署、Dyno管理(列表/扩缩容/重启)、Add-on管理(列表/创建/信息获取)、维护模式切换、应用日志查看、Pipeline管理(创建/升级/列表/信息)、团队与空间管理、PostgreSQL数据库操作(查询/信息/进程/锁/性能分析/凭证/维护/备份/升级)", "tools": [{"name": "list_apps", "description": "List all Heroku apps. You can filter apps by personal, collaborator, team, or space.", "parameter": {}}, {"name": "get_app_info", "description": "Get detailed information about an app, including its configuration, dynos, and add-ons.", "parameter": {}}, {"name": "create_app", "description": "Create a new app with customizable settings for region, team, and space.", "parameter": {}}, {"name": "rename_app", "description": "Rename an existing app.", "parameter": {}}, {"name": "transfer_app", "description": "Transfer ownership of an app to another user or team.", "parameter": {}}, {"name": "deploy_to_heroku", "description": "Deploy projects to Heroku with an `app.json` configuration, supporting team deployments, private spaces, and environment setups.", "parameter": {}}, {"name": "deploy_one_off_dyno", "description": "Execute code or commands in a sandboxed environment on a Heroku one-off dyno. Supports file creation, network access, environment variables, and automatic cleanup. Ideal for running scripts, tests, or temporary workloads.", "parameter": {}}, {"name": "ps_list", "description": "List all dynos for an app.", "parameter": {}}, {"name": "ps_scale", "description": "Scale the number of dynos up or down, or resize dynos.", "parameter": {}}, {"name": "ps_restart", "description": "Restart specific dynos, process types, or all dynos.", "parameter": {}}, {"name": "list_addons", "description": "List all add-ons for all apps or for a specific app.", "parameter": {}}, {"name": "get_addon_info", "description": "Get detailed information about a specific add-on.", "parameter": {}}, {"name": "create_addon", "description": "Provision a new add-on for an app.", "parameter": {}}, {"name": "maintenance_on", "description": "Enable maintenance mode for an app.", "parameter": {}}, {"name": "maintenance_off", "description": "Disable maintenance mode for an app.", "parameter": {}}, {"name": "get_app_logs", "description": "View application logs.", "parameter": {}}, {"name": "pipelines_create", "description": "Create a new pipeline.", "parameter": {}}, {"name": "pipelines_promote", "description": "Promote apps to the next stage in a pipeline.", "parameter": {}}, {"name": "pipelines_list", "description": "List available pipelines.", "parameter": {}}, {"name": "pipelines_info", "description": "Get detailed pipeline information.", "parameter": {}}, {"name": "list_teams", "description": "List teams you belong to.", "parameter": {}}, {"name": "list_private_spaces", "description": "List available spaces.", "parameter": {}}, {"name": "pg_psql", "description": "Execute SQL queries against the Heroku PostgreSQL database.", "parameter": {}}, {"name": "pg_info", "description": "Display detailed database information.", "parameter": {}}, {"name": "pg_ps", "description": "View active queries and execution details.", "parameter": {}}, {"name": "pg_locks", "description": "View database locks and identify blocking transactions.", "parameter": {}}, {"name": "pg_outliers", "description": "Identify resource-intensive queries.", "parameter": {}}, {"name": "pg_credentials", "description": "Manage database credentials and access.", "parameter": {}}, {"name": "pg_kill", "description": "Terminate specific database processes.", "parameter": {}}, {"name": "pg_maintenance", "description": "Show database maintenance information.", "parameter": {}}, {"name": "pg_backups", "description": "Manage database backups and schedules.", "parameter": {}}, {"name": "pg_upgrade", "description": "Upgrade PostgreSQL to a newer version.", "parameter": {}}], "domains": [{"name": "Cloud Service Integration", "description": "云服务集成，调用与管理云平台 API(如 AWS/Azure)，支持云资源对接与 AI 服务整合"}, {"name": "DataBase Management", "description": "数据库管理，涵盖数据库创建、查询、优化、备份及数据结构设计"}, {"name": "DevOps Pipeline Management", "description": "DevOps流水线管理，包括持续集成(CI)构建(如Jenkins/GitLab CI)、工作流定义及持续部署(CD)自动化，支持跨平台应用交付(如Kubernetes集群部署、云平台发布)等"}]}
{"name": "Hologres", "description": "Hologres数据库操作,包括:执行SELECT/DML/DDL SQL查询、收集表统计信息、获取查询计划与执行计划", "tools": [{"name": "execute_select_sql", "description": "Execute a SELECT SQL query on the Hologres server", "parameter": {}}, {"name": "execute_dml_sql", "description": "Execute a DML (INSERT, UPDATE, DELETE) SQL query on the Hologres server", "parameter": {}}, {"name": "execute_ddl_sql", "description": "Execute a DDL (CREATE, ALTER, DROP) SQL query on the Hologres server", "parameter": {}}, {"name": "gather_table_statistics", "description": "Collect table statistics", "parameter": {}}, {"name": "get_query_plan", "description": "Get query plan", "parameter": {}}, {"name": "get_execution_plan", "description": "Get execution plan", "parameter": {}}], "domains": [{"name": "DataBase Management", "description": "数据库管理,涵盖数据库创建、查询、优化、备份及数据结构设计"}]}
{"name": "Hyperbrowser", "description": "1. Extract formatted content from webpages 2. Crawl and extract content from linked pages 3. Convert HTML to structured JSON 4. Query the web with Bing search 5. Browser automation with Browser Use agent 6. General-purpose automation with OpenAI’s CUA model 7. Complex browser tasks with Claude computer use 8. Create, delete, and list Hyperbrowser profiles", "tools": [{"name": "scrape_webpage", "description": "Extract formatted (markdown, screenshot etc) content from any webpage", "parameter": {}}, {"name": "crawl_webpages", "description": "Navigate through multiple linked pages and extract LLM-friendly formatted content", "parameter": {}}, {"name": "extract_structured_data", "description": "Convert messy HTML into structured JSON", "parameter": {}}, {"name": "search_with_bing", "description": "Query the web and get results with Bing search", "parameter": {}}, {"name": "browser_use_agent", "description": "Fast, lightweight browser automation with the Browser Use agent", "parameter": {}}, {"name": "openai_computer_use_agent", "description": "General-purpose automation using OpenAI’s CUA model", "parameter": {}}, {"name": "claude_computer_use_agent", "description": "Complex browser tasks using Claude computer use", "parameter": {}}, {"name": "create_profile", "description": "Creates a new persistent Hyperbrowser profile", "parameter": {}}, {"name": "delete_profile", "description": "Deletes an existing persistent Hyperbrowser profile", "parameter": {}}, {"name": "list_profiles", "description": "Lists existing persistent Hyperbrowser profiles", "parameter": {}}], "domains": [{"name": "Web Data Acquisition", "description": "网络数据采集,包含网页爬虫、内容提取、反爬处理及代码仓库索引分析"}, {"name": "Browser Operation", "description": "浏览器操作与自动化控制,如网页元素操控、Cookie 管理、页面截图等"}, {"name": "Web Search", "description": "网页信息检索,通过关键词查询公开网页内容,支持多类型信息主动获取"}]}
{"name": "ForeverVM", "description": "1. Connect to machines by ID 2. Create new machines with tags and memory limits 3. List all machines with optional tag filtering", "tools": [{"name": "repl", "description": "Connects to a new machine or an existing one by ID.", "parameter": {"machine_name": "(Optional, string) The ID of an existing machine to connect to."}}, {"name": "createMachine", "description": "Creates a new machine with optional tags and memory limits.", "parameter": {"tags": "(Optional, object) Key-value pairs to tag the machine.", "memory_mb": "(Optional, number) Memory limit in megabytes for the machine."}}, {"name": "listMachines", "description": "Lists all machines, optionally filtered by tags.", "parameter": {"tags": "(Optional, object) Key-value pairs to filter the machines by tags."}}], "domains": [{"name": "Virtual Environment & Container Manager", "description": "虚拟与容器环境管理，支持开发环境如（如Python虚拟环境、Node.js运行时）、容器化环境构建（Docker）"}]}
{"name": "Inkeep", "description": "Retrieve product documentation about Inkeep using conversational queries", "tools": [{"name": "search-product-content", "description": "Retrieves product documentation about Inkeep. The query should be framed as a conversational question about Inkeep.", "parameter": {}}], "domains": [{"name": "Web Search", "description": "网页信息检索,通过关键词查询公开网页内容,支持多类型信息主动获取"}]}
{"name": "Kagi Search", "description": "1.执行网页搜索以查找基于查询的信息 2.基于URL生成内容摘要", "tools": [{"name": "search", "description": "Performs a web search to find information based on the query provided.", "parameter": {}}, {"name": "summarizer", "description": "Generates a summary of the content, such as a video, based on the URL provided.", "parameter": {}}], "domains": [{"name": "Web Search", "description": "网页信息检索,通过关键词查询公开网页内容,支持多类型信息主动获取"}, {"name": "Content Management", "description": "内容管理，包括博客文章的创建、更新、检索及媒体上传"}]}
{"name": "Keboola", "description": "Keboola平台操作,包括:存储桶和表信息获取与更新、SQL查询与转换创建、组件与转换配置检索、作业管理与启动、文档查询", "tools": [{"name": "get_bucket_detail", "description": "Gets detailed information about a specific bucket.", "parameter": {}}, {"name": "get_table_detail", "description": "Gets detailed information about a specific table including its DB identifier and column information.", "parameter": {}}, {"name": "retrieve_bucket_tables", "description": "Retrieves all tables in a specific bucket with their basic information.", "parameter": {}}, {"name": "retrieve_buckets", "description": "Retrieves information about all buckets in the project.", "parameter": {}}, {"name": "update_bucket_description", "description": "Update the description for a given Keboola bucket.", "parameter": {}}, {"name": "update_table_description", "description": "Update the description for a given Keboola table.", "parameter": {}}, {"name": "get_sql_dialect", "description": "Gets the name of the SQL dialect used by Keboola project's underlying database.", "parameter": {}}, {"name": "query_table", "description": "Executes an SQL SELECT query to get the data from the underlying database.", "parameter": {}}, {"name": "create_sql_transformation", "description": "Creates an SQL transformation using the specified name, SQL query following the current SQL dialect, a detailed description, and optionally a list of created table names if and only if they are generated within the SQL statements.", "parameter": {}}, {"name": "get_component_details", "description": "Gets detailed information about a specific Keboola component configuration given component/transformation ID and configuration ID.", "parameter": {}}, {"name": "retrieve_components", "description": "Retrieves components configurations in the project, optionally filtered by component types or specific component IDs. If component_ids are supplied, only those components identified by the IDs are retrieved, disregarding component_types.", "parameter": {}}, {"name": "retrieve_transformations", "description": "Retrieves transformations configurations in the project, optionally filtered by specific transformation IDs.", "parameter": {}}, {"name": "get_job_detail", "description": "Retrieves detailed information about a specific job, identified by the job_id, including its status, parameters, results, and any relevant metadata.", "parameter": {}}, {"name": "retrieve_jobs", "description": "Retrieves all jobs in the project, or filter jobs by a specific component_id or config_id, with optional status filtering.", "parameter": {}}, {"name": "start_job", "description": "Starts a new job for a given component or transformation.", "parameter": {}}, {"name": "docs_query", "description": "Answers a question using the Keboola documentation as a source.", "parameter": {}}], "domains": [{"name": "DataBase Management", "description": "数据库管理，涵盖数据库创建、查询、优化、备份及数据结构设计"}, {"name": "Cloud Service Integration", "description": "云服务集成，调用与管理云平台 API(如 AWS/Azure)，支持云资源对接与 AI 服务整合"}, {"name": "DevOps Pipeline Management", "description": "DevOps流水线管理，包括持续集成(CI)构建(如Jenkins/GitLab CI)、工作流定义及持续部署(CD)自动化，支持跨平台应用交付(如Kubernetes集群部署、云平台发布)等"}]}
{"name": "Lara Translate", "description": "1.文本翻译 2.翻译记忆管理，包括：创建、更新、删除翻译记忆 3.翻译单元管理，包括：添加、删除翻译单元 4.TMX文件导入与状态检查", "tools": [{"name": "translate", "description": "Translate text between languages", "parameter": {"text": "(array) An array of text blocks to translate, each with: 'text' (string), 'translatable' (boolean)", "source": "(Optional, string) Source language code (e.g., 'en-EN')", "target": "(string) Target language code (e.g., 'it-IT')", "context": "(Optional, string) Additional context to improve translation quality", "instructions": "(Optional, string[]) Instructions to adjust translation behavior", "source_hint": "(Optional, string) Guidance for language detection"}}, {"name": "list_memories", "description": "List saved translation memories", "parameter": {}}, {"name": "create_memory", "description": "Create a new translation memory", "parameter": {"name": "(string) Name of the new memory", "external_id": "(Optional, string) ID of the memory to import from MyMemory (e.g., 'ext_my_[MyMemory ID]')"}}, {"name": "update_memory", "description": "Update translation memory name", "parameter": {"id": "(string) ID of the memory to update", "name": "(string) The new name for the memory"}}, {"name": "delete_memory", "description": "Delete a translation memory", "parameter": {"id": "(string) ID of the memory to delete"}}, {"name": "add_translation", "description": "Add a translation unit to memory", "parameter": {"id": "(string | string[]) ID or IDs of memories where to add the translation unit", "source": "(string) Source language code", "target": "(string) Target language code", "sentence": "(string) The source sentence", "translation": "(string) The translated sentence", "tuid": "(Optional, string) Translation Unit unique identifier", "sentence_before": "(Optional, string) Context sentence before", "sentence_after": "(Optional, string) Context sentence after"}}, {"name": "delete_translation", "description": "Delete a translation unit from memory", "parameter": {"id": "(string) ID of the memory", "source": "(string) Source language code", "target": "(string) Target language code", "sentence": "(string) The source sentence", "translation": "(string) The translated sentence", "tuid": "(Optional, string) Translation Unit unique identifier", "sentence_before": "(Optional, string) Context sentence before", "sentence_after": "(Optional, string) Context sentence after"}}, {"name": "import_tmx", "description": "Import a TMX file into a memory", "parameter": {"id": "(string) ID of the memory to update", "tmx": "(file path) The path of the TMX file to upload", "gzip": "(boolean) Indicates if the file is compressed (.gz)"}}, {"name": "check_import_status", "description": "Checks the status of a TMX file import", "parameter": {"id": "(string) The ID of the import job"}}], "domains": [{"name": "Document Format Conversion", "description": "文档格式转换,实现不同文档类型（如 PDF/Word/Markdown）的兼容性转换"}]}
{"name": "Logfire", "description": "1.从跟踪数据中获取按文件分组的异常计数 2.获取特定文件中异常的详细跟踪信息 3.在OpenTelemetry跟踪和指标上运行自定义SQL查询 4.获取OpenTelemetry模式以帮助自定义查询", "tools": [{"name": "find_exceptions", "description": "Get exception counts from traces grouped by file", "parameter": {"age": "(int) Number of minutes to look back (e.g., 30 for last 30 minutes, max 7 days)"}}, {"name": "find_exceptions_in_file", "description": "Get detailed trace information about exceptions in a specific file", "parameter": {"filepath": "(string) Path to the file to analyze", "age": "(int) Number of minutes to look back (max 7 days)"}}, {"name": "arbitrary_query", "description": "Run custom SQL queries on your OpenTelemetry traces and metrics", "parameter": {"query": "(string) SQL query to execute", "age": "(int) Number of minutes to look back (max 7 days)"}}, {"name": "get_logfire_records_schema", "description": "Get the OpenTelemetry schema to help with custom queries", "parameter": {}}], "domains": [{"name": "Data Analysis", "description": "数据分析，包括数据收集、查询、追踪和分析"}]}
{"name": "Langfuse Prompt Management", "description": "1. List available prompts 2. Retrieve and compile a specific prompt", "tools": [{"name": "get-prompts", "description": "List available prompts", "parameter": {"cursor": "(Optional, string) Parameter for pagination"}}, {"name": "get-prompt", "description": "Retrieve and compile a specific prompt", "parameter": {"name": "(string) Name of the prompt to retrieve", "arguments": "(Optional, JSON object) Prompt variables"}}], "domains": [{"name": "Tool Management", "description": "工具管理，包括工具信息的检索、搜索、添加和移除"}]}
{"name": "Lingo.dev", "description": "MCP server management, including: start/stop server, check status, list users, add/remove users", "tools": [{"name": "start-server", "description": "Starts the MCP server.", "parameter": {}}, {"name": "stop-server", "description": "Stops the running MCP server.", "parameter": {}}, {"name": "status", "description": "Checks the current status of the MCP server.", "parameter": {}}, {"name": "list-users", "description": "Lists all users registered with the MCP server.", "parameter": {}}, {"name": "add-user", "description": "Adds a new user to the MCP server.", "parameter": {"username": "(string) The username for the new user.", "password": "(string) The password for the new user."}}, {"name": "remove-user", "description": "Removes an existing user from the MCP server.", "parameter": {"username": "(string) The username of the user to remove."}}], "domains": [{"name": "Server Management", "description": "Server operations and user management, including server lifecycle control and user administration"}]}
{"name": "MCP Toolbox for Databases", "description": "Search for hotels based on name", "tools": [{"name": "search-hotels-by-name", "description": "Search for hotels based on name.", "parameter": {"name": "(string) The name of the hotel."}}], "domains": [{"name": "Location & Environmental Service", "description": "位置与环境服务,包括地理信息查询、导航、路线规划、酒店、机票、天气数据获取等"}]}
{"name": "Meilisearch", "description": "Meilisearch操作,包括:连接设置管理、索引创建与列表、文档检索与更新、搜索功能、索引设置管理、API密钥管理、任务管理、健康检查、版本与统计信息获取", "tools": [{"name": "get-connection-settings", "description": "View current Meilisearch connection URL and API key status", "parameter": {}}, {"name": "update-connection-settings", "description": "Update URL and/or API key to connect to a different instance", "parameter": {"url": "(string) New Meilisearch instance URL", "api_key": "(string) New Meilisearch API key"}}, {"name": "create-index", "description": "Create a new index with optional primary key", "parameter": {"uid": "(string) Unique identifier for the index", "primaryKey": "(Optional, string) Primary key for the index"}}, {"name": "list-indexes", "description": "List all available indexes", "parameter": {}}, {"name": "get-index-metrics", "description": "Get detailed metrics for a specific index", "parameter": {"uid": "(string) Unique identifier for the index"}}, {"name": "get-documents", "description": "Retrieve documents from an index with pagination", "parameter": {"indexUid": "(string) Unique identifier for the index", "offset": "(Optional, integer) Number of results to skip (default: 0)", "limit": "(Optional, integer) Maximum number of results to return (default: 20)"}}, {"name": "add-documents", "description": "Add or update documents in an index", "parameter": {"indexUid": "(string) Unique identifier for the index", "documents": "(array of objects) Documents to add or update"}}, {"name": "search", "description": "Flexible search across single or multiple indices with filtering and sorting options", "parameter": {"query": "(string) The search query (required)", "indexUid": "(Optional, string) Specific index to search in", "limit": "(Optional, integer) Maximum number of results per index (default: 20)", "offset": "(Optional, integer) Number of results to skip (default: 0)", "filter": "(Optional, string) Filter expression", "sort": "(Optional, array of strings) Sorting rules"}}, {"name": "get-settings", "description": "View current settings for an index", "parameter": {"uid": "(string) Unique identifier for the index"}}, {"name": "update-settings", "description": "Update index settings (ranking, faceting, etc.)", "parameter": {"uid": "(string) Unique identifier for the index", "settings": "(object) New settings to apply"}}, {"name": "get-keys", "description": "List all API keys", "parameter": {}}, {"name": "create-key", "description": "Create new API key with specific permissions", "parameter": {"description": "(string) Description for the API key", "actions": "(array of strings) Actions allowed for the API key", "indexes": "(array of strings) Indexes the API key can access", "expiresAt": "(Optional, string) Expiration date and time for the API key"}}, {"name": "delete-key", "description": "Delete an existing API key", "parameter": {"key": "(string) API key to delete"}}, {"name": "get-task", "description": "Get information about a specific task", "parameter": {"uid": "(string) Unique identifier for the task"}}, {"name": "get-tasks", "description": "List tasks with optional filters", "parameter": {"limit": "(Optional, integer) Maximum number of tasks to return", "from": "(Optional, integer) Number of tasks to skip", "reverse": "(Optional, boolean) Sort order of tasks", "batchUids": "(Optional, array of strings) Filter by batch UIDs", "uids": "(Optional, array of strings) Filter by task UIDs", "canceledBy": "(Optional, string) Filter by cancellation source", "types": "(Optional, array of strings) Filter by task types", "statuses": "(Optional, array of strings) Filter by task statuses", "indexUids": "(Optional, array of strings) Filter by index UIDs", "afterEnqueuedAt": "(Optional, string) Filter by enqueue time", "beforeEnqueuedAt": "(Optional, string) Filter by enqueue time", "afterStartedAt": "(Optional, string) Filter by start time", "beforeStartedAt": "(Optional, string) Filter by start time", "afterFinishedAt": "(Optional, string) Filter by finish time", "beforeFinishedAt": "(Optional, string) Filter by finish time"}}, {"name": "cancel-tasks", "description": "Cancel pending or enqueued tasks", "parameter": {"uids": "(array of strings) Task UIDs to cancel", "batchUids": "(Optional, array of strings) Batch UIDs to filter tasks", "types": "(Optional, array of strings) Task types to filter tasks", "statuses": "(Optional, array of strings) Task statuses to filter tasks", "indexUids": "(Optional, array of strings) Index UIDs to filter tasks", "canceledBy": "(Optional, string) Cancellation source"}}, {"name": "delete-tasks", "description": "Delete completed tasks", "parameter": {"uids": "(array of strings) Task UIDs to delete", "batchUids": "(Optional, array of strings) Batch UIDs to filter tasks", "types": "(Optional, array of strings) Task types to filter tasks", "statuses": "(Optional, array of strings) Task statuses to filter tasks", "indexUids": "(Optional, array of strings) Index UIDs to filter tasks", "canceledBy": "(Optional, string) Cancellation source"}}, {"name": "health-check", "description": "Basic health check", "parameter": {}}, {"name": "get-health-status", "description": "Comprehensive health status", "parameter": {}}, {"name": "get-version", "description": "Get Meilisearch version information", "parameter": {}}, {"name": "get-stats", "description": "Get database statistics", "parameter": {}}, {"name": "get-system-info", "description": "Get system-level information", "parameter": {}}], "domains": [{"name": "DataBase Management", "description": "数据库管理,涵盖数据库创建、查询、优化、备份及数据结构设计"}]}
{"name": "Milvus", "description": "Milvus数据库操作,包括:全文搜索、向量相似性搜索、集合查询、集合管理(创建/加载/释放)、数据插入与删除", "tools": [{"name": "milvus_text_search", "description": "Search for documents using full text search", "parameter": {"collection_name": "(string) Name of collection to search", "query_text": "(string) Text to search for", "limit": "(Optional, int) Maximum results (default: 5)", "output_fields": "(Optional, list) Fields to include in results", "drop_ratio": "(Optional, float) Proportion of low-frequency terms to ignore (0.0-1.0)"}}, {"name": "milvus_vector_search", "description": "Perform vector similarity search on a collection", "parameter": {"collection_name": "(string) Name of collection to search", "vector": "(list) Query vector", "vector_field": "(Optional, string) Field containing vectors to search (default: 'vector')", "limit": "(Optional, int) Maximum results (default: 5)", "output_fields": "(Optional, list) Fields to include in results", "metric_type": "(Optional, string) Distance metric (COSINE, L2, IP) (default: 'COSINE')"}}, {"name": "milvus_query", "description": "Query collection using filter expressions", "parameter": {"collection_name": "(string) Name of collection to query", "filter_expr": "(string) Filter expression (e.g. 'age > 20')", "output_fields": "(Optional, list) Fields to include in results", "limit": "(Optional, int) Maximum results (default: 10)"}}, {"name": "milvus_list_collections", "description": "List all collections in the database", "parameter": {}}, {"name": "milvus_create_collection", "description": "Create a new collection with specified schema", "parameter": {"collection_name": "(string) Name for the new collection", "collection_schema": "(dict) Collection schema definition", "index_params": "(Optional, dict) Optional index parameters"}}, {"name": "milvus_load_collection", "description": "Load a collection into memory for search and query", "parameter": {"collection_name": "(string) Name of collection to load", "replica_number": "(Optional, int) Number of replicas (default: 1)"}}, {"name": "milvus_release_collection", "description": "Release a collection from memory", "parameter": {"collection_name": "(string) Name of collection to release"}}, {"name": "milvus_insert_data", "description": "Insert data into a collection", "parameter": {"collection_name": "(string) Name of collection", "data": "(dict) Dictionary mapping field names to lists of values"}}, {"name": "milvus_delete_entities", "description": "Delete entities from a collection based on filter expression", "parameter": {"collection_name": "(string) Name of collection", "filter_expr": "(string) Filter expression to select entities to delete"}}], "domains": [{"name": "DataBase Management", "description": "数据库管理，涵盖数据库创建、查询、优化、备份及数据结构设计"}]}
{"name": "Momento", "description": "Momento缓存服务操作，包括：获取缓存值、设置缓存值（带TTL）、列出所有缓存、创建新缓存、删除缓存", "tools": [{"name": "get", "description": "Get the cache value stored for the given key.", "parameter": {"key": "string -- the key to look up in the cache.", "cacheName": "(Optional, string) -- the name cache where the key presides"}}, {"name": "set", "description": "Sets the value in cache with a given Time To Live (TTL) seconds. If a value for this key is already present, it will be replaced by the new value regardless of the previous value's data type.", "parameter": {"key": "string -- the key to set in the cache", "value": "string -- the value to set for the given key", "ttl": "(Optional, integer) -- the number of seconds to keep this value in the cache", "cacheName": "(Optional, string) -- the name of the cache to store the key in"}}, {"name": "list-caches", "description": "Lists the names of all the caches in your Momento account.", "parameter": {}}, {"name": "create-cache", "description": "Creates a new cache in your Momento account.", "parameter": {"name": "string -- the name of the cache to create"}}, {"name": "delete-cache", "description": "Deletes a cache from your Momento account.", "parameter": {"name": "string -- the name of the cache to delete"}}], "domains": [{"name": "Cloud Service Integration", "description": "云服务集成，调用与管理云平台 API(如 AWS/Azure)，支持云资源对接与 AI 服务整合"}]}
{"name": "MongoDB", "description": "MongoDB Atlas管理工具集，包括：组织与项目管理、集群创建与连接、访问控制配置、数据库用户管理、数据库操作（查询、聚合、插入、更新、删除）、集合与索引管理、数据库统计信息获取", "tools": [{"name": "atlas-list-orgs", "description": "Lists MongoDB Atlas organizations", "parameter": {}}, {"name": "atlas-list-projects", "description": "Lists MongoDB Atlas projects", "parameter": {}}, {"name": "atlas-create-project", "description": "Creates a new MongoDB Atlas project", "parameter": {}}, {"name": "atlas-list-clusters", "description": "Lists MongoDB Atlas clusters", "parameter": {}}, {"name": "atlas-inspect-cluster", "description": "Inspect a specific MongoDB Atlas cluster", "parameter": {}}, {"name": "atlas-create-free-cluster", "description": "Create a free MongoDB Atlas cluster", "parameter": {}}, {"name": "atlas-connect-cluster", "description": "Connects to MongoDB Atlas cluster", "parameter": {}}, {"name": "atlas-inspect-access-list", "description": "Inspect IP/CIDR ranges with access to MongoDB Atlas clusters", "parameter": {}}, {"name": "atlas-create-access-list", "description": "Configure IP/CIDR access list for MongoDB Atlas clusters", "parameter": {}}, {"name": "atlas-list-db-users", "description": "List MongoDB Atlas database users", "parameter": {}}, {"name": "atlas-create-db-user", "description": "List MongoDB Atlas database users", "parameter": {}}, {"name": "connect", "description": "Connect to a MongoDB instance", "parameter": {}}, {"name": "find", "description": "Run a find query against a MongoDB collection", "parameter": {}}, {"name": "aggregate", "description": "Run an aggregation against a MongoDB collection", "parameter": {}}, {"name": "count", "description": "Get the number of documents in a MongoDB collection", "parameter": {}}, {"name": "insert-one", "description": "Insert a single document into a MongoDB collection", "parameter": {}}, {"name": "insert-many", "description": "Insert multiple documents into a MongoDB collection", "parameter": {}}, {"name": "create-index", "description": "Create an index for a MongoDB collection", "parameter": {}}, {"name": "update-one", "description": "Update a single document in a MongoDB collection", "parameter": {}}, {"name": "update-many", "description": "Update multiple documents in a MongoDB collection", "parameter": {}}, {"name": "rename-collection", "description": "Rename a MongoDB collection", "parameter": {}}, {"name": "delete-one", "description": "Delete a single document from a MongoDB collection", "parameter": {}}, {"name": "delete-many", "description": "Delete multiple documents from a MongoDB collection", "parameter": {}}, {"name": "drop-collection", "description": "Remove a collection from a MongoDB database", "parameter": {}}, {"name": "drop-database", "description": "Remove a MongoDB database", "parameter": {}}, {"name": "list-databases", "description": "List all databases for a MongoDB connection", "parameter": {}}, {"name": "list-collections", "description": "List all collections for a given database", "parameter": {}}, {"name": "collection-indexes", "description": "Describe the indexes for a collection", "parameter": {}}, {"name": "collection-schema", "description": "Describe the schema for a collection", "parameter": {}}, {"name": "collection-storage-size", "description": "Get the size of a collection in MB", "parameter": {}}, {"name": "db-stats", "description": "Return statistics about a MongoDB database", "parameter": {}}], "domains": [{"name": "DataBase Management", "description": "数据库管理，涵盖数据库创建、查询、优化、备份及数据结构设计"}, {"name": "Cloud Service Integration", "description": "云服务集成，调用与管理云平台 API(如 AWS/Azure)，支持云资源对接与 AI 服务整合"}]}
{"name": "MotherDuck", "description": "Execute SQL queries on DuckDB or MotherDuck databases", "tools": [{"name": "query", "description": "Execute a SQL query on the DuckDB or MotherDuck database", "parameter": {"query": "(string, required) The SQL query to execute"}}], "domains": [{"name": "DataBase Management", "description": "数据库管理，涵盖数据库创建、查询、优化、备份及数据结构设计"}]}
{"name": "Neo4j", "description": "1.将自然语言转换为Cypher查询以在Neo4j数据库上执行读写操作 2.在Neo4j实例中管理个人知识图谱 3.提供Neo4j Aura云实例的管理功能", "tools": [{"name": "mcp-neo4j-cypher", "description": "Converts natural language to Cypher queries for executing read and write operations on a configured Neo4j database.", "parameter": {}}, {"name": "mcp-neo4j-memory", "description": "Manages a personal knowledge graph in a Neo4j instance, allowing storage and retrieval of entities and relationships across different sessions and clients.", "parameter": {}}, {"name": "mcp-neo4j-cloud-aura-api", "description": "Provides management capabilities for Neo4j Aura cloud instances, including creating, destroying, finding, scaling, and enabling features.", "parameter": {}}], "domains": [{"name": "DataBase Management", "description": "数据库管理，涵盖数据库创建、查询、优化、备份及数据结构设计"}, {"name": "Cloud Service Integration", "description": "云服务集成，调用与管理云平台 API(如 AWS/Azure)，支持云资源对接与 AI 服务整合"}]}
{"name": "Neon", "description": "Neon数据库项目管理与操作,包括:项目列表检索、项目详情获取、项目创建与删除、分支创建与删除、分支详情获取、数据库连接字符串获取、SQL查询执行、SQL事务执行、数据库表列表获取、表结构详情获取、数据库迁移准备与完成、Neon Auth认证配置", "tools": [{"name": "list_projects", "description": "Retrieves a list of your Neon projects, providing a summary of each project associated with your Neon account.", "parameter": {}}, {"name": "describe_project", "description": "Fetches detailed information about a specific Neon project, including its ID, name, and associated branches and databases.", "parameter": {}}, {"name": "create_project", "description": "Creates a new Neon project in your Neon account. A project acts as a container for branches, databases, roles, and computes.", "parameter": {}}, {"name": "delete_project", "description": "Deletes an existing Neon project and all its associated resources.", "parameter": {}}, {"name": "create_branch", "description": "Creates a new branch within a specified Neon project. Leverages Neon's branching feature for development, testing, or migrations.", "parameter": {}}, {"name": "delete_branch", "description": "Deletes an existing branch from a Neon project.", "parameter": {}}, {"name": "describe_branch", "description": "Retrieves details about a specific branch, such as its name, ID, and parent branch.", "parameter": {}}, {"name": "get_connection_string", "description": "Returns your database connection string.", "parameter": {}}, {"name": "run_sql", "description": "Executes a single SQL query against a specified Neon database. Supports both read and write operations.", "parameter": {}}, {"name": "run_sql_transaction", "description": "Executes a series of SQL queries within a single transaction against a Neon database.", "parameter": {}}, {"name": "get_database_tables", "description": "Lists all tables within a specified Neon database.", "parameter": {}}, {"name": "describe_table_schema", "description": "Retrieves the schema definition of a specific table, detailing columns, data types, and constraints.", "parameter": {}}, {"name": "prepare_database_migration", "description": "Initiates a database migration process. Creates a temporary branch to apply and test the migration safely before affecting the main branch.", "parameter": {}}, {"name": "complete_database_migration", "description": "Finalizes and applies a prepared database migration to the main branch. Merges changes from the temporary migration branch and cleans up temporary resources.", "parameter": {}}, {"name": "provision_neon_auth", "description": "Action to provision Neon Auth for a Neon project. It allows developers to easily set up authentication infrastructure by creating an integration with Stack Auth.", "parameter": {}}], "domains": [{"name": "DataBase Management", "description": "数据库管理,涵盖数据库创建、查询、优化、备份及数据结构设计"}, {"name": "Cloud Service Integration", "description": "云服务集成，调用与管理云平台 API(如 AWS/Azure)，支持云资源对接与 AI 服务整合"}]}
{"name": "Octagon", "description": "1. Extract information from SEC filings 2. Analyze earnings call transcripts 3. Retrieve financial metrics and ratios 4. Access stock market data 5. Research private company information 6. Research startup funding rounds and venture capital 7. Research M&A and IPO transactions 8. Look up information on investors 9. Analyze private debts, borrowers, and lenders 10. Extract data from any public website 11. Perform comprehensive research on any topic", "tools": [{"name": "octagon-sec-agent", "description": "Extract information from SEC filings.", "parameter": {"prompt": "(string) A natural language query specifying the information to extract from SEC filings."}}, {"name": "octagon-transcripts-agent", "description": "Analyze earnings call transcripts.", "parameter": {"prompt": "(string) A natural language query specifying the information to extract from earnings call transcripts."}}, {"name": "octagon-financials-agent", "description": "Retrieve financial metrics and ratios.", "parameter": {"prompt": "(string) A natural language query specifying the financial metrics or ratios to retrieve."}}, {"name": "octagon-stock-data-agent", "description": "Access stock market data.", "parameter": {"prompt": "(string) A natural language query specifying the stock market data to access."}}, {"name": "octagon-companies-agent", "description": "Research private company information.", "parameter": {"prompt": "(string) A natural language query specifying the private company information to research."}}, {"name": "octagon-funding-agent", "description": "Research startup funding rounds and venture capital.", "parameter": {"prompt": "(string) A natural language query specifying the funding rounds or venture capital information to research."}}, {"name": "octagon-deals-agent", "description": "Research M&A and IPO transactions.", "parameter": {"prompt": "(string) A natural language query specifying the M&A or IPO transaction information to research."}}, {"name": "octagon-investors-agent", "description": "A specialized database agent for looking up information on investors.", "parameter": {"prompt": "(string) A natural language query specifying the investor information to look up."}}, {"name": "octagon-debts-agent", "description": "A specialized database agent for analyzing private debts, borrowers, and lenders.", "parameter": {"prompt": "(string) A natural language query specifying the debt information to analyze."}}, {"name": "octagon-scraper-agent", "description": "Extract data from any public website.", "parameter": {"prompt": "(string) A natural language query specifying the data to extract from a public website."}}, {"name": "octagon-deep-research-agent", "description": "Perform comprehensive research on any topic.", "parameter": {"prompt": "(string) A natural language query specifying the topic to research."}}], "domains": [{"name": "Financial Service", "description": "金融服务,包括支付处理、理财管理、云成本分析及财务报表生成"}, {"name": "Web Data Acquisition", "description": "网络数据采集,包含网页爬虫、内容提取、反爬处理及代码仓库索引分析"}, {"name": "Data Analysis", "description": "数据分析，包括数据收集、查询、追踪和分析"}]}
{"name": "Oxylabs", "description": "1.使用Oxylabs Web Scraper API进行网站爬取，支持JavaScript渲染、结构化数据解析和Markdown格式HTML清理 2.使用Oxylabs Web Unblocker访问难以访问的网站，支持JavaScript渲染和HTML清理", "tools": [{"name": "oxylabs_scraper", "description": "Uses Oxylabs Web Scraper API for general website scraping with support for JavaScript rendering, parsed structured data, and cleaned HTML in Markdown format.", "parameter": {"url": "(string) The URL to scrape", "parse": "(Optional, boolean) Enable structured data extraction", "render": "(Optional, string) Use headless browser rendering; values: 'html' or 'None'"}}, {"name": "oxylabs_web_unblocker", "description": "Uses Oxylabs Web Unblocker for hard-to-access websites with support for JavaScript rendering and cleaned HTML, but does not return parsed data.", "parameter": {"url": "(string) The URL to scrape", "render": "(Optional, string) Use headless browser rendering; values: 'html' or 'None'"}}], "domains": [{"name": "Web Data Acquisition", "description": "网络数据采集,包含网页爬虫、内容提取、反爬处理及代码仓库索引分析"}]}
{"name": "Perplexity", "description": "Engage in live web searches using the Sonar API", "tools": [{"name": "perplexity_ask", "description": "Engage in a conversation with the Sonar API for live web searches.", "parameter": {"messages": "(array) An array of conversation messages. Each message must include: role (string) The role of the message (e.g., system, user, assistant), content (string) The content of the message."}}], "domains": [{"name": "Web Search", "description": "网页信息检索,通过关键词查询公开网页内容,支持多类型信息主动获取"}]}
{"name": "Pinecone", "description": "Pinecone vector database operations, including: document search, index listing/description/statistics, index creation with integrated inference, record upsert/search, cascading search across indexes, and document reranking", "tools": [{"name": "search-docs", "description": "Search the official Pinecone documentation.", "parameter": {}}, {"name": "list-indexes", "description": "Lists all Pinecone indexes.", "parameter": {}}, {"name": "describe-index", "description": "Describes the configuration of an index.", "parameter": {}}, {"name": "describe-index-stats", "description": "Provides statistics about the data in the index, including the number of records and available namespaces.", "parameter": {}}, {"name": "create-index-for-model", "description": "Creates a new index that uses an integrated inference model to embed text as vectors.", "parameter": {}}, {"name": "upsert-records", "description": "Inserts or updates records in an index with integrated inference.", "parameter": {}}, {"name": "search-records", "description": "Searches for records in an index based on a text query, using integrated inference for embedding. Has options for metadata filtering and reranking.", "parameter": {}}, {"name": "cascading-search", "description": "Searches for records across multiple indexes, deduplicating and reranking the results.", "parameter": {}}, {"name": "rerank-documents", "description": "Reranks a collection of records or text documents using a specialized reranking model.", "parameter": {}}], "domains": [{"name": "DataBase Management", "description": "数据库管理，涵盖数据库创建、查询、优化、备份及数据结构设计"}, {"name": "AI Model Lifecycle Management", "description": "人工智能模型训练与推理，涵盖深度学习与传统机器学习框架建模、模型优化与部署、实验跟踪、数据预处理及全流程生命周期管理"}]}
{"name": "Redis", "description": "Redis database operations including: string operations with expiration, hash field-value pair storage, list operations for queues, set operations for unique values, sorted set operations for leaderboards, pub/sub for real-time messaging, stream operations for event sourcing, JSON document manipulation, vector search query engine, and server information retrieval", "tools": [{"name": "string", "description": "Tools to set, get strings with expiration. Useful for storing simple configuration values, session data, or caching responses.", "parameter": {}}, {"name": "hash", "description": "Tools to store field-value pairs within a single key. The hash can store vector embeddings. Useful for representing objects with multiple attributes, user profiles, or product information where fields can be accessed individually.", "parameter": {}}, {"name": "list", "description": "Tools with common operations to append and pop items. Useful for queues, message brokers, or maintaining a list of most recent actions.", "parameter": {}}, {"name": "set", "description": "Tools to add, remove and list set members. Useful for tracking unique values like user IDs or tags, and for performing set operations like intersection.", "parameter": {}}, {"name": "sorted set", "description": "Tools to manage data for e.g. leaderboards, priority queues, or time-based analytics with score-based ordering.", "parameter": {}}, {"name": "pub/sub", "description": "Functionality to publish messages to channels and subscribe to receive them. Useful for real-time notifications, chat applications, or distributing updates to multiple clients.", "parameter": {}}, {"name": "streams", "description": "Tools to add, read, and delete from data streams. Useful for event sourcing, activity feeds, or sensor data logging with consumer groups support.", "parameter": {}}, {"name": "JSON", "description": "Tools to store, retrieve, and manipulate JSON documents in Redis. Useful for complex nested data structures, document databases, or configuration management with path-based access.", "parameter": {}}, {"name": "query engine", "description": "Tools to manage vector indexes and perform vector search.", "parameter": {}}, {"name": "server management", "description": "Tool to retrieve information about the database.", "parameter": {}}], "domains": [{"name": "DataBase Management", "description": "数据库管理，涵盖数据库创建、查询、优化、备份及数据结构设计"}]}
{"name": "Redis Cloud API", "description": "Redis Cloud account management, including: account details retrieval, payment methods listing, Pro/Essential subscriptions creation/listing/deletion, database modules listing, regions and plans retrieval, task management", "tools": [{"name": "get_current_account", "description": "Get details about your current Redis Cloud account", "parameter": {}}, {"name": "get_current_payment_methods", "description": "List all payment methods configured for your account", "parameter": {}}, {"name": "get_pro_subscriptions", "description": "List all Pro subscriptions in your account", "parameter": {}}, {"name": "create_pro_subscription", "description": "Create a new Pro subscription with advanced configuration options", "parameter": {"multi_cloud_deployment": "(Optional, boolean) Whether to support multi-cloud deployment", "memory": "(Optional, number) Memory configuration", "persistence": "(Optional, boolean) Persistence configuration", "modules": "(Optional, array) List of modules to configure", "active_active_deployments": "(Optional, boolean) Set up Active-Active deployments", "networking_configuration": "(Optional, object) Custom networking configuration"}}, {"name": "get_essential_subscriptions", "description": "List all Essential subscriptions (paginated)", "parameter": {}}, {"name": "get_essential_subscription_by_id", "description": "Get detailed information about a specific Essential subscription", "parameter": {"subscription_id": "(string) ID of the Essential subscription"}}, {"name": "create_essential_subscription", "description": "Create a new Essential subscription", "parameter": {}}, {"name": "delete_essential_subscription", "description": "Delete an Essential subscription", "parameter": {"subscription_id": "(string) ID of the Essential subscription to delete"}}, {"name": "get_database_modules", "description": "List all available database modules (capabilities) supported in your account", "parameter": {}}, {"name": "get_pro_plans_regions", "description": "Get available regions across cloud providers", "parameter": {}}, {"name": "get_essentials_plans", "description": "List available Essential subscription plans (paginated)", "parameter": {}}, {"name": "get_tasks", "description": "List all current tasks in your account", "parameter": {}}, {"name": "get_task_by_id", "description": "Get detailed information about a specific task", "parameter": {"task_id": "(string) ID of the task"}}], "domains": [{"name": "Cloud Service Integration", "description": "云服务集成，调用与管理云平台 API(如 AWS/Azure)，支持云资源对接与 AI 服务整合"}]}
{"name": "Qdrant", "description": "1. Store information in Qdrant database 2. Retrieve information from Qdrant database", "tools": [{"name": "qdrant-store", "description": "Store some information in the Qdrant database", "parameter": {"information": "(string) Information to store", "metadata": "(Optional, JSON) Optional metadata to store", "collection_name": "(string) Name of the collection to store the information in. Required if there is no default collection name."}}, {"name": "qdrant-find", "description": "Retrieve relevant information from the Qdrant database", "parameter": {"query": "(string) Query to use for searching", "collection_name": "(string) Name of the collection to store the information in. Required if there is no default collection name."}}], "domains": [{"name": "DataBase Management", "description": "数据库管理，涵盖数据库创建、查询、优化、备份及数据结构设计"}]}
{"name": "Ramp", "description": "1.数据处理与分析 2.临时数据库查询与表清理 3.财务数据加载（交易、报销、账单等） 4.组织数据加载（部门、用户、供应商等）", "tools": [{"name": "process_data", "description": "Processes data for analysis.", "parameter": {}}, {"name": "execute_query", "description": "Executes a query on the ephemeral database.", "parameter": {}}, {"name": "clear_table", "description": "Clears a table in the ephemeral database.", "parameter": {}}, {"name": "get_ramp_categories", "description": "Fetches Ramp categories.", "parameter": {}}, {"name": "get_currencies", "description": "Fetches available currencies.", "parameter": {}}, {"name": "load_transactions", "description": "Loads transactions data.", "parameter": {}}, {"name": "load_reimbursements", "description": "Loads reimbursements data.", "parameter": {}}, {"name": "load_bills", "description": "Loads bills data.", "parameter": {}}, {"name": "load_locations", "description": "Loads locations data.", "parameter": {}}, {"name": "load_departments", "description": "Loads departments data.", "parameter": {}}, {"name": "load_bank_accounts", "description": "Loads bank accounts data.", "parameter": {}}, {"name": "load_vendors", "description": "Loads vendors data.", "parameter": {}}, {"name": "load_vendor_bank_accounts", "description": "Loads vendor bank accounts data.", "parameter": {}}, {"name": "load_entities", "description": "Loads entities data.", "parameter": {}}, {"name": "load_spend_limits", "description": "Loads spend limits data.", "parameter": {}}, {"name": "load_spend_programs", "description": "Loads spend programs data.", "parameter": {}}, {"name": "load_users", "description": "Loads users data.", "parameter": {}}], "domains": [{"name": "Data Analysis", "description": "数据分析，包括数据收集、查询、追踪和分析"}, {"name": "Financial Service", "description": "金融服务,包括支付处理、理财管理、云成本分析及财务报表生成"}, {"name": "Business Management", "description": "业务管理，包括业务信息获取、位置管理、营业时间更新及媒体内容管理"}]}
{"name": "Raygun", "description": "Application monitoring and management, including: application listing and details retrieval, API key regeneration, error group management, deployment operations, customer and session tracking, performance metrics analysis, source map handling, and team invitation management", "tools": [{"name": "list_applications", "description": "List all applications under your account", "parameter": {}}, {"name": "get_application", "description": "Get application details by identifier", "parameter": {}}, {"name": "get_application_by_api_key", "description": "Get application details by API key", "parameter": {}}, {"name": "regenerate_application_api_key", "description": "Generate a new API key for an application", "parameter": {}}, {"name": "list_error_groups", "description": "List error groups for an application", "parameter": {}}, {"name": "get_error_group", "description": "Get detailed information about an error group", "parameter": {}}, {"name": "resolve_error_group", "description": "Set error group status to resolved", "parameter": {}}, {"name": "activate_error_group", "description": "Set error group status to active", "parameter": {}}, {"name": "ignore_error_group", "description": "Set error group status to ignored", "parameter": {}}, {"name": "permanently_ignore_error_group", "description": "Set error group status to permanently ignored", "parameter": {}}, {"name": "list_deployments", "description": "List deployments for an application", "parameter": {}}, {"name": "get_deployment", "description": "Get deployment details by identifier", "parameter": {}}, {"name": "delete_deployment", "description": "Remove a deployment", "parameter": {}}, {"name": "update_deployment", "description": "Update deployment information", "parameter": {}}, {"name": "reprocess_deployment_commits", "description": "Reprocess deployment commit data", "parameter": {}}, {"name": "list_customers", "description": "List customers for an application", "parameter": {}}, {"name": "list_sessions", "description": "List user sessions for an application", "parameter": {}}, {"name": "get_session", "description": "Get detailed session information", "parameter": {}}, {"name": "list_pages", "description": "List monitored pages for an application", "parameter": {}}, {"name": "get_page_metrics_time_series", "description": "Get time-series performance metrics", "parameter": {}}, {"name": "get_page_metrics_histogram", "description": "Get histogram of performance metrics", "parameter": {}}, {"name": "get_error_metrics_time_series", "description": "Get time-series error metrics", "parameter": {}}, {"name": "list_source_maps", "description": "List source maps for an application", "parameter": {}}, {"name": "get_source_map", "description": "Get source map details", "parameter": {}}, {"name": "update_source_map", "description": "Update source map information", "parameter": {}}, {"name": "delete_source_map", "description": "Remove a source map", "parameter": {}}, {"name": "upload_source_map", "description": "Upload a new source map", "parameter": {}}, {"name": "delete_all_source_maps", "description": "Remove all source maps", "parameter": {}}, {"name": "list_invitations", "description": "List pending team invitations", "parameter": {}}, {"name": "send_invitation", "description": "Send a new team invitation", "parameter": {}}, {"name": "get_invitation", "description": "Get invitation details", "parameter": {}}, {"name": "revoke_invitation", "description": "Revoke a pending invitation", "parameter": {}}], "domains": [{"name": "Application Monitoring & Management", "description": "Application performance monitoring and management, including error tracking, deployment management, performance metrics analysis, and team collaboration"}]}
{"name": "Rember", "description": "Create flashcards with AI using the Rember API from Claude notes", "tools": [{"name": "create_flashcards", "description": "Creates flashcards with AI by taking a list of notes from Claude and generating a few flashcards for each note using the Rember API.", "parameter": {"notes": "(list of strings) A list of notes from Claude to generate flashcards from."}}], "domains": [{"name": "AI Model Lifecycle Management", "description": "人工智能模型训练与推理，涵盖深度学习与传统机器学习框架建模、模型优化与部署、实验跟踪、数据预处理及全流程生命周期管理"}]}
{"name": "Riza", "description": "1. Create new tools using Riza Tools API 2. Fetch and edit saved Riza tools 3. Execute saved tools securely on Riza's code interpreter API 4. List all available saved tools 5. Execute arbitrary code safely on Riza's code interpreter API", "tools": [{"name": "create_tool", "description": "Creates a new tool by writing code and saving it using the Riza Tools API.", "parameter": {}}, {"name": "fetch_tool", "description": "Fetches saved Riza tools, including their source code, for editing purposes.", "parameter": {}}, {"name": "execute_tool", "description": "Executes a saved tool securely on Riza's code interpreter API.", "parameter": {}}, {"name": "edit_tool", "description": "Edits an existing saved tool.", "parameter": {}}, {"name": "list_tools", "description": "Lists all available saved tools.", "parameter": {}}, {"name": "execute_code", "description": "Executes arbitrary code safely on Riza's code interpreter API without saving it as a tool.", "parameter": {}}], "domains": [{"name": "Tool Management", "description": "工具管理，包括工具信息的检索、搜索、添加和移除"}, {"name": "Code Toolkit", "description": "代码工具集,版本控制(如git命令执行)、代码生成、代码执行、测试等"}]}
{"name": "ScreenshotOne", "description": "Render a screenshot of a website and return it as an image", "tools": [{"name": "render-website-screenshot", "description": "Render a screenshot of a website and returns it as an image.", "parameter": {}}], "domains": [{"name": "Browser Operation", "description": "浏览器操作与自动化控制,如网页元素操控、Cookie 管理、页面截图等"}]}
{"name": "Semgrep", "description": "1.扫描代码安全漏洞 2.使用自定义Semgrep规则扫描代码文件 3.输出代码的抽象语法树(AST) 4.获取Semgrep支持的语言列表 5.获取最新的Semgrep规则JSON Schema", "tools": [{"name": "security_check", "description": "Scan code for security vulnerabilities", "parameter": {}}, {"name": "semgrep_scan", "description": "Scan code files for security vulnerabilities with a given config string", "parameter": {"code_files": "(list of objects) List of code files to scan, each with 'filename' and 'content' keys"}}, {"name": "semgrep_scan_with_custom_rule", "description": "Scan code files using a custom Semgrep rule", "parameter": {"code_files": "(list of objects) List of code files to scan, each with 'filename' and 'content' keys", "custom_rule": "(string) Custom Semgrep rule to use for scanning"}}, {"name": "get_abstract_syntax_tree", "description": "Output the Abstract Syntax Tree (AST) of code", "parameter": {"code": "(string) Code to generate the AST for"}}, {"name": "supported_languages", "description": "Return the list of languages Semgrep supports", "parameter": {}}, {"name": "semgrep_rule_schema", "description": "Fetches the latest semgrep rule JSON Schema", "parameter": {}}], "domains": [{"name": "Code Toolkit", "description": "代码工具集,版本控制(如git命令执行)、代码生成、代码执行、测试等"}]}
{"name": "SingleStore", "description": "1. Retrieve workspace groups, workspaces, and organization details 2. List regions supporting workspaces 3. Execute SQL operations on workspaces 4. List and create starter workspaces 5. List notebook samples and create notebooks 6. List personal files 7. Create and manage scheduled jobs for notebooks", "tools": [{"name": "workspace_groups_info", "description": "Retrieve details about the workspace groups accessible to the user", "parameter": {}}, {"name": "workspaces_info", "description": "Retrieve details about the workspaces in a specific workspace group", "parameter": {"workspaceGroupID": "(string) ID of the workspace group"}}, {"name": "organization_info", "description": "Retrieve details about the user's current organization", "parameter": {}}, {"name": "list_of_regions", "description": "Retrieve a list of all regions that support workspaces for the user", "parameter": {}}, {"name": "execute_sql", "description": "Execute SQL operations on a connected workspace", "parameter": {"workspace_group_identifier": "(string) Identifier of the workspace group", "workspace_identifier": "(string) Identifier of the workspace", "username": "(string) Username for accessing the workspace", "password": "(string) Password for the user", "database": "(string) Name of the database", "sql_query": "(string) SQL query to execute"}}, {"name": "list_virtual_workspaces", "description": "List all starter workspaces accessible to the user", "parameter": {}}, {"name": "create_virtual_workspace", "description": "Create a new starter workspace with a user", "parameter": {"name": "(string) Name of the starter workspace", "database_name": "(string) Name of the database to create", "username": "(string) Username for accessing the workspace", "password": "(string) Password for the user", "workspace_group": "(object) Object containing 'name' (optional) and 'cellID' (mandatory)"}}, {"name": "execute_sql_on_virtual_workspace", "description": "Execute SQL operations on a virtual workspace", "parameter": {"virtual_workspace_id": "(string) ID of the virtual workspace", "username": "(string) Username for accessing the workspace", "password": "(string) Password for the user", "sql_query": "(string) SQL query to execute"}}, {"name": "list_notebook_samples", "description": "List all notebook samples available in SingleStore Spaces", "parameter": {}}, {"name": "create_notebook", "description": "Create a new notebook in the user's personal space", "parameter": {"notebook_name": "(string) Name of the notebook", "content": "(Optional, string) Content of the notebook"}}, {"name": "list_personal_files", "description": "List all files in the user's personal space", "parameter": {}}, {"name": "create_scheduled_job", "description": "Create a new scheduled job to run a notebook", "parameter": {"name": "(string) Name for the job", "notebook_path": "(string) Path to the notebook to execute", "schedule_mode": "(string) Once or Recurring", "execution_interval_minutes": "(Optional, number) Minutes between executions", "start_at": "(Optional, string) When to start the job", "description": "(Optional, string) Description of the job", "create_snapshot": "(Optional, boolean) Whether to create notebook snapshots", "runtime_name": "(string) Name of the runtime environment", "parameters": "(Optional, object) Parameters for the job", "target_config": "(Optional, object) Target configuration for the job"}}, {"name": "get_job_details", "description": "Get details about a specific job", "parameter": {"job_id": "(string) ID of the job"}}, {"name": "list_job_executions", "description": "List execution history for a specific job", "parameter": {"job_id": "(string) ID of the job", "start": "(Optional, string) Start date for the execution history", "end": "(Optional, string) End date for the execution history"}}], "domains": [{"name": "Workspace Management", "description": "Workspace operations and management, including workspace creation, SQL execution, and job scheduling"}, {"name": "Data Analysis", "description": "数据分析，包括数据收集、查询、追踪和分析"}]}
{"name": "StarRocks", "description": "StarRocks数据库操作,包括:执行SELECT/DDL/DML查询、生成Plotly图表、获取表和数据库概览信息", "tools": [{"name": "read_query", "description": "Execute a SELECT query or other commands that return a ResultSet (e.g., SHOW, DESCRIBE).", "parameter": {"query": "(string) SQL query string"}}, {"name": "write_query", "description": "Execute a DDL (CREATE, ALTER, DROP), DML (INSERT, UPDATE, DELETE), or other StarRocks command that does not return a ResultSet.", "parameter": {"query": "(string) SQL command string"}}, {"name": "query_and_plotly_chart", "description": "Executes a SQL query, loads the results into a Pandas DataFrame, and generates a Plotly chart using a provided Python expression.", "parameter": {"query": "(string) SQL query to fetch data", "plotly_expr": "(string) Python expression string using 'px' (Plotly Express) and 'df' (DataFrame). Example: 'px.scatter(df, x=\"col1\", y=\"col2\")'"}}, {"name": "table_overview", "description": "Get an overview of a specific table: columns (from DESCRIBE), total row count, and sample rows (LIMIT 3). Uses an in-memory cache unless refresh is true.", "parameter": {"table": "(string) Table name, optionally prefixed with database name (e.g., 'db_name.table_name' or 'table_name'). If database is omitted, uses STARROCKS_DB environment variable if set.", "refresh": "(Optional, boolean) Set to true to bypass the cache. Defaults to false."}}, {"name": "db_overview", "description": "Get an overview (columns, row count, sample rows) for all tables within a specified database. Uses the table-level cache for each table unless refresh is true.", "parameter": {"db": "(string) Database name. Optional if STARROCKS_DB env var is set.", "refresh": "(Optional, boolean) Set to true to bypass the cache for all tables in the DB. Defaults to false."}}], "domains": [{"name": "DataBase Management", "description": "数据库管理，涵盖数据库创建、查询、优化、备份及数据结构设计"}, {"name": "Data Analysis", "description": "数据分析，包括数据收集、查询、追踪和分析"}]}
{"name": "Stripe", "description": "Stripe支付服务操作,包括:客户管理、优惠券管理、产品与价格管理、支付链接创建、发票管理、余额查询、订阅管理、退款处理、争议处理", "tools": [{"name": "createCustomer", "description": "Creates a new customer in Stripe.", "parameter": {"name": "(string) The customer's name.", "email": "(string) The customer's email address.", "phone": "(Optional, string) The customer's phone number."}}, {"name": "listCustomers", "description": "Lists all customers in Stripe.", "parameter": {}}, {"name": "createCoupon", "description": "Creates a new coupon in Stripe.", "parameter": {"percent_off": "(number) The percentage discount.", "duration": "(string) The duration of the coupon (e.g., 'once', 'repeating').", "duration_in_months": "(Optional, number) The number of months the coupon lasts if the duration is 'repeating'."}}, {"name": "listCoupons", "description": "Lists all coupons in Stripe.", "parameter": {}}, {"name": "createProduct", "description": "Creates a new product in Stripe.", "parameter": {"name": "(string) The product's name.", "description": "(string) The product's description.", "unit_label": "(Optional, string) The label for the unit of measure."}}, {"name": "listProducts", "description": "Lists all products in Stripe.", "parameter": {}}, {"name": "createPrice", "description": "Creates a new price in Stripe.", "parameter": {"product": "(string) The ID of the product this price is associated with.", "unit_amount": "(number) The unit amount in cents.", "currency": "(string) The currency of the price."}}, {"name": "listPrices", "description": "Lists all prices in Stripe.", "parameter": {}}, {"name": "createPaymentLink", "description": "Creates a new payment link in Stripe.", "parameter": {"line_items": "(array) An array of line items to include in the payment link.", "success_url": "(string) The URL to redirect to after a successful payment.", "cancel_url": "(string) The URL to redirect to if the payment is canceled."}}, {"name": "createInvoice", "description": "Creates a new invoice in Stripe.", "parameter": {"customer": "(string) The ID of the customer to create the invoice for.", "lines": "(array) An array of line items to include in the invoice."}}, {"name": "createInvoiceItem", "description": "Creates a new invoice item in Stripe.", "parameter": {"customer": "(string) The ID of the customer to create the invoice item for.", "amount": "(number) The amount of the invoice item in cents.", "currency": "(string) The currency of the invoice item."}}, {"name": "finalizeInvoice", "description": "Finalizes an invoice in Stripe.", "parameter": {"invoice": "(string) The ID of the invoice to finalize."}}, {"name": "retrieveBalance", "description": "Retrieves the current balance in Stripe.", "parameter": {}}, {"name": "listSubscriptions", "description": "Lists all subscriptions in Stripe.", "parameter": {}}, {"name": "updateSubscription", "description": "Updates an existing subscription in Stripe.", "parameter": {"subscription": "(string) The ID of the subscription to update.", "items": "(array) An array of subscription items to update."}}, {"name": "cancelSubscription", "description": "Cancels an existing subscription in Stripe.", "parameter": {"subscription": "(string) The ID of the subscription to cancel."}}, {"name": "createRefund", "description": "Creates a new refund in Stripe.", "parameter": {"charge": "(string) The ID of the charge to refund.", "amount": "(Optional, number) The amount to refund in cents."}}, {"name": "listDisputes", "description": "Lists all disputes in Stripe.", "parameter": {}}, {"name": "updateDispute", "description": "Updates an existing dispute in Stripe.", "parameter": {"dispute": "(string) The ID of the dispute to update.", "evidence": "(object) Evidence to submit for the dispute."}}], "domains": [{"name": "Financial Service", "description": "金融服务,包括支付处理、理财管理、云成本分析及财务报表生成"}]}
{"name": "Tavily", "description": "1.使用Tavily进行实时网页搜索 2.使用Tavily提取网页内容、图片和元数据", "tools": [{"name": "tavily-search", "description": "Performs real-time web searches with sophisticated filtering options and domain-specific search features.", "parameter": {}}, {"name": "tavily-extract", "description": "Extracts intelligent data from web pages, such as main content, images, and metadata.", "parameter": {}}], "domains": [{"name": "Web Search", "description": "网页信息检索,通过关键词查询公开网页内容,支持多类型信息主动获取"}, {"name": "Web Data Acquisition", "description": "网络数据采集,包含网页爬虫、内容提取、反爬处理及代码仓库索引分析"}]}
{"name": "Thirdweb", "description": "Retrieve a list of tools for AI agents compatible with frameworks like LangChain and OpenAI Agents", "tools": [{"name": "get_tools", "description": "Retrieves a list of tools for AI agents, which can be used with different frameworks like LangChain and OpenAI Agents.", "parameter": {"secret_key": "(string) The secret key required for authentication."}}], "domains": [{"name": "Tool Management", "description": "工具管理，包括工具信息的检索、搜索、添加和移除"}]}
{"name": "Tinybird", "description": "Tinybird Workspace operations, including: listing data sources and pipes, getting data source and pipe information, requesting pipe data, running select queries, adding business insights, accessing Tinybird documentation, saving events, analyzing pipe performance, and pushing datafiles", "tools": [{"name": "list-data-sources", "description": "Lists all Data Sources in the Tinybird Workspace", "parameter": {}}, {"name": "list-pipes", "description": "Lists all Pipe Endpoints in the Tinybird Workspace", "parameter": {}}, {"name": "get-data-source", "description": "Gets the information of a Data Source given its name, including the schema", "parameter": {"name": "(string) The name of the Data Source"}}, {"name": "get-pipe", "description": "Gets the information of a Pipe Endpoint given its name, including its nodes and SQL transformation", "parameter": {"name": "(string) The name of the Pipe Endpoint"}}, {"name": "request-pipe-data", "description": "Requests data from a Pipe Endpoint via an HTTP request. Pipe endpoints can have parameters to filter the analytical data", "parameter": {"name": "(string) The name of the Pipe Endpoint", "parameters": "(Optional, object) Parameters to filter the data"}}, {"name": "run-select-query", "description": "Allows to run a select query over a Data Source to extract insights", "parameter": {"query": "(string) The SQL select query"}}, {"name": "append-insight", "description": "Adds a new business insight to the memo resource", "parameter": {"insight": "(string) The business insight to add"}}, {"name": "llms-tinybird-docs", "description": "Contains the whole Tinybird product documentation, so you can use it to get context about what Tinybird is, what it does, API reference and more", "parameter": {}}, {"name": "save-event", "description": "Sends an event to a Tinybird Data Source. Use it to save a user-generated prompt to the prompts Data Source", "parameter": {"event": "(object) The event data to send"}}, {"name": "analyze-pipe", "description": "Uses the Tinybird analyze API to run a ClickHouse explain on the Pipe Endpoint query and check if indexes, sorting key, and partition key are being used and propose optimization suggestions", "parameter": {"name": "(string) The name of the Pipe Endpoint"}}, {"name": "push-datafile", "description": "Creates a remote Data Source or Pipe in the Tinybird Workspace from a local datafile", "parameter": {"file_path": "(string) The path to the local datafile", "data_source_name": "(string) The name of the Data Source to create", "pipe_name": "(Optional, string) The name of the Pipe to create"}}], "domains": [{"name": "Workspace Management", "description": "Workspace operations and management, including workspace creation, SQL execution, and job scheduling"}, {"name": "Data Analysis", "description": "数据分析，包括数据收集、查询、追踪和分析"}]}
{"name": "Unstructured", "description": "Unstructured API operations, including: 1. Source connector management (list, create, update, delete) 2. Destination connector management (list, create, update, delete) 3. Workflow management (list, create, run, update, delete) 4. Job management (list, get info, cancel) 5. Firecrawl integration (crawl HTML, check status, generate LLM-optimized text, cancel jobs)", "tools": [{"name": "list_sources", "description": "Lists available sources from the Unstructured API.", "parameter": {}}, {"name": "get_source_info", "description": "Get detailed information about a specific source connector.", "parameter": {}}, {"name": "create_source_connector", "description": "Create a source connector.", "parameter": {}}, {"name": "update_source_connector", "description": "Update an existing source connector by params.", "parameter": {}}, {"name": "delete_source_connector", "description": "Delete a source connector by source id.", "parameter": {}}, {"name": "list_destinations", "description": "Lists available destinations from the Unstructured API.", "parameter": {}}, {"name": "get_destination_info", "description": "Get detailed info about a specific destination connector.", "parameter": {}}, {"name": "create_destination_connector", "description": "Create a destination connector by params.", "parameter": {}}, {"name": "update_destination_connector", "description": "Update an existing destination connector by destination id.", "parameter": {}}, {"name": "delete_destination_connector", "description": "Delete a destination connector by destination id.", "parameter": {}}, {"name": "list_workflows", "description": "Lists workflows from the Unstructured API.", "parameter": {}}, {"name": "get_workflow_info", "description": "Get detailed information about a specific workflow.", "parameter": {}}, {"name": "create_workflow", "description": "Create a new workflow with source, destination id, etc.", "parameter": {}}, {"name": "run_workflow", "description": "Run a specific workflow with workflow id.", "parameter": {}}, {"name": "update_workflow", "description": "Update an existing workflow by params.", "parameter": {}}, {"name": "delete_workflow", "description": "Delete a specific workflow by id.", "parameter": {}}, {"name": "list_jobs", "description": "Lists jobs for a specific workflow from the Unstructured API.", "parameter": {}}, {"name": "get_job_info", "description": "Get detailed information about a specific job by job id.", "parameter": {}}, {"name": "cancel_job", "description": "Delete a specific job by id.", "parameter": {}}, {"name": "list_workflows_with_finished_jobs", "description": "Lists all workflows that have any completed job, together with information about source and destination details.", "parameter": {}}, {"name": "invoke_firecrawl_crawlhtml", "description": "Starts a crawl job using Firecrawl to retrieve HTML content.", "parameter": {}}, {"name": "check_crawlhtml_status", "description": "Checks the status of a crawl job.", "parameter": {}}, {"name": "invoke_firecrawl_llmtxt", "description": "Generates LLM-optimized text from crawled pages.", "parameter": {}}, {"name": "check_llmtxt_status", "description": "Retrieves the results of an LLM-optimized text generation job.", "parameter": {}}, {"name": "cancel_crawlhtml_job", "description": "Cancels a crawl job.", "parameter": {}}, {"name": "cancel_llmtxt_job", "description": "Cancels an LLM-optimized text generation job.", "parameter": {}}], "domains": [{"name": "API Development & Testing", "description": "API开发与测试，包括API规范验证、接口测试、文档生成及SDK生成"}, {"name": "Web Data Acquisition", "description": "网络数据采集,包含网页爬虫、内容提取、反爬处理及代码仓库索引分析"}]}
{"name": "Vectorize", "description": "1.执行向量搜索和文档检索 2.从文档中提取文本并分块为Markdown格式 3.从管道生成私有深度研究", "tools": [{"name": "retrieve", "description": "Performs vector search and retrieves documents.", "parameter": {"question": "(string) The query to search for.", "k": "(integer) The number of results to return."}}, {"name": "extract", "description": "Extracts text from a document and chunks it into Markdown format.", "parameter": {"base64document": "(string) The base64-encoded document to extract text from.", "contentType": "(string) The content type of the document."}}, {"name": "deep-research", "description": "Generates a Private Deep Research from your pipeline.", "parameter": {"query": "(string) The query to generate the research report.", "webSearch": "(boolean, optional) Whether to include web search results."}}], "domains": [{"name": "Document Format Conversion", "description": "文档格式转换,实现不同文档类型（如 PDF/Word/Markdown）的兼容性转换"}, {"name": "Web Data Acquisition", "description": "网络数据采集,包含网页爬虫、内容提取、反爬处理及代码仓库索引分析"}]}
{"name": "Verodat", "description": "1. Retrieve available accounts 2. List workspaces within an account 3. List datasets in a workspace 4. Retrieve actual data from a dataset 5. Retrieve field definitions for a dataset 6. Retrieve existing AI queries 7. Get workspace context and data structure 8. Execute AI-powered queries on datasets 9. Create a new dataset with defined schema 10. Upload data rows to existing datasets", "tools": [{"name": "get-accounts", "description": "Retrieve available accounts", "parameter": {}}, {"name": "get-workspaces", "description": "List workspaces within an account", "parameter": {}}, {"name": "get-datasets", "description": "List datasets in a workspace", "parameter": {}}, {"name": "get-dataset-output", "description": "Retrieve actual data from a dataset", "parameter": {}}, {"name": "get-dataset-targetfields", "description": "Retrieve field definitions for a dataset", "parameter": {}}, {"name": "get-queries", "description": "Retrieve existing AI queries", "parameter": {}}, {"name": "get-ai-context", "description": "Get workspace context and data structure", "parameter": {}}, {"name": "execute-ai-query", "description": "Execute AI-powered queries on datasets", "parameter": {}}, {"name": "create-dataset", "description": "Create a new dataset with defined schema", "parameter": {}}, {"name": "upload-dataset-rows", "description": "Upload data rows to existing datasets", "parameter": {}}], "domains": [{"name": "Data Analysis", "description": "数据分析，包括数据收集、查询、追踪和分析"}, {"name": "Workspace Management", "description": "Workspace operations and management, including workspace creation, SQL execution, and job scheduling"}]}
{"name": "Xero", "description": "Xero财务软件操作,包括:账户/联系人/发票/信用票据/报价单/税务信息/付款记录查询与创建,工资单员工管理,财务报告生成(利润损失/试算平衡/应收应付账龄),以及工资单时间表审批与修改", "tools": [{"name": "list-accounts", "description": "Retrieve a list of accounts", "parameter": {}}, {"name": "list-contacts", "description": "Retrieve a list of contacts from Xero", "parameter": {}}, {"name": "list-credit-notes", "description": "Retrieve a list of credit notes", "parameter": {}}, {"name": "list-invoices", "description": "Retrieve a list of invoices", "parameter": {}}, {"name": "list-items", "description": "Retrieve a list of items", "parameter": {}}, {"name": "list-organisation-details", "description": "Retrieve details about an organisation", "parameter": {}}, {"name": "list-profit-and-loss", "description": "Retrieve a profit and loss report", "parameter": {}}, {"name": "list-quotes", "description": "Retrieve a list of quotes", "parameter": {}}, {"name": "list-tax-rates", "description": "Retrieve a list of tax rates", "parameter": {}}, {"name": "list-payments", "description": "Retrieve a list of payments", "parameter": {}}, {"name": "list-trial-balance", "description": "Retrieve a trial balance report", "parameter": {}}, {"name": "list-payroll-employees", "description": "Retrieve a list of Payroll Employees", "parameter": {}}, {"name": "list-payroll-employee-leave", "description": "Retrieve a Payroll Employee's leave records", "parameter": {}}, {"name": "list-payroll-employee-leave-balances", "description": "Retrieve a Payroll Employee's leave balances", "parameter": {}}, {"name": "list-payroll-employee-leave-types", "description": "Retrieve a list of Payroll leave types", "parameter": {}}, {"name": "list-payroll-leave-periods", "description": "Retrieve a list of a Payroll Employee's leave periods", "parameter": {}}, {"name": "list-aged-receivables-by-contact", "description": "Retrieves aged receivables for a contact", "parameter": {}}, {"name": "list-aged-payables-by-contact", "description": "Retrieves aged payables for a contact", "parameter": {}}, {"name": "list-contact-groups", "description": "Retrieve a list of contact groups", "parameter": {}}, {"name": "create-contact", "description": "Create a new contact", "parameter": {}}, {"name": "create-credit-note", "description": "Create a new credit note", "parameter": {}}, {"name": "create-invoice", "description": "Create a new invoice", "parameter": {}}, {"name": "create-payment", "description": "Create a new payment", "parameter": {}}, {"name": "create-quote", "description": "Create a new quote", "parameter": {}}, {"name": "update-contact", "description": "Update an existing contact", "parameter": {}}, {"name": "update-invoice", "description": "Update an existing draft invoice", "parameter": {}}, {"name": "update-quote", "description": "Update an existing draft quote", "parameter": {}}, {"name": "update-credit-note", "description": "Update an existing draft credit note", "parameter": {}}, {"name": "update-payroll-timesheet-line", "description": "Update a line on an existing Payroll Timesheet", "parameter": {}}, {"name": "approve-payroll-timesheet", "description": "Approve a Payroll Timesheet", "parameter": {}}, {"name": "revert-payroll-timesheet", "description": "Revert an approved Payroll Timesheet", "parameter": {}}, {"name": "add-payroll-timesheet-line", "description": "Add new line on an existing Payroll Timesheet", "parameter": {}}, {"name": "delete-payroll-timesheet", "description": "Delete an existing Payroll Timesheet", "parameter": {}}, {"name": "get-payroll-timesheet", "description": "Retrieve an existing Payroll Timesheet", "parameter": {}}], "domains": [{"name": "Financial Service", "description": "金融服务,包括支付处理、理财管理、云成本分析及财务报表生成"}]}
{"name": "Airbnb", "description": "1. Search for Airbnb listings 2. Get detailed information about a specific Airbnb listing", "tools": [{"name": "airbnb_search", "description": "Search for Airbnb listings", "parameter": {"location": "(string) The location to search for listings", "placeId": "(Optional, string) The place ID", "checkin": "(Optional, string, YYYY-MM-DD) Check-in date", "checkout": "(Optional, string, YYYY-MM-DD) Check-out date", "adults": "(Optional, number) Number of adults", "children": "(Optional, number) Number of children", "infants": "(Optional, number) Number of infants", "pets": "(Optional, number) Number of pets", "minPrice": "(Optional, number) Minimum price", "maxPrice": "(Optional, number) Maximum price", "cursor": "(Optional, string) Cursor for pagination", "ignoreRobotsText": "(Optional, boolean) Ignore robots.txt rules"}}, {"name": "airbnb_listing_details", "description": "Get detailed information about a specific Airbnb listing", "parameter": {"id": "(string) The ID of the listing", "checkin": "(Optional, string, YYYY-MM-DD) Check-in date", "checkout": "(Optional, string, YYYY-MM-DD) Check-out date", "adults": "(Optional, number) Number of adults", "children": "(Optional, number) Number of children", "infants": "(Optional, number) Number of infants", "pets": "(Optional, number) Number of pets", "ignoreRobotsText": "(Optional, boolean) Ignore robots.txt rules"}}], "domains": [{"name": "Location & Environmental Service", "description": "位置与环境服务，包括地理信息查询、导航、路线规划、酒店、机票、天气数据获取等"}]}
{"name": "AI Agent Marketplace Index", "description": "General search of AI Agents for information, websites, content, and metric statistics of web traffic", "tools": [{"name": "search_ai_agent", "description": "General search of AI Agents for information, websites, content, and metric statistics of web traffic, etc.", "parameter": {"q": "(str) Query string for searching AI agents", "limit": "(Optional, int) Maximum number of results to return (default is 100)", "timeout": "(Optional, int) Timeout for the search request in seconds (default is 5)"}}], "domains": [{"name": "Web Search", "description": "网页信息检索,通过关键词查询公开网页内容,支持多类型信息主动获取"}]}
{"name": "Airflow", "description": "Apache Airflow DAG and task management, including DAG operations (list, create, update, delete), task operations (list, update, clear), variable and connection management, dataset operations, and server health monitoring", "tools": [{"name": "List DAGs", "description": "Lists all DAGs.", "parameter": {}}, {"name": "Get DAG Details", "description": "Gets details of a specific DAG.", "parameter": {"dag_id": "(string) The ID of the DAG."}}, {"name": "Pause DAG", "description": "Pauses a specific DAG.", "parameter": {"dag_id": "(string) The ID of the DAG."}}, {"name": "Unpause DAG", "description": "Unpauses a specific DAG.", "parameter": {"dag_id": "(string) The ID of the DAG."}}, {"name": "Update DAG", "description": "Updates a specific DAG.", "parameter": {"dag_id": "(string) The ID of the DAG."}}, {"name": "Delete DAG", "description": "Deletes a specific DAG.", "parameter": {"dag_id": "(string) The ID of the DAG."}}, {"name": "Get DAG Source", "description": "Gets the source code of a specific DAG.", "parameter": {"file_token": "(string) The token of the DAG source file."}}, {"name": "Patch Multiple DAGs", "description": "Patches multiple DAGs.", "parameter": {}}, {"name": "Reparse DAG File", "description": "Reparses a specific DAG file.", "parameter": {"file_token": "(string) The token of the DAG source file."}}, {"name": "List DAG Runs", "description": "Lists all runs of a specific DAG.", "parameter": {"dag_id": "(string) The ID of the DAG."}}, {"name": "Create DAG Run", "description": "Creates a new run for a specific DAG.", "parameter": {"dag_id": "(string) The ID of the DAG."}}, {"name": "Get DAG Run Details", "description": "Gets details of a specific DAG run.", "parameter": {"dag_id": "(string) The ID of the DAG.", "dag_run_id": "(string) The ID of the DAG run."}}, {"name": "Update DAG Run", "description": "Updates a specific DAG run.", "parameter": {"dag_id": "(string) The ID of the DAG.", "dag_run_id": "(string) The ID of the DAG run."}}, {"name": "Delete DAG Run", "description": "Deletes a specific DAG run.", "parameter": {"dag_id": "(string) The ID of the DAG.", "dag_run_id": "(string) The ID of the DAG run."}}, {"name": "Get DAG Runs Batch", "description": "Gets a batch of DAG runs.", "parameter": {}}, {"name": "Clear DAG Run", "description": "Clears a specific DAG run.", "parameter": {"dag_id": "(string) The ID of the DAG.", "dag_run_id": "(string) The ID of the DAG run."}}, {"name": "Set DAG Run Note", "description": "Sets a note for a specific DAG run.", "parameter": {"dag_id": "(string) The ID of the DAG.", "dag_run_id": "(string) The ID of the DAG run."}}, {"name": "Get Upstream Dataset Events", "description": "Gets upstream dataset events for a specific DAG run.", "parameter": {"dag_id": "(string) The ID of the DAG.", "dag_run_id": "(string) The ID of the DAG run."}}, {"name": "List DAG Tasks", "description": "Lists all tasks of a specific DAG.", "parameter": {"dag_id": "(string) The ID of the DAG."}}, {"name": "Get Task Details", "description": "Gets details of a specific task.", "parameter": {"dag_id": "(string) The ID of the DAG.", "task_id": "(string) The ID of the task."}}, {"name": "Get Task Instance", "description": "Gets a specific task instance.", "parameter": {"dag_id": "(string) The ID of the DAG.", "dag_run_id": "(string) The ID of the DAG run.", "task_id": "(string) The ID of the task."}}, {"name": "List Task Instances", "description": "Lists all task instances of a specific DAG run.", "parameter": {"dag_id": "(string) The ID of the DAG.", "dag_run_id": "(string) The ID of the DAG run."}}, {"name": "Update Task Instance", "description": "Updates a specific task instance.", "parameter": {"dag_id": "(string) The ID of the DAG.", "dag_run_id": "(string) The ID of the DAG run.", "task_id": "(string) The ID of the task."}}, {"name": "Clear Task Instances", "description": "Clears task instances.", "parameter": {"dag_id": "(string) The ID of the DAG."}}, {"name": "Set Task Instances State", "description": "Sets the state of task instances.", "parameter": {"dag_id": "(string) The ID of the DAG."}}, {"name": "List Variables", "description": "Lists all variables.", "parameter": {}}, {"name": "Create Variable", "description": "Creates a new variable.", "parameter": {}}, {"name": "Get Variable", "description": "Gets a specific variable.", "parameter": {"variable_key": "(string) The key of the variable."}}, {"name": "Update Variable", "description": "Updates a specific variable.", "parameter": {"variable_key": "(string) The key of the variable."}}, {"name": "Delete Variable", "description": "Deletes a specific variable.", "parameter": {"variable_key": "(string) The key of the variable."}}, {"name": "List Connections", "description": "Lists all connections.", "parameter": {}}, {"name": "Create Connection", "description": "Creates a new connection.", "parameter": {}}, {"name": "Get Connection", "description": "Gets a specific connection.", "parameter": {"connection_id": "(string) The ID of the connection."}}, {"name": "Update Connection", "description": "Updates a specific connection.", "parameter": {"connection_id": "(string) The ID of the connection."}}, {"name": "Delete Connection", "description": "Deletes a specific connection.", "parameter": {"connection_id": "(string) The ID of the connection."}}, {"name": "Test Connection", "description": "Tests a specific connection.", "parameter": {}}, {"name": "List Pools", "description": "Lists all pools.", "parameter": {}}, {"name": "Create Pool", "description": "Creates a new pool.", "parameter": {}}, {"name": "Get Pool", "description": "Gets a specific pool.", "parameter": {"pool_name": "(string) The name of the pool."}}, {"name": "Update Pool", "description": "Updates a specific pool.", "parameter": {"pool_name": "(string) The name of the pool."}}, {"name": "Delete Pool", "description": "Deletes a specific pool.", "parameter": {"pool_name": "(string) The name of the pool."}}, {"name": "List XComs", "description": "Lists all XCom entries for a specific task instance.", "parameter": {"dag_id": "(string) The ID of the DAG.", "dag_run_id": "(string) The ID of the DAG run.", "task_id": "(string) The ID of the task."}}, {"name": "Get XCom Entry", "description": "Gets a specific XCom entry.", "parameter": {"dag_id": "(string) The ID of the DAG.", "dag_run_id": "(string) The ID of the DAG run.", "task_id": "(string) The ID of the task.", "xcom_key": "(string) The key of the XCom entry."}}, {"name": "List Datasets", "description": "Lists all datasets.", "parameter": {}}, {"name": "Get Dataset", "description": "Gets a specific dataset.", "parameter": {"uri": "(string) The URI of the dataset."}}, {"name": "Get Dataset Events", "description": "Gets events for a specific dataset.", "parameter": {}}, {"name": "Create Dataset Event", "description": "Creates a new dataset event.", "parameter": {}}, {"name": "Get DAG Dataset Queued Event", "description": "Gets a queued dataset event for a specific DAG.", "parameter": {"dag_id": "(string) The ID of the DAG.", "uri": "(string) The URI of the dataset."}}, {"name": "Get DAG Dataset Queued Events", "description": "Gets queued dataset events for a specific DAG.", "parameter": {"dag_id": "(string) The ID of the DAG."}}, {"name": "Delete DAG Dataset Queued Event", "description": "Deletes a queued dataset event for a specific DAG.", "parameter": {"dag_id": "(string) The ID of the DAG.", "uri": "(string) The URI of the dataset."}}, {"name": "Delete DAG Dataset Queued Events", "description": "Deletes queued dataset events for a specific DAG.", "parameter": {"dag_id": "(string) The ID of the DAG."}}, {"name": "Get Dataset Queued Events", "description": "Gets queued dataset events for a specific dataset.", "parameter": {"uri": "(string) The URI of the dataset."}}, {"name": "Delete Dataset Queued Events", "description": "Deletes queued dataset events for a specific dataset.", "parameter": {"uri": "(string) The URI of the dataset."}}, {"name": "Get Health", "description": "Gets the health status of the server.", "parameter": {}}, {"name": "Get DAG Stats", "description": "Gets statistics for all DAGs.", "parameter": {}}, {"name": "Get Config", "description": "Gets the configuration of the server.", "parameter": {}}, {"name": "Get Plugins", "description": "Gets a list of plugins.", "parameter": {}}, {"name": "List Providers", "description": "Lists all providers.", "parameter": {}}, {"name": "List Event Logs", "description": "Lists all event logs.", "parameter": {}}, {"name": "Get Event Log", "description": "Gets a specific event log.", "parameter": {"event_log_id": "(string) The ID of the event log."}}, {"name": "Get Import Errors", "description": "Lists all import errors.", "parameter": {}}, {"name": "Get Import Error Details", "description": "Gets details of a specific import error.", "parameter": {"import_error_id": "(string) The ID of the import error."}}, {"name": "Get Health Status", "description": "Gets the health status of the server.", "parameter": {}}, {"name": "Get Version", "description": "Gets the version of the server.", "parameter": {}}], "domains": [{"name": "DevOps Pipeline Management", "description": "DevOps流水线管理，包括持续集成(CI)构建(如Jenkins/GitLab CI)、工作流定义及持续部署(CD)自动化，支持跨平台应用交付(如Kubernetes集群部署、云平台发布)等"}, {"name": "Application Monitoring & Management", "description": "Application performance monitoring and management, including error tracking, deployment management, performance metrics analysis, and team collaboration"}]}
{"name": "Airtable", "description": "Airtable operations, including: listing/searching records, managing bases/tables/fields, and performing CRUD operations on records", "tools": [{"name": "list_records", "description": "Lists records from a specified Airtable table", "parameter": {"baseId": "(string, required) The ID of the Airtable base", "tableId": "(string, required) The ID of the table to query", "maxRecords": "(number, optional) Maximum number of records to return. Defaults to 100.", "filterByFormula": "(string, optional) Airtable formula to filter records"}}, {"name": "search_records", "description": "Search for records containing specific text", "parameter": {"baseId": "(string, required) The ID of the Airtable base", "tableId": "(string, required) The ID of the table to query", "searchTerm": "(string, required) Text to search for in records", "fieldIds": "(array, optional) Specific field IDs to search in. If not provided, searches all text-based fields.", "maxRecords": "(number, optional) Maximum number of records to return. Defaults to 100."}}, {"name": "list_bases", "description": "Lists all accessible Airtable bases", "parameter": {}}, {"name": "list_tables", "description": "Lists all tables in a specific base", "parameter": {"baseId": "(string, required) The ID of the Airtable base", "detailLevel": "(string, optional) The amount of detail to get about the tables (tableIdentifiersOnly, identifiersOnly, or full)"}}, {"name": "describe_table", "description": "Gets detailed information about a specific table", "parameter": {"baseId": "(string, required) The ID of the Airtable base", "tableId": "(string, required) The ID of the table to describe", "detailLevel": "(string, optional) The amount of detail to get about the table (tableIdentifiersOnly, identifiersOnly, or full)"}}, {"name": "get_record", "description": "Gets a specific record by ID", "parameter": {"baseId": "(string, required) The ID of the Airtable base", "tableId": "(string, required) The ID of the table", "recordId": "(string, required) The ID of the record to retrieve"}}, {"name": "create_record", "description": "Creates a new record in a table", "parameter": {"baseId": "(string, required) The ID of the Airtable base", "tableId": "(string, required) The ID of the table", "fields": "(object, required) The fields and values for the new record"}}, {"name": "update_records", "description": "Updates one or more records in a table", "parameter": {"baseId": "(string, required) The ID of the Airtable base", "tableId": "(string, required) The ID of the table", "records": "(array, required) Array of objects containing record ID and fields to update"}}, {"name": "delete_records", "description": "Deletes one or more records from a table", "parameter": {"baseId": "(string, required) The ID of the Airtable base", "tableId": "(string, required) The ID of the table", "recordIds": "(array, required) Array of record IDs to delete"}}, {"name": "create_table", "description": "Creates a new table in a base", "parameter": {"baseId": "(string, required) The ID of the Airtable base", "name": "(string, required) Name of the new table", "description": "(string, optional) Description of the table", "fields": "(array, required) Array of field definitions (name, type, description, options)"}}, {"name": "update_table", "description": "Updates a table's name or description", "parameter": {"baseId": "(string, required) The ID of the Airtable base", "tableId": "(string, required) The ID of the table", "name": "(string, optional) New name for the table", "description": "(string, optional) New description for the table"}}, {"name": "create_field", "description": "Creates a new field in a table", "parameter": {"baseId": "(string, required) The ID of the Airtable base", "tableId": "(string, required) The ID of the table", "name": "(string, required) Name of the new field", "type": "(string, required) Type of the field", "description": "(string, optional) Description of the field", "options": "(object, optional) Field-specific options"}}, {"name": "update_field", "description": "Updates a field's name or description", "parameter": {"baseId": "(string, required) The ID of the Airtable base", "tableId": "(string, required) The ID of the table", "fieldId": "(string, required) The ID of the field", "name": "(string, optional) New name for the field", "description": "(string, optional) New description for the field"}}], "domains": [{"name": "DataBase Management", "description": "数据库管理，涵盖数据库创建、查询、优化、备份及数据结构设计"}]}
{"name": "Anki", "description": "1.标记卡片为已回答并评分 2.在默认Anki牌组中创建新卡片 3.获取待复习卡片 4.获取新卡片", "tools": [{"name": "update_cards", "description": "Marks cards with given card IDs as answered and gives them an ease score between 1 (Again) and 4 (Easy)", "parameter": {"answers": "(array) Array of objects with `cardId` (number) and `ease` (number) fields"}}, {"name": "add_card", "description": "Creates a new card in the Default Anki deck", "parameter": {"front": "(string) Front of card", "back": "(string) Back of card"}}, {"name": "get_due_cards", "description": "Returns n number of cards currently due for review", "parameter": {"num": "(number) Number of cards"}}, {"name": "get_new_cards", "description": "Returns n number of cards from new", "parameter": {"num": "(number) Number of cards"}}], "domains": [{"name": "Content Management", "description": "内容管理，包括博客文章的创建、更新、检索及媒体上传"}]}
{"name": "Any Chat Completions", "description": "Relay questions to a configured AI Chat Provider", "tools": [{"name": "chat", "description": "Relays a question to a configured AI Chat Provider.", "parameter": {}}], "domains": [{"name": "AI Model Lifecycle Management", "description": "人工智能模型训练与推理，涵盖深度学习与传统机器学习框架建模、模型优化与部署、实验跟踪、数据预处理及全流程生命周期管理"}]}
{"name": "Apache Gravitino(incubating)", "description": "1.获取目录、模式、表和标签的基本信息列表 2.通过完全限定名称获取表和列的详细信息 3.将标签关联到表或列 4.获取与标签关联的对象列表 5.获取角色和用户的基本信息列表 6.授予或撤销用户的角色", "tools": [{"name": "get_list_of_catalogs", "description": "Get a list of catalogs with basic information", "parameter": {}}, {"name": "get_list_of_schemas", "description": "Get a list of schemas with basic information", "parameter": {}}, {"name": "get_list_of_tables", "description": "Get a paginated list of tables with basic information", "parameter": {}}, {"name": "get_table_by_fqn", "description": "Get detailed table information by fully qualified name", "parameter": {}}, {"name": "get_table_columns_by_fqn", "description": "Get table columns information by fully qualified name", "parameter": {}}, {"name": "get_list_of_tags", "description": "Get a list of tags with basic information", "parameter": {}}, {"name": "associate_tag_to_table", "description": "Associate a tag to a table", "parameter": {}}, {"name": "associate_tag_to_column", "description": "Associate a tag to a column", "parameter": {}}, {"name": "list_objects_by_tag", "description": "Get a list of objects associated with a tag", "parameter": {}}, {"name": "get_list_of_roles", "description": "Get a list of roles with basic information", "parameter": {}}, {"name": "get_list_of_users", "description": "Get a list of users with basic information", "parameter": {}}, {"name": "grant_role_to_user", "description": "Grant a role to a user", "parameter": {}}, {"name": "revoke_role_from_user", "description": "Revoke a role from a user", "parameter": {}}], "domains": [{"name": "DataBase Management", "description": "数据库管理，涵盖数据库创建、查询、优化、备份及数据结构设计"}, {"name": "Server Management", "description": "Server operations and user management, including server lifecycle control and user administration"}]}
{"name": "Apple Calendar", "description": "1.基于自然语言创建日历事件 2.提供用户日程信息并查找会议可用时间 3.基于自然语言更新现有日历事件 4.管理并提供可用日历信息", "tools": [{"name": "Event Creation", "description": "Creates calendar events based on natural language input.", "parameter": {"calendar": "(Optional, string) The calendar to add the event to.", "location": "(Optional, string) The location of the event.", "notes": "(Optional, string) Additional notes for the event.", "reminder": "(Optional, string) Reminder settings for the event.", "recurring": "(Optional, string) Recurrence pattern for the event."}}, {"name": "Smart Schedule Management & Availability", "description": "Provides information about the user's schedule and finds available time slots for meetings.", "parameter": {}}, {"name": "Intelligent Event Updates", "description": "Updates existing calendar events based on natural language input.", "parameter": {"time": "(Optional, string) New time for the event.", "date": "(Optional, string) New date for the event.", "calendar": "(Optional, string) New calendar for the event.", "location": "(Optional, string) New location for the event.", "notes": "(Optional, string) Additional notes to add to the event.", "reminder": "(Optional, string) New reminder settings for the event.", "recurring": "(Optional, string) New recurrence pattern for the event."}}, {"name": "Calendar Management", "description": "Manages and provides information about available calendars.", "parameter": {}}], "domains": [{"name": "Time & Task Management", "description": "时间与任务管理,涵盖日历日程、待办事项、项目进度跟踪及会议调度"}]}
{"name": "Aranet4", "description": "1.配置Aranet4设备 2.扫描附近的蓝牙Aranet4设备 3.获取当前配置和数据库统计信息 4.设置配置文件中的值 5.从配置的Aranet4设备获取新数据并保存到本地数据库 6.从本地数据库获取最近的测量数据 7.从本地数据库获取特定时间范围内的数据", "tools": [{"name": "init_aranet4_config", "description": "Assisted configuration of the Aranet4 device.", "parameter": {}}, {"name": "scan_devices", "description": "Scan for nearby Bluetooth Aranet4 devices.", "parameter": {}}, {"name": "get_configuration_and_db_stats", "description": "Get the current configuration and database statistics.", "parameter": {}}, {"name": "set_configuration", "description": "Set values in the configuration file.", "parameter": {}}, {"name": "fetch_new_data", "description": "Fetch new data from the configured nearby Aranet4 device and save it to the local database.", "parameter": {}}, {"name": "get_recent_data", "description": "Get recent data from the local database. Can specify the number of measurements.", "parameter": {"measurements": "(Optional, int) Number of recent measurements to retrieve."}}, {"name": "get_data_by_timerange", "description": "Get data within a specific time range from the local database. Can specify the number of measurements.", "parameter": {"start_time": "(str) Start time of the range.", "end_time": "(str) End time of the range.", "measurements": "(Optional, int) Number of measurements to retrieve."}}], "domains": [{"name": "Healthcare Service", "description": "医疗健康服务,包括在线问诊、电子病历、健康数据记录及医疗资源预约"}, {"name": "Data Analysis", "description": "数据分析，包括数据收集、查询、追踪和分析"}]}
{"name": "ArangoDB", "description": "ArangoDB数据库操作,包括：执行AQL查询、文档插入、更新、删除、备份集合、列出所有集合、创建新集合", "tools": [{"name": "arango_query", "description": "Execute AQL queries", "parameter": {"query": "(string) AQL query string", "bindVariables": "(Optional, object) Bind variables for parameterized queries"}}, {"name": "arango_insert", "description": "Insert documents into collections", "parameter": {"collection": "(string) Collection name", "document": "(object) Document object"}}, {"name": "arango_update", "description": "Update existing documents", "parameter": {"collection": "(string) Collection name", "key": "(string) Document key", "update": "(object) Update object"}}, {"name": "arango_remove", "description": "Remove documents from collections", "parameter": {"collection": "(string) Collection name", "key": "(string) Document key"}}, {"name": "arango_backup", "description": "Backup all collections to JSON files", "parameter": {"outputDir": "(string) Output directory path", "collection": "(Optional, string) Collection name to backup", "docLimit": "(Optional, number) Maximum number of documents to backup per collection"}}, {"name": "arango_list_collections", "description": "List all collections in the database", "parameter": {}}, {"name": "arango_create_collection", "description": "Create a new collection in the database", "parameter": {"name": "(string) Collection name", "type": "(Optional, string) Collection type (document or edge collection)", "waitForSync": "(Optional, boolean) Configure waitForSync behavior for write operations"}}], "domains": [{"name": "DataBase Management", "description": "数据库管理，涵盖数据库创建、查询、优化、备份及数据结构设计"}]}
{"name": "Atlassian", "description": "Jira and Confluence operations, including: issue management (get, search, create, update, transition, comment), page management (search, get, create, update)", "tools": [{"name": "jira_get_issue", "description": "Get details of a specific issue", "parameter": {}}, {"name": "jira_search", "description": "Search issues using JQL", "parameter": {}}, {"name": "jira_create_issue", "description": "Create a new issue", "parameter": {}}, {"name": "jira_update_issue", "description": "Update an existing issue", "parameter": {}}, {"name": "jira_transition_issue", "description": "Transition an issue to a new status", "parameter": {}}, {"name": "jira_add_comment", "description": "Add a comment to an issue", "parameter": {}}, {"name": "confluence_search", "description": "Search Confluence content using CQL", "parameter": {}}, {"name": "confluence_get_page", "description": "Get content of a specific page", "parameter": {}}, {"name": "confluence_create_page", "description": "Create a new page", "parameter": {}}, {"name": "confluence_update_page", "description": "Update an existing page", "parameter": {}}], "domains": [{"name": "Office Productivity", "description": "办公生产力工具,涵盖文档编辑、邮件通信、日程管理及团队协作"}]}
{"name": "AWS Athena", "description": "AWS Athena operations including: executing SQL queries, checking query status, retrieving query results, listing saved queries, and running saved queries by ID", "tools": [{"name": "run_query", "description": "Execute a SQL query using AWS Athena", "parameter": {"database": "(string) The Athena database to query", "query": "(string) SQL query to execute", "maxRows": "(Optional, integer) Maximum number of rows to return (default: 1000, max: 10000)"}}, {"name": "get_status", "description": "Check the status of a query execution", "parameter": {"queryExecutionId": "(string) The ID returned from run_query"}}, {"name": "get_result", "description": "Retrieve results for a completed query", "parameter": {"queryExecutionId": "(string) The ID returned from run_query", "maxRows": "(Optional, integer) Maximum number of rows to return (default: 1000, max: 10000)"}}, {"name": "list_saved_queries", "description": "List all saved (named) queries in Athena", "parameter": {}}, {"name": "run_saved_query", "description": "Run a previously saved query by its ID", "parameter": {"namedQueryId": "(string) ID of the saved query", "databaseOverride": "(Optional, string) Optional override of the saved query's default database", "maxRows": "(Optional, integer) Maximum number of rows to return (default: 1000)", "timeoutMs": "(Optional, integer) Timeout in milliseconds (default: 60000)"}}], "domains": [{"name": "Cloud Service Integration", "description": "云服务集成，调用与管理云平台 API(如 AWS/Azure)，支持云资源对接与 AI 服务整合"}, {"name": "DataBase Management", "description": "数据库管理，涵盖数据库创建、查询、优化、备份及数据结构设计"}]}
{"name": "AWS Cost Explorer", "description": "1. Retrieve EC2 spending data for the previous day 2. Deliver comprehensive cost analysis by region, service, and instance type 3. Provide daily and hourly breakdown of AWS Bedrock model usage by region and users", "tools": [{"name": "get_ec2_spend_last_day", "description": "Retrieves EC2 spending data for the previous day", "parameter": {}}, {"name": "get_detailed_breakdown_by_day", "description": "Delivers a comprehensive analysis of costs by region, service, and instance type", "parameter": {"days": "(int) Number of days to analyze (default: 7)"}}, {"name": "get_bedrock_daily_usage_stats", "description": "Delivers a per-day breakdown of model usage by region and users", "parameter": {"days": "(int) Number of days to analyze (default: 7)", "region": "(str) AWS region (default: 'us-east-1')", "log_group_name": "(str) Name of the CloudWatch Log Group (default: 'BedrockModelInvocationLogGroup')"}}, {"name": "get_bedrock_hourly_usage_stats", "description": "Delivers a per-day per-hour breakdown of model usage by region and users", "parameter": {"days": "(int) Number of days to analyze (default: 7)", "region": "(str) AWS region (default: 'us-east-1')", "log_group_name": "(str) Name of the CloudWatch Log Group (default: 'BedrockModelInvocationLogGroup')"}}], "domains": [{"name": "Cloud Service Integration", "description": "云服务集成，调用与管理云平台 API(如 AWS/Azure)，支持云资源对接与 AI 服务整合"}, {"name": "Financial Service", "description": "金融服务,包括支付处理、理财管理、云成本分析及财务报表生成"}]}
{"name": "AWS Resources Operations", "description": "Execute a boto3 code snippet to query or modify AWS resources", "tools": [{"name": "aws_resources_query_or_modify", "description": "Execute a boto3 code snippet to query or modify AWS resources", "parameter": {"code_snippet": "(string) Python code using boto3 to query AWS resources. The code must set a `result` variable with the query output."}}], "domains": [{"name": "Cloud Service Integration", "description": "云服务集成，调用与管理云平台 API(如 AWS/Azure)，支持云资源对接与 AI 服务整合"}]}
{"name": "AWS S3", "description": "Amazon S3 bucket and object management, including listing buckets, listing objects, and retrieving objects", "tools": [{"name": "ListBuckets", "description": "Returns a list of all buckets owned by the authenticated sender of the request", "parameter": {}}, {"name": "ListObjectsV2", "description": "Returns some or all (up to 1,000) of the objects in a bucket with each request", "parameter": {}}, {"name": "GetObject", "description": "Retrieves an object from Amazon S3. In the GetObject request, specify the full key name for the object. General purpose buckets - Both the virtual-hosted-style requests and the path-style requests are supported", "parameter": {}}], "domains": [{"name": "Cloud Service Integration", "description": "云服务集成，调用与管理云平台 API(如 AWS/Azure)，支持云资源对接与 AI 服务整合"}]}
{"name": "Azure ADX", "description": "Azure Data Explorer operations, including: KQL query execution, table listing, schema retrieval, and table data sampling", "tools": [{"name": "execute_query", "description": "Execute a KQL query against Azure Data Explorer", "parameter": {"query": "(string) The KQL query to execute"}}, {"name": "list_tables", "description": "List all tables in the configured database", "parameter": {}}, {"name": "get_table_schema", "description": "Get the schema for a specific table", "parameter": {"table_name": "(string) The name of the table to get the schema for"}}, {"name": "sample_table_data", "description": "Get sample data from a table with optional sample size", "parameter": {"table_name": "(string) The name of the table to sample data from", "sample_size": "(Optional, int) The number of rows to sample (default is 10)"}}], "domains": [{"name": "DataBase Management", "description": "数据库管理，涵盖数据库创建、查询、优化、备份及数据结构设计"}, {"name": "Cloud Service Integration", "description": "云服务集成，调用与管理云平台 API(如 AWS/Azure)，支持云资源对接与 AI 服务整合"}]}
{"name": "Azure DevOps", "description": "Azure DevOps work item management, including: querying work items, creating/updating work items, adding/viewing comments, accessing project/team information, and managing team configurations", "tools": [{"name": "Query Work Items", "description": "Search for work items using WIQL queries", "parameter": {}}, {"name": "Get Work Item Details", "description": "View complete work item information", "parameter": {}}, {"name": "Create Work Items", "description": "Add new tasks, bugs, user stories, and other work item types", "parameter": {}}, {"name": "Update Work Items", "description": "Modify existing work items' fields and properties", "parameter": {}}, {"name": "Add Comments", "description": "Post comments on work items", "parameter": {}}, {"name": "View Comments", "description": "Retrieve the comment history for a work item", "parameter": {}}, {"name": "Get Projects", "description": "View all accessible projects in the organization", "parameter": {}}, {"name": "Get Teams", "description": "List all teams within the organization", "parameter": {}}, {"name": "Team Members", "description": "View team membership information", "parameter": {}}, {"name": "Team Area Paths", "description": "Retrieve area paths assigned to teams", "parameter": {}}, {"name": "Team Iterations", "description": "Access team iteration/sprint configurations", "parameter": {}}], "domains": [{"name": "Cloud Service Integration", "description": "云服务集成，调用与管理云平台 API(如 AWS/Azure)，支持云资源对接与 AI 服务整合"}]}
{"name": "Baidu AI Search", "description": "1.调用大模型并支持自定义prompt模板和模型参数 2.结合百度搜索和ERNIE模型提供更准确的搜索结果 3.访问和管理百度智能云千帆AppBuilder网页端发布的AI原生应用", "tools": [{"name": "Playground", "description": "用于调用大模型，支持自定义prompt模板和模型参数。", "parameter": {"prompt_template": "(string) 自定义的prompt模板", "model": "(string) 调用的模型名称", "stream": "(Optional, boolean) 是否以流式方式返回结果", "temperature": "(Optional, float) 模型的温度参数，控制输出的随机性"}}, {"name": "RagWithBaiduSearchPro", "description": "结合百度搜索的搜索引擎技术和ERNIE模型的语义理解能力，提供更准确的搜索结果。", "parameter": {"message": "(Message) 输入的消息", "instruction": "(Message) 指令消息"}}, {"name": "AppBuilderClient", "description": "用于访问和管理在百度智能云千帆AppBuilder网页端发布的AI原生应用，支持创建会话和运行应用。", "parameter": {"app_id": "(string) 应用ID", "conversation_id": "(string) 会话ID"}}], "domains": [{"name": "AI Model Lifecycle Management", "description": "人工智能模型训练与推理，涵盖深度学习与传统机器学习框架建模、模型优化与部署、实验跟踪、数据预处理及全流程生命周期管理"}, {"name": "Web Search", "description": "网页信息检索,通过关键词查询公开网页内容,支持多类型信息主动获取"}, {"name": "Cloud Service Integration", "description": "云服务集成，调用与管理云平台 API(如 AWS/Azure)，支持云资源对接与 AI 服务整合"}]}
{"name": "Base Free USDC Transfer", "description": "1.分析购买物品价值并通过Base链安排USDC转账 2.创建Coinbase MPC钱包地址", "tools": [{"name": "tranfer-usdc", "description": "Analyzes the value of the purchased items and schedules a USDC transfer to the recipient via the Base chain. Does not wait for the transaction to complete.", "parameter": {"usdc_amount": "(number) USDC amount, greater than 0.", "recipient": "(string) Recipient's on-chain address or ENS domain (e.g., example.eth)."}}, {"name": "create_coinbase_mpc_wallet", "description": "Creates a new Coinbase MPC wallet address. If a wallet already exists, returns the existing wallet address.", "parameter": {}}], "domains": [{"name": "Blockchain Service", "description": "区块链服务，包括智能合约状态读取、代理合约地址检索、事件日志获取及事件主题签名生成"}, {"name": "Financial Service", "description": "金融服务,包括支付处理、理财管理、云成本分析及财务报表生成"}]}
{"name": "Basic Memory", "description": "1. Create or update notes in the knowledge base 2. Read notes by title or permalink 3. Navigate the knowledge graph via memory:// URLs 4. Search across the knowledge base 5. Find recently updated information 6. Generate knowledge visualizations", "tools": [{"name": "write_note", "description": "Create or update notes in the knowledge base.", "parameter": {"title": "(string) The title of the note", "content": "(string) The content of the note", "folder": "(string) The folder where the note should be saved", "tags": "(array) Tags to associate with the note"}}, {"name": "read_note", "description": "Read notes by title or permalink.", "parameter": {"identifier": "(string) The title or permalink of the note", "page": "(integer) The page number for paginated results", "page_size": "(integer) The number of items per page"}}, {"name": "build_context", "description": "Navigate the knowledge graph via memory:// URLs.", "parameter": {"url": "(string) The memory:// URL to start from", "depth": "(integer) The depth to traverse the graph", "timeframe": "(string) The timeframe to consider (e.g., 'past week')"}}, {"name": "search_notes", "description": "Search across the knowledge base.", "parameter": {"query": "(string) The search query", "page": "(integer) The page number for paginated results", "page_size": "(integer) The number of items per page"}}, {"name": "recent_activity", "description": "Find recently updated information.", "parameter": {"type": "(string) The type of activity to filter by (e.g., 'note', 'update')", "depth": "(integer) The depth to traverse the graph", "timeframe": "(string) The timeframe to consider (e.g., 'past week')"}}, {"name": "canvas", "description": "Generate knowledge visualizations.", "parameter": {"nodes": "(array) The nodes to include in the visualization", "edges": "(array) The edges to connect the nodes", "title": "(string) The title of the visualization", "folder": "(string) The folder where the visualization should be saved"}}], "domains": [{"name": "Content Management", "description": "内容管理，包括博客文章的创建、更新、检索及媒体上传"}, {"name": "Knowledge Visualization", "description": "知识可视化，包括知识图谱导航、知识可视化生成及知识库搜索"}]}
{"name": "Calculator", "description": "Calculates/evaluates the given expression", "tools": [{"name": "calculate", "description": "Calculates/evaluates the given expression.", "parameter": {"expression": "(string, required) Expression to be calculated"}}], "domains": [{"name": "Scientific Computing", "description": "科学计算,支持数值模拟、数学建模、数据分析及学科算法实现"}]}
{"name": "CFBD API", "description": "1. Retrieve game data 2. Get team records 3. Access team game statistics 4. Query play-by-play data 5. Analyze drive information 6. View play statistics 7. Check team rankings 8. See win probabilities 9. Access detailed game statistics and analytics", "tools": [{"name": "get-games", "description": "Retrieve game data", "parameter": {}}, {"name": "get-records", "description": "Get team records", "parameter": {}}, {"name": "get-games-teams", "description": "Access team game statistics", "parameter": {}}, {"name": "get-plays", "description": "Query play-by-play data", "parameter": {}}, {"name": "get-drives", "description": "Analyze drive information", "parameter": {}}, {"name": "get-play-stats", "description": "View play statistics", "parameter": {}}, {"name": "get-rankings", "description": "Check team rankings", "parameter": {}}, {"name": "get-pregame-win-probability", "description": "See win probabilities", "parameter": {}}, {"name": "get-advanced-box-score", "description": "Access detailed game statistics and analytics", "parameter": {}}], "domains": [{"name": "Sports Data Analysis", "description": "Sports data retrieval and analysis, including game statistics, team records, play-by-play data, and advanced analytics"}]}
{"name": "ChatSum", "description": "Query and summarize chat messages based on given parameters", "tools": [{"name": "query_chat_messages", "description": "Query chat messages with given parameters and summarize chat messages based on the query prompt.", "parameter": {}}], "domains": [{"name": "Data Analysis", "description": "数据分析，包括数据收集、查询、追踪和分析"}]}
{"name": "Chess.com", "description": "Chess.com player and club data retrieval, including: player profiles, stats, online status, titled players, ongoing games, monthly games, game archives, PGN downloads, club profiles, and club members", "tools": [{"name": "get_player_profile", "description": "Get a player's profile from Chess.com", "parameter": {}}, {"name": "get_player_stats", "description": "Get a player's stats from Chess.com", "parameter": {}}, {"name": "is_player_online", "description": "Check if a player is currently online on Chess.com", "parameter": {}}, {"name": "get_titled_players", "description": "Get a list of titled players from Chess.com", "parameter": {}}, {"name": "get_player_current_games", "description": "Get a player's ongoing games on Chess.com", "parameter": {}}, {"name": "get_player_games_by_month", "description": "Get a player's games for a specific month from Chess.com", "parameter": {}}, {"name": "get_player_game_archives", "description": "Get a list of available monthly game archives for a player on Chess.com", "parameter": {}}, {"name": "download_player_games_pgn", "description": "Download PGN files for all games in a specific month from Chess.com", "parameter": {}}, {"name": "get_club_profile", "description": "Get information about a club on Chess.com", "parameter": {}}, {"name": "get_club_members", "description": "Get members of a club on Chess.com", "parameter": {}}], "domains": [{"name": "Sports Data Analysis", "description": "Sports data retrieval and analysis, including game statistics, team records, play-by-play data, and advanced analytics"}]}
{"name": "ClickUp", "description": "1.任务管理，包括创建、更新、删除、移动和复制任务 2.列表和文件夹管理，包括创建、更新和删除 3.标签管理，包括创建、更新、删除和关联任务 4.时间跟踪，包括开始、停止和记录时间条目 5.文档管理，包括创建、获取和更新文档页面", "tools": [{"name": "get_workspace_hierarchy", "description": "Get workspace structure", "parameter": {}}, {"name": "create_task", "description": "Create a task", "parameter": {"name": "(string) The name of the task", "listId": "(Optional, string) The ID of the list where the task will be created", "listName": "(Optional, string) The name of the list where the task will be created"}}, {"name": "create_bulk_tasks", "description": "Create multiple tasks", "parameter": {"tasks[]": "(array) An array of task objects to create"}}, {"name": "update_task", "description": "Modify task", "parameter": {"taskId": "(string) The ID of the task to update", "taskName": "(Optional, string) The name of the task to update"}}, {"name": "update_bulk_tasks", "description": "Update multiple tasks", "parameter": {"tasks[]": "(array) An array of task objects to update, each containing IDs or names"}}, {"name": "get_tasks", "description": "Get tasks from list", "parameter": {"listId": "(string) The ID of the list to get tasks from", "listName": "(Optional, string) The name of the list to get tasks from"}}, {"name": "get_task", "description": "Get single task details", "parameter": {"taskId": "(string) The ID of the task to get", "taskName": "(Optional, string) The name of the task to get (with smart disambiguation)"}}, {"name": "get_workspace_tasks", "description": "Get tasks with filtering", "parameter": {"tags": "(Optional, array) Tags to filter tasks by", "list_ids": "(Optional, array) List IDs to filter tasks by", "space_ids": "(Optional, array) Space IDs to filter tasks by"}}, {"name": "get_task_comments", "description": "Get comments on a task", "parameter": {"taskId": "(string) The ID of the task to get comments from", "taskName": "(Optional, string) The name of the task to get comments from"}}, {"name": "create_task_comment", "description": "Add a comment to a task", "parameter": {"commentText": "(string) The text of the comment", "taskId": "(string) The ID of the task to add the comment to", "taskName": "(Optional, string) The name of the task to add the comment to", "listName": "(Optional, string) The name of the list containing the task"}}, {"name": "attach_task_file", "description": "Attach file to a task", "parameter": {"taskId": "(string) The ID of the task to attach the file to", "taskName": "(Optional, string) The name of the task to attach the file to", "file_data": "(Optional, string) The file data to attach", "file_url": "(Optional, string) The URL of the file to attach"}}, {"name": "delete_task", "description": "Remove task", "parameter": {"taskId": "(string) The ID of the task to delete", "taskName": "(Optional, string) The name of the task to delete"}}, {"name": "delete_bulk_tasks", "description": "Remove multiple tasks", "parameter": {"tasks[]": "(array) An array of task objects to delete, each containing IDs or names"}}, {"name": "move_task", "description": "Move task", "parameter": {"taskId": "(string) The ID of the task to move", "taskName": "(Optional, string) The name of the task to move", "listId": "(string) The ID of the target list", "listName": "(Optional, string) The name of the target list"}}, {"name": "move_bulk_tasks", "description": "Move multiple tasks", "parameter": {"tasks[]": "(array) An array of task objects to move, each containing IDs or names", "targetList": "(string) The ID or name of the target list"}}, {"name": "duplicate_task", "description": "Copy task", "parameter": {"taskId": "(string) The ID of the task to duplicate", "taskName": "(Optional, string) The name of the task to duplicate", "listId": "(string) The ID of the target list", "listName": "(Optional, string) The name of the target list"}}, {"name": "create_list", "description": "Create list in space", "parameter": {"name": "(string) The name of the list to create", "spaceId": "(string) The ID of the space where the list will be created", "spaceName": "(Optional, string) The name of the space where the list will be created"}}, {"name": "create_folder", "description": "Create folder", "parameter": {"name": "(string) The name of the folder to create", "spaceId": "(string) The ID of the space where the folder will be created", "spaceName": "(Optional, string) The name of the space where the folder will be created"}}, {"name": "create_list_in_folder", "description": "Create list in folder", "parameter": {"name": "(string) The name of the list to create", "folderId": "(string) The ID of the folder where the list will be created", "folderName": "(Optional, string) The name of the folder where the list will be created"}}, {"name": "get_folder", "description": "Get folder details", "parameter": {"folderId": "(string) The ID of the folder to get", "folderName": "(Optional, string) The name of the folder to get"}}, {"name": "update_folder", "description": "Update folder properties", "parameter": {"folderId": "(string) The ID of the folder to update", "folderName": "(Optional, string) The name of the folder to update"}}, {"name": "delete_folder", "description": "Delete folder", "parameter": {"folderId": "(string) The ID of the folder to delete", "folderName": "(Optional, string) The name of the folder to delete"}}, {"name": "get_list", "description": "Get list details", "parameter": {"listId": "(string) The ID of the list to get", "listName": "(Optional, string) The name of the list to get"}}, {"name": "update_list", "description": "Update list properties", "parameter": {"listId": "(string) The ID of the list to update", "listName": "(Optional, string) The name of the list to update"}}, {"name": "delete_list", "description": "Delete list", "parameter": {"listId": "(string) The ID of the list to delete", "listName": "(Optional, string) The name of the list to delete"}}, {"name": "get_space_tags", "description": "Get space tags", "parameter": {"spaceId": "(string) The ID of the space to get tags from", "spaceName": "(Optional, string) The name of the space to get tags from"}}, {"name": "create_space_tag", "description": "Create tag", "parameter": {"tagName": "(string) The name of the tag to create", "spaceId": "(string) The ID of the space where the tag will be created", "spaceName": "(Optional, string) The name of the space where the tag will be created"}}, {"name": "update_space_tag", "description": "Update tag", "parameter": {"tagName": "(string) The name of the tag to update", "spaceId": "(string) The ID of the space where the tag exists", "spaceName": "(Optional, string) The name of the space where the tag exists"}}, {"name": "delete_space_tag", "description": "Delete tag", "parameter": {"tagName": "(string) The name of the tag to delete", "spaceId": "(string) The ID of the space where the tag exists", "spaceName": "(Optional, string) The name of the space where the tag exists"}}, {"name": "add_tag_to_task", "description": "Add tag to task", "parameter": {"tagName": "(string) The name of the tag to add", "taskId": "(string) The ID of the task to add the tag to", "taskName": "(Optional, string) The name of the task to add the tag to", "listName": "(Optional, string) The name of the list containing the task"}}, {"name": "remove_tag_from_task", "description": "Remove tag from task", "parameter": {"tagName": "(string) The name of the tag to remove", "taskId": "(string) The ID of the task to remove the tag from", "taskName": "(Optional, string) The name of the task to remove the tag from", "listName": "(Optional, string) The name of the list containing the task"}}, {"name": "get_task_time_entries", "description": "Get time entries for a task", "parameter": {"taskId": "(string) The ID of the task to get time entries for", "taskName": "(Optional, string) The name of the task to get time entries for"}}, {"name": "start_time_tracking", "description": "Start time tracking on a task", "parameter": {"taskId": "(string) The ID of the task to start time tracking on", "taskName": "(Optional, string) The name of the task to start time tracking on"}}, {"name": "stop_time_tracking", "description": "Stop current time tracking", "parameter": {}}, {"name": "add_time_entry", "description": "Add manual time entry to a task", "parameter": {"taskId": "(string) The ID of the task to add the time entry to", "taskName": "(Optional, string) The name of the task to add the time entry to", "start": "(string) The start time of the time entry", "duration": "(string) The duration of the time entry"}}, {"name": "delete_time_entry", "description": "Delete a time entry", "parameter": {"timeEntryId": "(string) The ID of the time entry to delete"}}, {"name": "get_current_time_entry", "description": "Get currently running timer", "parameter": {}}, {"name": "create_document", "description": "Create a document", "parameter": {"workspaceId": "(string) The ID of the workspace where the document will be created", "name": "(string) The name of the document", "parentId": "(Optional, string) The ID of the parent item", "parentType": "(Optional, string) The type of the parent item", "visibility": "(Optional, string) The visibility of the document", "create_pages": "(Optional, boolean) Whether to create initial pages"}}, {"name": "get_document", "description": "Get a document", "parameter": {"workspaceId": "(string) The ID of the workspace", "documentId": "(Optional, string) The ID of the document", "creator": "(Optional, string) The creator of the document", "deleted": "(Optional, boolean) Whether to include deleted documents", "archived": "(Optional, boolean) Whether to include archived documents", "parent_id": "(Optional, string) The ID of the parent item", "parent_type": "(Optional, string) The type of the parent item", "limit": "(Optional, integer) The maximum number of documents to return", "next_cursor": "(Optional, string) The cursor for pagination"}}, {"name": "list_documents", "description": "List documents", "parameter": {"workspaceId": "(string) The ID of the workspace", "documentId": "(Optional, string) The ID of the document", "creator": "(Optional, string) The creator of the document", "deleted": "(Optional, boolean) Whether to include deleted documents", "archived": "(Optional, boolean) Whether to include archived documents", "parent_id": "(Optional, string) The ID of the parent item", "parent_type": "(Optional, string) The type of the parent item", "limit": "(Optional, integer) The maximum number of documents to return", "next_cursor": "(Optional, string) The cursor for pagination"}}, {"name": "list_document_pages", "description": "List document pages", "parameter": {"documentId": "(string) The ID of the document", "documentName": "(Optional, string) The name of the document"}}, {"name": "get_document_pages", "description": "Get document pages", "parameter": {"documentId": "(string) The ID of the document", "documentName": "(Optional, string) The name of the document", "pageIds": "(Optional, array) The IDs of the pages to get"}}, {"name": "create_document_pages", "description": "Create a document page", "parameter": {"workspaceId": "(string) The ID of the workspace", "documentId": "(string) The ID of the document", "parent_page_id": "(Optional, string) The ID of the parent page", "name": "(string) The name of the page", "sub_title": "(Optional, string) The subtitle of the page", "content": "(string) The content of the page", "content_format": "(Optional, string) The format of the content"}}, {"name": "update_document_page", "description": "Update a document page", "parameter": {"workspaceId": "(string) The ID of the workspace", "documentId": "(string) The ID of the document", "name": "(string) The name of the page", "sub_title": "(Optional, string) The subtitle of the page", "content": "(string) The content of the page", "content_edit_mode": "(Optional, string) The edit mode of the content", "content_format": "(Optional, string) The format of the content"}}], "domains": [{"name": "Time & Task Management", "description": "时间与任务管理,涵盖日历日程、待办事项、项目进度跟踪及会议调度"}, {"name": "Content Management", "description": "内容管理，包括博客文章的创建、更新、检索及媒体上传"}]}
{"name": "Cloudinary", "description": "Upload images and videos to Cloudinary", "tools": [{"name": "upload", "description": "Upload images and videos to Cloudinary.", "parameter": {"file": "(required) Path to file, URL, or base64 data URI to upload", "resource_type": "(optional) Type of resource ('image', 'video', or 'raw')", "public_id": "(optional) Custom public ID for the uploaded asset", "overwrite": "(optional) Whether to overwrite existing assets with the same public ID", "tags": "(optional) Array of tags to assign to the uploaded asset"}}], "domains": [{"name": "File System", "description": "文件系统管理,包括本地 / 云端文件的存储、读取、修改、权限控制及分类检索"}]}
{"name": "code-executor", "description": "1.在配置环境中执行Python代码 2.安装Python包 3.检查已安装的包 4.动态更改环境配置 5.获取当前环境配置", "tools": [{"name": "execute_code", "description": "Executes Python code in the configured environment.", "parameter": {"code": "(string) The Python code to execute", "filename": "(string) The filename to store the generated code"}}, {"name": "install_dependencies", "description": "Installs Python packages in the environment.", "parameter": {"packages": "(array) List of package names to install"}}, {"name": "check_installed_packages", "description": "Checks if packages are already installed in the environment.", "parameter": {"packages": "(array) List of package names to check"}}, {"name": "configure_environment", "description": "Dynamically changes the environment configuration.", "parameter": {"type": "(string) The type of environment (e.g., 'conda', 'venv')", "conda_name": "(string) The name of the Conda environment to use (if applicable)"}}, {"name": "get_environment_config", "description": "Gets the current environment configuration.", "parameter": {}}], "domains": [{"name": "Virtual Environment & Container Manager", "description": "虚拟与容器环境管理，支持开发环境如（如Python虚拟环境、Node.js运行时）、容器化环境构建（Docker）"}]}
{"name": "code-sandbox-mcp", "description": "1. Initialize a compute environment with Docker 2. Copy directories/files to sandboxed filesystem 3. Execute commands in sandboxed environment 4. Stop and remove container sandbox", "tools": [{"name": "sandbox_initialize", "description": "Initialize a new compute environment for code execution. Creates a container based on the specified Docker image.", "parameter": {"image": "(string, optional) Docker image to use as the base environment. Default: 'python:3.12-slim-bookworm'"}}, {"name": "copy_project", "description": "Copy a directory to the sandboxed filesystem.", "parameter": {"container_id": "(string, required) ID of the container returned from the initialize call", "local_src_dir": "(string, required) Path to a directory in the local file system", "dest_dir": "(string, optional) Path to save the src directory in the sandbox environment"}}, {"name": "write_file", "description": "Write a file to the sandboxed filesystem.", "parameter": {"container_id": "(string, required) ID of the container returned from the initialize call", "file_name": "(string, required) Name of the file to create", "file_contents": "(string, required) Contents to write to the file", "dest_dir": "(string, optional) Directory to create the file in (Default: ${WORKDIR})"}}, {"name": "sandbox_exec", "description": "Execute commands in the sandboxed environment.", "parameter": {"container_id": "(string, required) ID of the container returned from the initialize call", "commands": "(array, required) List of command(s) to run in the sandboxed environment"}}, {"name": "copy_file", "description": "Copy a single file to the sandboxed filesystem.", "parameter": {"container_id": "(string, required) ID of the container returned from the initialize call", "local_src_file": "(string, required) Path to a file in the local file system", "dest_path": "(string, optional) Path to save the file in the sandbox environment"}}, {"name": "sandbox_stop", "description": "Stop and remove a running container sandbox. Gracefully stops the specified container with a 10-second timeout and removes it along with its volumes.", "parameter": {"container_id": "(string, required) ID of the container to stop and remove"}}], "domains": [{"name": "Virtual Environment & Container Manager", "description": "虚拟与容器环境管理，支持开发环境如（如Python虚拟环境、Node.js运行时）、容器化环境构建（Docker）"}]}
{"name": "consul-mcp", "description": "Consul服务管理,包括:服务注册与注销、健康检查管理、KV存储操作、会话管理、事件处理、查询执行、集群节点信息获取", "tools": [{"name": "List running services", "description": "Lists all currently running services.", "parameter": {}}, {"name": "Register and deregister services", "description": "Registers new services and deregisters existing ones.", "parameter": {}}, {"name": "Get service information", "description": "Retrieves detailed information about a specific service.", "parameter": {}}, {"name": "List catalog services", "description": "Lists all services in the Consul catalog.", "parameter": {}}, {"name": "Get catalog service information", "description": "Retrieves detailed information about a specific service in the Consul catalog.", "parameter": {}}, {"name": "Register health checks", "description": "Registers new health checks for services.", "parameter": {}}, {"name": "Deregister health checks", "description": "Deregisters existing health checks for services.", "parameter": {}}, {"name": "Get health checks for services", "description": "Retrieves health check information for specific services.", "parameter": {}}, {"name": "Get values from KV store", "description": "Retrieves values from the Consul key-value store.", "parameter": {}}, {"name": "List keys in KV store", "description": "Lists all keys in the Consul key-value store.", "parameter": {}}, {"name": "Put values in KV store", "description": "Adds or updates values in the Consul key-value store.", "parameter": {}}, {"name": "Delete keys from KV store", "description": "Deletes keys from the Consul key-value store.", "parameter": {}}, {"name": "List sessions", "description": "Lists all active sessions.", "parameter": {}}, {"name": "Destroy sessions", "description": "Destroys specified sessions.", "parameter": {}}, {"name": "Fire events", "description": "Fires user-defined events.", "parameter": {}}, {"name": "List events", "description": "Lists all fired events.", "parameter": {}}, {"name": "Create prepared queries", "description": "Creates prepared queries for efficient service discovery.", "parameter": {}}, {"name": "Execute prepared queries", "description": "Executes previously created prepared queries.", "parameter": {}}, {"name": "Get current leader", "description": "Retrieves the current leader node in the Consul cluster.", "parameter": {}}, {"name": "Get current peers", "description": "Retrieves the current peer nodes in the Consul cluster.", "parameter": {}}, {"name": "Get agent members", "description": "Retrieves information about the members of the local Consul agent.", "parameter": {}}, {"name": "Get agent self information", "description": "Retrieves information about the local Consul agent itself.", "parameter": {}}, {"name": "Get system health service information", "description": "Retrieves system health service information.", "parameter": {}}], "domains": [{"name": "Server Management", "description": "Server operations and user management, including server lifecycle control and user administration"}]}
{"name": "cognee-mcp", "description": "1.添加文本到cognee系统 2.从添加的数据生成知识图谱 3.用搜索词查询知识图谱", "tools": [{"name": "add", "description": "Adds text to the cognee system.", "parameter": {"text": "(string) The text to be added."}}, {"name": "cognify", "description": "Generates a knowledge graph from the added data.", "parameter": {}}, {"name": "search", "description": "Queries the knowledge graph with a given search term.", "parameter": {"query": "(string) The search term to query the knowledge graph."}}], "domains": [{"name": "Knowledge Visualization", "description": "知识可视化，包括知识图谱导航、知识可视化生成及知识库搜索"}]}
{"name": "coin_api_mcp", "description": "1.Fetch paginated list of all active cryptocurrencies with market data 2.Retrieve detailed information about a specific cryptocurrency 3.Fetch latest market quotes for cryptocurrencies", "tools": [{"name": "listing-coins", "description": "Fetches a paginated list of all active cryptocurrencies with the latest market data.", "parameter": {"start": "(integer, optional) Offset the start (1-based index) of the paginated list of items to return.", "limit": "(integer, optional) Number of results to return (default: 10, max: 5000).", "price_min": "(number, optional) Minimum USD price to filter results.", "price_max": "(number, optional) Maximum USD price to filter results.", "market_cap_min": "(number, optional) Minimum market cap to filter results.", "market_cap_max": "(number, optional) Maximum market cap to filter results.", "convert": "(string, optional) Calculate market quotes in multiple currencies.", "sort": "(string, optional) Field to sort the list of cryptocurrencies by.", "sort_dir": "(string, optional) Direction to order cryptocurrencies (asc or desc)."}}, {"name": "get-coin-info", "description": "Retrieves detailed information about a specific cryptocurrency.", "parameter": {"id": "(string, optional) One or more comma-separated CoinMarketCap cryptocurrency IDs.", "slug": "(string, optional) A comma-separated list of cryptocurrency slugs.", "symbol": "(string, optional) One or more comma-separated cryptocurrency symbols."}}, {"name": "get-coin-quotes", "description": "Fetches the latest market quotes for one or more cryptocurrencies.", "parameter": {"id": "(string, optional) One or more comma-separated cryptocurrency CoinMarketCap IDs.", "slug": "(string, optional) A comma-separated list of cryptocurrency slugs.", "symbol": "(string, optional) One or more comma-separated cryptocurrency symbols."}}], "domains": [{"name": "Financial Service", "description": "金融服务,包括支付处理、理财管理、云成本分析及财务报表生成"}]}
{"name": "CoinMarketCap", "description": "Cryptocurrency data services including: cryptocurrency mapping, metadata retrieval, market quotes, categories, exchange information, DEX data, global metrics, price conversion, API key management, Fear & Greed Index, airdrops, historical data, trending analysis, OHLCV data, price performance statistics, market pairs, news and content, community trends, and blockchain statistics", "tools": [{"name": "cryptoCurrencyMap", "description": "Get mapping of all cryptocurrencies", "parameter": {}}, {"name": "getCryptoMetadata", "description": "Get metadata for one or more cryptocurrencies", "parameter": {}}, {"name": "allCryptocurrencyListings", "description": "Get latest market quote for 1-5000 cryptocurrencies", "parameter": {}}, {"name": "cryptoQuotesLatest", "description": "Get latest market quote for 1 or more cryptocurrencies", "parameter": {}}, {"name": "cryptoCategories", "description": "Get list of all cryptocurrency categories", "parameter": {}}, {"name": "cryptoCategory", "description": "Get metadata about a cryptocurrency category", "parameter": {}}, {"name": "exchangeMap", "description": "Get mapping of all exchanges", "parameter": {}}, {"name": "exchangeInfo", "description": "Get metadata for one or more exchanges", "parameter": {}}, {"name": "exchangeAssets", "description": "Get list of all assets available on an exchange", "parameter": {}}, {"name": "dexInfo", "description": "Get metadata for one or more decentralised exchanges", "parameter": {}}, {"name": "dexListingsLatest", "description": "Get latest market data for all DEXes", "parameter": {}}, {"name": "dexNetworksList", "description": "Get list of all networks with unique IDs", "parameter": {}}, {"name": "dexSpotPairsLatest", "description": "Get latest market data for all active DEX spot pairs", "parameter": {}}, {"name": "dexPairsQuotesLatest", "description": "Get latest market quotes for spot pairs", "parameter": {}}, {"name": "dexPairsOhlcvLatest", "description": "Get latest OHLCV data for spot pairs", "parameter": {}}, {"name": "dexPairsOhlcvHistorical", "description": "Get historical OHLCV data for spot pairs", "parameter": {}}, {"name": "dexPairsTradeLatest", "description": "Get latest trades for spot pairs", "parameter": {}}, {"name": "globalMetricsLatest", "description": "Get latest global cryptocurrency metrics", "parameter": {}}, {"name": "cmc100IndexLatest", "description": "Get latest CoinMarketCap 100 Index value and constituents", "parameter": {}}, {"name": "cmc100IndexHistorical", "description": "Get historical CoinMarketCap 100 Index values", "parameter": {}}, {"name": "priceConversion", "description": "Convert an amount of one cryptocurrency or fiat currency into another", "parameter": {}}, {"name": "getPostmanCollection", "description": "Get Postman collection for the API", "parameter": {}}, {"name": "fiatMap", "description": "Get mapping of all fiat currencies", "parameter": {}}, {"name": "keyInfo", "description": "Get API key usage and status", "parameter": {}}, {"name": "fearAndGreedLatest", "description": "Get latest Fear & Greed Index", "parameter": {}}, {"name": "fearAndGreedHistorical", "description": "Get historical Fear & Greed Index values", "parameter": {}}, {"name": "cryptoAirdrops", "description": "Get list of all cryptocurrency airdrops", "parameter": {}}, {"name": "cryptoAirdrop", "description": "Get metadata about a specific airdrop", "parameter": {}}, {"name": "historicalCryptocurrencyListings", "description": "Get historical market quotes for any cryptocurrency", "parameter": {}}, {"name": "cryptoQuotesHistorical", "description": "Get historical market quotes for any cryptocurrency", "parameter": {}}, {"name": "cryptoQuotesHistoricalV3", "description": "Get historical market quotes with advanced time-based intervals", "parameter": {}}, {"name": "exchangeQuotesHistorical", "description": "Get historical quotes for any exchange", "parameter": {}}, {"name": "globalMetricsHistorical", "description": "Get historical global cryptocurrency metrics", "parameter": {}}, {"name": "newCryptocurrencyListings", "description": "Get list of most recently added cryptocurrencies", "parameter": {}}, {"name": "cryptoTrendingGainersLosers", "description": "Get biggest gainers and losers in a given time period", "parameter": {}}, {"name": "cryptoTrendingLatest", "description": "Get top cryptocurrencies by search volume", "parameter": {}}, {"name": "cryptoTrendingMostVisited", "description": "Get most visited cryptocurrencies", "parameter": {}}, {"name": "cryptoOhlcvLatest", "description": "Get latest OHLCV market data for any cryptocurrency", "parameter": {}}, {"name": "cryptoOhlcvHistorical", "description": "Get historical OHLCV market data for any cryptocurrency", "parameter": {}}, {"name": "cryptoPricePerformanceStatsLatest", "description": "Get price performance statistics for any cryptocurrency", "parameter": {}}, {"name": "cryptoMarketPairsLatest", "description": "Get latest market pairs for any cryptocurrency", "parameter": {}}, {"name": "exchangeListingsLatest", "description": "Get latest market data for all exchanges", "parameter": {}}, {"name": "exchangeMarketPairsLatest", "description": "Get latest market pairs for any exchange", "parameter": {}}, {"name": "exchangeQuotesLatest", "description": "Get latest market quotes for one or more exchanges", "parameter": {}}, {"name": "contentLatest", "description": "Get latest cryptocurrency news and content", "parameter": {}}, {"name": "contentPostsTop", "description": "Get top cryptocurrency posts", "parameter": {}}, {"name": "contentPostsLatest", "description": "Get latest cryptocurrency posts", "parameter": {}}, {"name": "contentPostsComments", "description": "Get comments for a specific post", "parameter": {}}, {"name": "communityTrendingTopic", "description": "Get trending topics in the cryptocurrency community", "parameter": {}}, {"name": "communityTrendingToken", "description": "Get trending tokens in the cryptocurrency community", "parameter": {}}, {"name": "blockchainStatisticsLatest", "description": "Get latest statistics for one or more blockchains", "parameter": {}}], "domains": [{"name": "Blockchain Service", "description": "区块链服务，包括智能合约状态读取、代理合约地址检索、事件日志获取及事件主题签名生成"}, {"name": "Financial Service", "description": "金融服务,包括支付处理、理财管理、云成本分析及财务报表生成"}, {"name": "Data Analysis", "description": "数据分析，包括数据收集、查询、追踪和分析"}]}
{"name": "Computer-Use - Remote MacOS Use", "description": "Remote macOS machine interaction, including: desktop screenshot capture, keyboard input simulation, mouse movement/click/double-click/scroll/drag-and-drop operations, and application launching", "tools": [{"name": "remote_macos_get_screen", "description": "Connect to a remote macOS machine and get a screenshot of the remote desktop.", "parameter": {}}, {"name": "remote_macos_send_keys", "description": "Send keyboard input to a remote macOS machine.", "parameter": {}}, {"name": "remote_macos_mouse_move", "description": "Move the mouse cursor to specified coordinates on a remote macOS machine, with automatic coordinate scaling.", "parameter": {}}, {"name": "remote_macos_mouse_click", "description": "Perform a mouse click at specified coordinates on a remote macOS machine, with automatic coordinate scaling.", "parameter": {}}, {"name": "remote_macos_mouse_double_click", "description": "Perform a mouse double-click at specified coordinates on a remote macOS machine, with automatic coordinate scaling.", "parameter": {}}, {"name": "remote_macos_mouse_scroll", "description": "Perform a mouse scroll at specified coordinates on a remote macOS machine, with automatic coordinate scaling.", "parameter": {}}, {"name": "remote_macos_open_application", "description": "Opens/activates an application and returns its PID for further interactions.", "parameter": {}}, {"name": "remote_macos_mouse_drag_n_drop", "description": "Perform a mouse drag operation from start point and drop to end point on a remote macOS machine, with automatic coordinate scaling.", "parameter": {}}], "domains": [{"name": "Remote Desktop Control", "description": "远程桌面控制，包括屏幕捕获、输入模拟（键盘/鼠标）、应用程序控制及自动化操作"}]}
{"name": "Contentful-mcp", "description": "Contentful CMS operations including: entry search, creation, retrieval, update, deletion, publishing, unpublishing, bulk operations; asset listing, upload, retrieval, update, deletion, publishing, unpublishing; space listing and details; environment listing, creation, deletion; content type listing, creation, update, deletion, publishing", "tools": [{"name": "search_entries", "description": "Search for entries using query parameters", "parameter": {}}, {"name": "create_entry", "description": "Create new entries", "parameter": {}}, {"name": "get_entry", "description": "Retrieve existing entries", "parameter": {}}, {"name": "update_entry", "description": "Update entry fields", "parameter": {}}, {"name": "delete_entry", "description": "Remove entries", "parameter": {}}, {"name": "publish_entry", "description": "Publish entries", "parameter": {}}, {"name": "unpublish_entry", "description": "Unpublish entries", "parameter": {}}, {"name": "bulk_publish", "description": "Publish multiple entries and assets in a single operation. Accepts an array of entities (entries and assets) and processes their publication as a batch.", "parameter": {}}, {"name": "bulk_unpublish", "description": "Unpublish multiple entries and assets in a single operation. Similar to bulk_publish but removes content from the delivery API.", "parameter": {}}, {"name": "bulk_validate", "description": "Validate multiple entries for content consistency, references, and required fields. Returns validation results without modifying content.", "parameter": {}}, {"name": "list_assets", "description": "List assets with pagination (3 items per page)", "parameter": {}}, {"name": "upload_asset", "description": "Upload new assets with metadata", "parameter": {}}, {"name": "get_asset", "description": "Retrieve asset details and information", "parameter": {}}, {"name": "update_asset", "description": "Update asset metadata and files", "parameter": {}}, {"name": "delete_asset", "description": "Remove assets from space", "parameter": {}}, {"name": "publish_asset", "description": "Publish assets to delivery API", "parameter": {}}, {"name": "unpublish_asset", "description": "Unpublish assets from delivery API", "parameter": {}}, {"name": "list_spaces", "description": "List available spaces", "parameter": {}}, {"name": "get_space", "description": "Get space details", "parameter": {}}, {"name": "list_environments", "description": "List environments in a space", "parameter": {}}, {"name": "create_environment", "description": "Create new environment", "parameter": {}}, {"name": "delete_environment", "description": "Remove environment", "parameter": {}}, {"name": "list_content_types", "description": "List available content types", "parameter": {}}, {"name": "get_content_type", "description": "Get content type details", "parameter": {}}, {"name": "create_content_type", "description": "Create new content type", "parameter": {}}, {"name": "update_content_type", "description": "Update content type", "parameter": {}}, {"name": "delete_content_type", "description": "Remove content type", "parameter": {}}, {"name": "publish_content_type", "description": "Publish a content type", "parameter": {}}], "domains": [{"name": "Content Management", "description": "内容管理，包括博客文章的创建、更新、检索及媒体上传"}]}
{"name": "crypto-feargreed-mcp", "description": "1. Retrieve the latest Fear & Greed Index value and classification 2. Fetch historical index values for specified days 3. Analyze trends with statistics like average value and trend direction", "tools": [{"name": "get_current_fng_tool", "description": "Retrieves the latest Fear & Greed Index value and classification.", "parameter": {}}, {"name": "get_historical_fng_tool", "description": "Fetches historical index values for a specified number of days.", "parameter": {"days": "(int) Number of days to fetch historical data for."}}, {"name": "analyze_fng_trend", "description": "Analyzes trends over time with statistics like average value and trend direction.", "parameter": {"days": "(int) Number of days to analyze the trend for."}}], "domains": [{"name": "Financial Service", "description": "金融服务,包括支付处理、理财管理、云成本分析及财务报表生成"}]}
{"name": "cryptopanic-mcp-server", "description": "Fetch cryptocurrency news, analysis, or videos from CryptoPanic", "tools": [{"name": "get_crypto_news", "description": "Fetches cryptocurrency news, analysis, or videos from CryptoPanic.", "parameter": {"kind": "(str) Content type (news, analysis, videos)", "num_pages": "(Optional, int) Number of pages to fetch (default: 1, max: 10)"}}], "domains": [{"name": "News & Content Services", "description": "新闻与内容服务,提供资讯聚合、热点推送、主题订阅及媒体品牌内容"}]}
{"name": "Databricks", "description": "1.在Databricks SQL仓库上执行SQL查询 2.列出所有Databricks作业 3.通过ID获取特定Databricks作业的状态 4.获取特定Databricks作业的详细信息", "tools": [{"name": "run_sql_query", "description": "Execute SQL queries on your Databricks SQL warehouse", "parameter": {"sql": "(str) The SQL query to execute"}}, {"name": "list_jobs", "description": "List all Databricks jobs in your workspace", "parameter": {}}, {"name": "get_job_status", "description": "Get the status of a specific Databricks job by ID", "parameter": {"job_id": "(int) The ID of the Databricks job"}}, {"name": "get_job_details", "description": "Get detailed information about a specific Databricks job", "parameter": {"job_id": "(int) The ID of the Databricks job"}}], "domains": [{"name": "Workspace Management", "description": "Workspace operations and management, including workspace creation, SQL execution, and job scheduling"}]}
{"name": "Datadog", "description": "1. Fetch monitors with optional filtering 2. Get details of a specific monitor by ID 3. List all dashboards 4. Get a specific dashboard by ID 5. List available metrics 6. Get metadata for a specific metric 7. Fetch events within a time range 8. List incidents with optional filtering 9. Search logs with advanced query filtering 10. Perform analytics and aggregations on log data", "tools": [{"name": "get-monitors", "description": "Fetch monitors with optional filtering", "parameter": {"groupStates": "(Optional, array) States to filter monitors by", "limit": "(Optional, number) Maximum number of monitors to return"}}, {"name": "get-monitor", "description": "Get details of a specific monitor by ID", "parameter": {"monitorId": "(string) ID of the monitor to fetch"}}, {"name": "get-dashboards", "description": "List all dashboards", "parameter": {}}, {"name": "get-dashboard", "description": "Get a specific dashboard by ID", "parameter": {"dashboardId": "(string) ID of the dashboard to fetch"}}, {"name": "get-metrics", "description": "List available metrics", "parameter": {}}, {"name": "get-metric-metadata", "description": "Get metadata for a specific metric", "parameter": {"metricName": "(string) Name of the metric to fetch metadata for"}}, {"name": "get-events", "description": "Fetch events within a time range", "parameter": {"start": "(number) Start time in milliseconds since epoch", "end": "(number) End time in milliseconds since epoch", "priority": "(Optional, string) Priority of events to fetch", "tags": "(Optional, array) Tags to filter events by"}}, {"name": "get-incidents", "description": "List incidents with optional filtering", "parameter": {"includeArchived": "(Optional, boolean) Include archived incidents", "query": "(Optional, string) Query to filter incidents by", "pageSize": "(Optional, number) Number of incidents to return per page"}}, {"name": "search-logs", "description": "Search logs with advanced query filtering", "parameter": {"filter": "(object) Filter object containing query, from, and to", "sort": "(Optional, string) Sorting order (e.g., -timestamp)", "limit": "(Optional, number) Maximum number of logs to return"}}, {"name": "aggregate-logs", "description": "Perform analytics and aggregations on log data", "parameter": {"filter": "(object) Filter object containing query, from, and to", "compute": "(array) Array of compute objects for aggregations", "groupBy": "(array) Array of groupBy objects for grouping results"}}], "domains": [{"name": "Application Monitoring & Management", "description": "Application performance monitoring and management, including error tracking, deployment management, performance metrics analysis, and team collaboration"}]}
{"name": "Data Exploration", "description": "1. Load CSV files into a DataFrame 2. Execute Python scripts", "tools": [{"name": "load-csv", "description": "Loads a CSV file into a DataFrame.", "parameter": {"csv_path": "(string, required) Path to the CSV file", "df_name": "(string, optional) Name for the DataFrame. Defaults to df_1, df_2, etc., if not provided"}}, {"name": "run-script", "description": "Executes a Python script.", "parameter": {"script": "(string, required) The script to execute"}}], "domains": [{"name": "Data Analysis", "description": "数据分析，包括数据收集、查询、追踪和分析"}, {"name": "Code Toolkit", "description": "代码工具集,版本控制(如git命令执行)、代码生成、代码执行、测试等"}]}
{"name": "DaVinci Resolve", "description": "DaVinci Resolve操作，包括：获取版本和当前页面信息、切换页面、项目管理（创建、打开、保存、列出）、时间线管理（创建、切换、添加标记）、媒体池操作（列出剪辑、导入媒体文件、创建媒体箱、添加剪辑到时间线）", "tools": [{"name": "get_da_vinci_resolve_version", "description": "Gets the version of DaVinci Resolve currently running.", "parameter": {}}, {"name": "get_current_page", "description": "Gets the current page (e.g., Edit, Color, Fusion) in DaVinci Resolve.", "parameter": {}}, {"name": "switch_page", "description": "Switches the current page in DaVinci Resolve.", "parameter": {"page": "(string) The page to switch to (e.g., 'Edit', 'Color', 'Fusion')."}}, {"name": "list_projects", "description": "Lists all available projects in DaVinci Resolve.", "parameter": {}}, {"name": "get_current_project_name", "description": "Gets the name of the current project in DaVinci Resolve.", "parameter": {}}, {"name": "open_project", "description": "Opens a project by name in DaVinci Resolve.", "parameter": {"project_name": "(string) The name of the project to open."}}, {"name": "create_new_project", "description": "Creates a new project in DaVinci Resolve.", "parameter": {"project_name": "(string) The name of the new project."}}, {"name": "save_current_project", "description": "Saves the current project in DaVinci Resolve.", "parameter": {}}, {"name": "list_timelines", "description": "Lists all timelines in the current project.", "parameter": {}}, {"name": "get_current_timeline_info", "description": "Gets information about the current timeline.", "parameter": {}}, {"name": "create_new_timeline", "description": "Creates a new timeline in the current project.", "parameter": {"timeline_name": "(string) The name of the new timeline."}}, {"name": "switch_to_timeline", "description": "Switches to a timeline by name.", "parameter": {"timeline_name": "(string) The name of the timeline to switch to."}}, {"name": "add_marker_to_timeline", "description": "Adds a marker to the current timeline.", "parameter": {}}, {"name": "list_media_pool_clips", "description": "Lists all clips in the media pool.", "parameter": {}}, {"name": "import_media_file", "description": "Imports a media file into the media pool.", "parameter": {"file_path": "(string) The path to the media file to import."}}, {"name": "create_media_bin", "description": "Creates a new media bin in the media pool.", "parameter": {"bin_name": "(string) The name of the new media bin."}}, {"name": "add_clip_to_timeline", "description": "Adds a clip to the current timeline.", "parameter": {"clip_name": "(string) The name of the clip to add."}}], "domains": [{"name": "Audio-Video Creation", "description": "音视频创作,包括录制、剪辑、特效添加、配音及格式转换"}]}
{"name": "Dataset Viewer", "description": "1.验证数据集是否存在并可访问 2.获取数据集详细信息 3.获取数据集分页内容 4.获取数据集分割的首行 5.获取数据集分割的统计信息 6.在数据集中搜索文本 7.使用类似SQL的条件过滤行 8.以Parquet格式下载整个数据集", "tools": [{"name": "validate", "description": "Check if a dataset exists and is accessible", "parameter": {"dataset": "string, Dataset identifier (e.g. 'stanfordnlp/imdb')", "auth_token": "(Optional, string) For private datasets"}}, {"name": "get_info", "description": "Get detailed information about a dataset", "parameter": {"dataset": "string, Dataset identifier", "auth_token": "(Optional, string) For private datasets"}}, {"name": "get_rows", "description": "Get paginated contents of a dataset", "parameter": {"dataset": "string, Dataset identifier", "config": "string, Configuration name", "split": "string, Split name", "page": "(Optional, integer) Page number (0-based)", "auth_token": "(Optional, string) For private datasets"}}, {"name": "get_first_rows", "description": "Get first rows from a dataset split", "parameter": {"dataset": "string, Dataset identifier", "config": "string, Configuration name", "split": "string, Split name", "auth_token": "(Optional, string) For private datasets"}}, {"name": "get_statistics", "description": "Get statistics about a dataset split", "parameter": {"dataset": "string, Dataset identifier", "config": "string, Configuration name", "split": "string, Split name", "auth_token": "(Optional, string) For private datasets"}}, {"name": "search_dataset", "description": "Search for text within a dataset", "parameter": {"dataset": "string, Dataset identifier", "config": "string, Configuration name", "split": "string, Split name", "query": "string, Text to search for", "auth_token": "(Optional, string) For private datasets"}}, {"name": "filter", "description": "Filter rows using SQL-like conditions", "parameter": {"dataset": "string, Dataset identifier", "config": "string, Configuration name", "split": "string, Split name", "where": "string, SQL WHERE clause (e.g. 'score > 0.5')", "orderby": "(Optional, string) SQL ORDER BY clause", "page": "(Optional, integer) Page number (0-based)", "auth_token": "(Optional, string) For private datasets"}}, {"name": "get_parquet", "description": "Download entire dataset in Parquet format", "parameter": {"dataset": "string, Dataset identifier", "auth_token": "(Optional, string) For private datasets"}}], "domains": [{"name": "Data Analysis", "description": "数据分析，包括数据收集、查询、追踪和分析"}]}
{"name": "DBHub", "description": "1.在连接的数据库上执行SQL查询 2.列出可用的数据库连接器 3.根据上下文生成SQL语句 4.解释数据库元素（如表、索引和过程）", "tools": [{"name": "execute_sql", "description": "Executes SQL queries on the connected database.", "parameter": {"dsn": "(string) The database connection string.", "sql": "(string) The SQL query to execute."}}, {"name": "list_connectors", "description": "Lists available connectors for database connections.", "parameter": {}}, {"name": "generate_sql", "description": "Generates SQL statements based on the provided context.", "parameter": {"context": "(string) The context for generating the SQL statement."}}, {"name": "explain_db", "description": "Explains database elements such as tables, indexes, and procedures.", "parameter": {"element_type": "(string) The type of database element to explain (e.g., 'table', 'index', 'procedure').", "element_name": "(string) The name of the database element to explain."}}], "domains": [{"name": "DataBase Management", "description": "数据库管理，涵盖数据库创建、查询、优化、备份及数据结构设计"}]}
{"name": "Deepseek_R1", "description": "Generate advanced text using the Deepseek R1 model with configurable parameters", "tools": [{"name": "deepseek_r1", "description": "Generates advanced text using the Deepseek R1 model with configurable parameters.", "parameter": {"prompt": "(string) The input prompt for text generation", "max_tokens": "(number) Maximum tokens to generate", "temperature": "(number) Controls randomness, default is 0.2"}}], "domains": [{"name": "AI Model Lifecycle Management", "description": "人工智能模型训练与推理，涵盖深度学习与传统机器学习框架建模、模型优化与部署、实验跟踪、数据预处理及全流程生命周期管理"}]}
{"name": "deepseek-thinker-mcp", "description": "Perform reasoning using the Deepseek model", "tools": [{"name": "get-deepseek-thinker", "description": "Perform reasoning using the Deepseek model", "parameter": {"originPrompt": "(string) User's original prompt"}}], "domains": [{"name": "AI Model Lifecycle Management", "description": "人工智能模型训练与推理，涵盖深度学习与传统机器学习框架建模、模型优化与部署、实验跟踪、数据预处理及全流程生命周期管理"}]}
{"name": "Descope", "description": "1. Retrieve audit log entries from Descope project 2. Retrieve user records from Descope project 3. Create new user in Descope project 4. Invite new user to Descope project", "tools": [{"name": "search-audits", "description": "Retrieves up to 10 audit log entries from your Descope project.", "parameter": {}}, {"name": "search-users", "description": "Retrieves up to 10 user records from your Descope project.", "parameter": {}}, {"name": "create-user", "description": "Creates a new user in your Descope project.", "parameter": {}}, {"name": "invite-user", "description": "Invites a new user to your Descope project.", "parameter": {}}], "domains": [{"name": "Server Management", "description": "Server operations and user management, including server lifecycle control and user administration"}]}
{"name": "DevDb", "description": "1. Copy MCP settings for IDE and AI-tool integration 2. Open database tables from external applications via URI", "tools": [{"name": "MCP Configuration", "description": "Allows copying of MCP settings to integrate with IDEs and AI-tools for database access.", "parameter": {}}, {"name": "URI Handler", "description": "Enables opening specific database tables directly from external applications or links.", "parameter": {"connectionId": "(string) The ID of the database connection", "database": "(string) The database name", "table": "(string) The table name to open", "workspace": "(Optional, string) The workspace path", "authority": "(Optional, string) The authority for the URI"}}], "domains": [{"name": "DataBase Management", "description": "数据库管理,涵盖数据库创建、查询、优化、备份及数据结构设计"}, {"name": "Tool Management", "description": "工具管理，包括工具信息的检索、搜索、添加和移除"}]}
{"name": "DevRev", "description": "1. Search for information using the DevRev search API 2. Get all information about a DevRev object using its ID", "tools": [{"name": "search", "description": "Search for information using the DevRev search API with the provided query and namespace.", "parameter": {}}, {"name": "get_object", "description": "Get all information about a DevRev object using its ID.", "parameter": {}}], "domains": [{"name": "API Development & Testing", "description": "API开发与测试，包括API规范验证、接口测试、文档生成及SDK生成"}]}
{"name": "Dicom", "description": "1.查询患者、研究、系列和实例数据 2.从DICOM实例中提取PDF文本 3.发送DICOM系列或研究到其他节点 4.管理DICOM节点连接和配置 5.获取元数据查询结果的详细级别", "tools": [{"name": "query_patients", "description": "Search for patients based on criteria like name, ID, or birth date.", "parameter": {}}, {"name": "query_studies", "description": "Find studies using patient ID, date, modality, description, accession number, or Study UID.", "parameter": {}}, {"name": "query_series", "description": "Locate series within a specific study using modality, series number/description, or Series UID.", "parameter": {}}, {"name": "query_instances", "description": "Find individual instances (images/objects) within a series using instance number or SOP Instance UID.", "parameter": {}}, {"name": "extract_pdf_text_from_dicom", "description": "Retrieve a specific DICOM instance containing an encapsulated PDF and extract its text content.", "parameter": {}}, {"name": "move_series", "description": "Send a specific DICOM series to another configured DICOM node using C-MOVE.", "parameter": {}}, {"name": "move_study", "description": "Send an entire DICOM study to another configured DICOM node using C-MOVE.", "parameter": {}}, {"name": "list_dicom_nodes", "description": "Show the currently active DICOM node and list all configured nodes.", "parameter": {}}, {"name": "switch_dicom_node", "description": "Change the active DICOM node for subsequent operations.", "parameter": {}}, {"name": "verify_connection", "description": "Test the DICOM network connection to the currently active node using C-ECHO.", "parameter": {}}, {"name": "get_attribute_presets", "description": "List the available levels of detail (minimal, standard, extended) for metadata query results.", "parameter": {}}], "domains": [{"name": "Healthcare Service", "description": "医疗健康服务,包括在线问诊、电子病历、健康数据记录及医疗资源预约"}, {"name": "Data Management", "description": "数据管理，包括数据查询、提取、传输和配置管理"}]}
{"name": "Discord", "description": "1.向指定Discord频道发送消息 2.从指定Discord频道读取最近消息", "tools": [{"name": "send-message", "description": "Sends a message to a specified Discord channel.", "parameter": {"server": "(Optional, string) Server name or ID (required if bot is in multiple servers)", "channel": "(string) Channel name (e.g., 'general') or ID", "message": "(string) Message content to send"}}, {"name": "read-messages", "description": "Reads recent messages from a specified Discord channel.", "parameter": {"server": "(Optional, string) Server name or ID (required if bot is in multiple servers)", "channel": "(string) Channel name (e.g., 'general') or ID", "limit": "(Optional, number) Number of messages to fetch (default: 50, max: 100)"}}], "domains": [{"name": "Social Media Management", "description": "社交媒体账号运营,涵盖内容发布、粉丝互动、多平台批量管理与舆情分析"}]}
{"name": "Discourse", "description": "Search posts on a Discourse forum", "tools": [{"name": "search_posts", "description": "Searches posts on a Discourse forum.", "parameter": {"query": "(string) The search query to use."}}], "domains": [{"name": "Content Management", "description": "内容管理，包括博客文章的创建、更新、检索及媒体上传"}]}
{"name": "Docker", "description": "Docker容器管理,包括:容器列表、创建、运行、重启、启动、日志获取、停止、删除; Docker镜像管理,包括:镜像列表、拉取、推送、构建、删除; Docker网络管理,包括:网络列表、创建、删除; Docker卷管理,包括:卷列表、创建、删除", "tools": [{"name": "list_containers", "description": "Lists all existing containers.", "parameter": {}}, {"name": "create_container", "description": "Creates a new container.", "parameter": {}}, {"name": "run_container", "description": "Runs a container.", "parameter": {}}, {"name": "recreate_container", "description": "Recreates a container.", "parameter": {}}, {"name": "start_container", "description": "Starts a container.", "parameter": {}}, {"name": "fetch_container_logs", "description": "Fetches logs from a container.", "parameter": {}}, {"name": "stop_container", "description": "Stops a container.", "parameter": {}}, {"name": "remove_container", "description": "Removes a container.", "parameter": {}}, {"name": "list_images", "description": "Lists all Docker images.", "parameter": {}}, {"name": "pull_image", "description": "Pulls a Docker image from a registry.", "parameter": {}}, {"name": "push_image", "description": "Pushes a Docker image to a registry.", "parameter": {}}, {"name": "build_image", "description": "Builds a Docker image from a Dockerfile.", "parameter": {}}, {"name": "remove_image", "description": "Removes a Docker image.", "parameter": {}}, {"name": "list_networks", "description": "Lists all Docker networks.", "parameter": {}}, {"name": "create_network", "description": "Creates a new Docker network.", "parameter": {}}, {"name": "remove_network", "description": "Removes a Docker network.", "parameter": {}}, {"name": "list_volumes", "description": "Lists all Docker volumes.", "parameter": {}}, {"name": "create_volume", "description": "Creates a new Docker volume.", "parameter": {}}, {"name": "remove_volume", "description": "Removes a Docker volume.", "parameter": {}}], "domains": [{"name": "Visual Environment & Container Manager", "description": "虚拟与容器环境管理，支持开发环境如（如Python虚拟环境、Node.js运行时）、容器化环境构建（Docker）"}]}
{"name": "DPLP", "description": "DBLP学术出版物检索与导出，包括：布尔查询、模糊标题匹配、作者出版物检索、出版物场地信息获取、统计计算及BibTeX导出", "tools": [{"name": "search", "description": "Search DBLP for publications using boolean queries.", "parameter": {"query": "(string, required) A query string that may include boolean operators 'and' and 'or' (case-insensitive)", "max_results": "(number, optional) Maximum number of publications to return. Default is 10", "year_from": "(number, optional) Lower bound for publication year", "year_to": "(number, optional) Upper bound for publication year", "venue_filter": "(string, optional) Case-insensitive substring filter for publication venues (e.g., 'iclr')", "include_bibtex": "(boolean, optional) Whether to include BibTeX entries in the results. Default is false"}}, {"name": "fuzzy_title_search", "description": "Search publications with fuzzy title matching.", "parameter": {"title": "(string, required) Full or partial title of the publication (case-insensitive)", "similarity_threshold": "(number, required) A float between 0 and 1 where 1.0 means an exact match", "max_results": "(number, optional) Maximum number of publications to return. Default is 10", "year_from": "(number, optional) Lower bound for publication year", "year_to": "(number, optional) Upper bound for publication year", "venue_filter": "(string, optional) Case-insensitive substring filter for publication venues", "include_bibtex": "(boolean, optional) Whether to include BibTeX entries in the results. Default is false"}}, {"name": "get_author_publications", "description": "Retrieve publication details for a specific author with fuzzy matching.", "parameter": {"author_name": "(string, required) Full or partial author name (case-insensitive)", "similarity_threshold": "(number, required) A float between 0 and 1 where 1.0 means an exact match", "max_results": "(number, optional) Maximum number of publications to return. Default is 20", "include_bibtex": "(boolean, optional) Whether to include BibTeX entries in the results. Default is false"}}, {"name": "get_venue_info", "description": "Retrieve detailed information about a publication venue.", "parameter": {"venue_name": "(string, required) Venue name or abbreviation (e.g., 'ICLR' or full name)"}}, {"name": "calculate_statistics", "description": "Calculate statistics from a list of publication results.", "parameter": {"results": "(array, required) An array of publication objects, each with at least 'title', 'authors', 'venue', and 'year'"}}, {"name": "export_bibtex", "description": "Export BibTeX entries directly from DBLP to a local file.", "parameter": {"links": "(string, required) HTML string containing one or more <a href=biburl>key</a> links"}}], "domains": [{"name": "Web Data Acquisition", "description": "网络数据采集,包含网页爬虫、内容提取、反爬处理及代码仓库索引分析"}, {"name": "Data Analysis", "description": "数据分析，包括数据收集、查询、追踪和分析"}]}
{"name": "dune-analytics-mcp", "description": "1. Retrieve the latest results of a specified Dune query 2. Execute a Dune query and return the results", "tools": [{"name": "get_latest_result", "description": "Retrieves the latest results of a specified Dune query.", "parameter": {"query_id": "(int) The ID of the Dune query."}}, {"name": "run_query", "description": "Executes a Dune query and returns the results.", "parameter": {"query_id": "(int) The ID of the Dune query to run."}}], "domains": [{"name": "Data Analysis", "description": "数据分析，包括数据收集、查询、追踪和分析"}]}
{"name": "EdgeOne Pages MCP", "description": "Deploy HTML content to EdgeOne Pages and return a publicly accessible URL", "tools": [{"name": "deploy-html", "description": "Deploys HTML content to EdgeOne Pages and returns a publicly accessible URL.", "parameter": {}}], "domains": [{"name": "Cloud Service Integration", "description": "云服务集成，调用与管理云平台 API(如 AWS/Azure)，支持云资源对接与 AI 服务整合"}]}
{"name": "ElevenLabs", "description": "1.使用默认语音设置从纯文本生成音频 2.从结构化脚本生成多语音和演员的音频 3.按ID删除作业 4.按ID获取音频文件 5.列出所有可用语音 6.获取语音作业历史记录", "tools": [{"name": "generate_audio_simple", "description": "Generate audio from plain text using default voice settings", "parameter": {}}, {"name": "generate_audio_script", "description": "Generate audio from a structured script with multiple voices and actors", "parameter": {}}, {"name": "delete_job", "description": "Delete a job by its ID", "parameter": {}}, {"name": "get_audio_file", "description": "Get the audio file by its ID", "parameter": {}}, {"name": "list_voices", "description": "List all available voices", "parameter": {}}, {"name": "get_voiceover_history", "description": "Get voiceover job history. Optionally specify a job ID for a specific job.", "parameter": {"job_id": "(Optional, string) The ID of the specific job to retrieve history for"}}], "domains": [{"name": "Audio-Video Creation", "description": "音视频创作,包括录制、剪辑、特效添加、配音及格式转换"}]}
{"name": "EVM MCP Server", "description": "1.获取ERC20代币元数据 2.检查ERC20代币余额 3.转移ERC20代币 4.批准代币支出 5.获取NFT元数据 6.验证NFT所有权 7.转移NFT 8.计算拥有的NFT数量 9.获取ERC1155元数据 10.检查ERC1155余额 11.转移ERC1155代币 12.获取网络信息 13.获取原生代币余额 14.发送原生代币 15.获取交易详情 16.读取智能合约状态 17.写入智能合约 18.检查地址是否为合约 19.解析ENS名称到地址", "tools": [{"name": "get-token-info", "description": "Get ERC20 token metadata", "parameter": {"tokenAddress": "(address/ENS) The address or ENS name of the token", "network": "(string) The network identifier"}}, {"name": "get-token-balance", "description": "Check ERC20 token balance", "parameter": {"tokenAddress": "(address/ENS) The address or ENS name of the token", "ownerAddress": "(address/ENS) The address or ENS name of the owner", "network": "(string) The network identifier"}}, {"name": "transfer-token", "description": "Transfer ERC20 tokens", "parameter": {"privateKey": "(string) The private key of the sender", "tokenAddress": "(address/ENS) The address or ENS name of the token", "toAddress": "(address/ENS) The address or ENS name of the recipient", "amount": "(number) The amount of tokens to transfer", "network": "(string) The network identifier"}}, {"name": "approve-token-spending", "description": "Approve token allowances", "parameter": {"privateKey": "(string) The private key of the owner", "tokenAddress": "(address/ENS) The address or ENS name of the token", "spenderAddress": "(address/ENS) The address or ENS name of the spender", "amount": "(number) The amount of tokens to approve", "network": "(string) The network identifier"}}, {"name": "get-nft-info", "description": "Get NFT metadata", "parameter": {"tokenAddress": "(address/ENS) The address or ENS name of the NFT", "tokenId": "(string) The token ID", "network": "(string) The network identifier"}}, {"name": "check-nft-ownership", "description": "Verify NFT ownership", "parameter": {"tokenAddress": "(address/ENS) The address or ENS name of the NFT", "tokenId": "(string) The token ID", "ownerAddress": "(address/ENS) The address or ENS name of the owner", "network": "(string) The network identifier"}}, {"name": "transfer-nft", "description": "Transfer an NFT", "parameter": {"privateKey": "(string) The private key of the owner", "tokenAddress": "(address/ENS) The address or ENS name of the NFT", "tokenId": "(string) The token ID", "toAddress": "(address/ENS) The address or ENS name of the recipient", "network": "(string) The network identifier"}}, {"name": "get-nft-balance", "description": "Count NFTs owned", "parameter": {"tokenAddress": "(address/ENS) The address or ENS name of the NFT", "ownerAddress": "(address/ENS) The address or ENS name of the owner", "network": "(string) The network identifier"}}, {"name": "get-erc1155-token-uri", "description": "Get ERC1155 metadata", "parameter": {"tokenAddress": "(address/ENS) The address or ENS name of the ERC1155 token", "tokenId": "(string) The token ID", "network": "(string) The network identifier"}}, {"name": "get-erc1155-balance", "description": "Check ERC1155 balance", "parameter": {"tokenAddress": "(address/ENS) The address or ENS name of the ERC1155 token", "tokenId": "(string) The token ID", "ownerAddress": "(address/ENS) The address or ENS name of the owner", "network": "(string) The network identifier"}}, {"name": "transfer-erc1155", "description": "Transfer ERC1155 tokens", "parameter": {"privateKey": "(string) The private key of the owner", "tokenAddress": "(address/ENS) The address or ENS name of the ERC1155 token", "tokenId": "(string) The token ID", "amount": "(number) The amount of tokens to transfer", "toAddress": "(address/ENS) The address or ENS name of the recipient", "network": "(string) The network identifier"}}, {"name": "get-chain-info", "description": "Get network information", "parameter": {"network": "(string) The network identifier"}}, {"name": "get-balance", "description": "Get native token balance", "parameter": {"address": "(address/ENS) The address or ENS name of the account", "network": "(string) The network identifier"}}, {"name": "transfer-eth", "description": "Send native tokens", "parameter": {"privateKey": "(string) The private key of the sender", "to": "(address/ENS) The address or ENS name of the recipient", "amount": "(number) The amount of native tokens to transfer", "network": "(string) The network identifier"}}, {"name": "get-transaction", "description": "Get transaction details", "parameter": {"txHash": "(string) The transaction hash", "network": "(string) The network identifier"}}, {"name": "read-contract", "description": "Read smart contract state", "parameter": {"contractAddress": "(address/ENS) The address or ENS name of the contract", "abi": "(array) The ABI of the contract", "functionName": "(string) The name of the function to call", "args": "(array) The arguments to pass to the function", "network": "(string) The network identifier"}}, {"name": "write-contract", "description": "Write to smart contract", "parameter": {"contractAddress": "(address/ENS) The address or ENS name of the contract", "abi": "(array) The ABI of the contract", "functionName": "(string) The name of the function to call", "args": "(array) The arguments to pass to the function", "privateKey": "(string) The private key of the caller", "network": "(string) The network identifier"}}, {"name": "is-contract", "description": "Check if address is a contract", "parameter": {"address": "(address/ENS) The address or ENS name to check", "network": "(string) The network identifier"}}, {"name": "resolve-ens", "description": "Resolve ENS name to address", "parameter": {"ensName": "(string) The ENS name to resolve", "network": "(string) The network identifier"}}], "domains": [{"name": "Blockchain Service", "description": "区块链服务，包括智能合约状态读取、代理合约地址检索、事件日志获取及事件主题签名生成"}]}
{"name": "Everything Search", "description": "Search for files and folders across the system", "tools": [{"name": "search", "description": "Search for files and folders across the system. The search capabilities and syntax support vary by platform.", "parameter": {"query": "(required) Search query string. See platform-specific notes below.", "max_results": "(optional, integer) Maximum number of results to return (default: 100, max: 1000)", "match_path": "(optional, boolean) Match against full path instead of filename only (default: false)", "match_case": "(optional, boolean) Enable case-sensitive search (default: false)", "match_whole_word": "(optional, boolean) Match whole words only (default: false)", "match_regex": "(optional, boolean) Enable regex search (default: false)", "sort_by": "(optional, integer) Sort order for results (default: 1). Available options: 1 (filename A to Z), 2 (filename Z to A), 3 (path A to Z), 4 (path Z to A), 5 (size smallest first), 6 (size largest first), 7 (extension A to Z), 8 (extension Z to A), 11 (creation date oldest first), 12 (creation date newest first), 13 (modification date oldest first), 14 (modification date newest first)"}}], "domains": [{"name": "File System", "description": "文件系统管理,包括本地 / 云端文件的存储、读取、修改、权限控制及分类检索"}]}
{"name": "Fantasy PL", "description": "Fantasy Premier League (FPL) data analysis and management, including: gameweek status retrieval, player fixture analysis, blank/double gameweek information, player comparison, team viewing, and authentication checks", "tools": [{"name": "get_gameweek_status", "description": "Get precise information about current, previous, and next gameweeks", "parameter": {}}, {"name": "analyze_player_fixtures", "description": "Analyze upcoming fixtures for a player with difficulty ratings", "parameter": {}}, {"name": "get_blank_gameweeks", "description": "Get information about upcoming blank gameweeks", "parameter": {}}, {"name": "get_double_gameweeks", "description": "Get information about upcoming double gameweeks", "parameter": {}}, {"name": "analyze_players", "description": "Filter and analyze FPL players based on multiple criteria", "parameter": {}}, {"name": "analyze_fixtures", "description": "Analyze upcoming fixtures for players, teams, or positions", "parameter": {}}, {"name": "compare_players", "description": "Compare multiple players across various metrics", "parameter": {}}, {"name": "check_fpl_authentication", "description": "Check if FPL authentication is working correctly", "parameter": {}}, {"name": "get_my_team", "description": "View your authenticated team (requires authentication)", "parameter": {}}, {"name": "get_team", "description": "View any team with a specific ID (requires authentication)", "parameter": {}}, {"name": "get_manager_info", "description": "Get manager details (requires authentication)", "parameter": {}}], "domains": [{"name": "Sports Data Analysis", "description": "Sports data retrieval and analysis, including game statistics, team records, play-by-play data, and advanced analytics"}]}
{"name": "Fetch", "description": "Fetch website content in various formats including HTML, JSON, plain text, and Markdown", "tools": [{"name": "fetch_html", "description": "Fetch a website and return the content as HTML", "parameter": {"url": "(string, required): URL of the website to fetch", "headers": "(object, optional): Custom headers to include in the request"}}, {"name": "fetch_json", "description": "Fetch a JSON file from a URL", "parameter": {"url": "(string, required): URL of the JSON to fetch", "headers": "(object, optional): Custom headers to include in the request"}}, {"name": "fetch_txt", "description": "Fetch a website and return the content as plain text (no HTML)", "parameter": {"url": "(string, required): URL of the website to fetch", "headers": "(object, optional): Custom headers to include in the request"}}, {"name": "fetch_markdown", "description": "Fetch a website and return the content as Markdown", "parameter": {"url": "(string, required): URL of the website to fetch", "headers": "(object, optional): Custom headers to include in the request"}}], "domains": [{"name": "Web Data Acquisition", "description": "网络数据采集,包含网页爬虫、内容提取、反爬处理及代码仓库索引分析"}]}
{"name": "Firebase", "description": "1.文件上传与管理，包括从文本、base64内容或本地路径上传文件，以及从外部URL导入文件 2.Firestore文档操作，包括添加、列出、获取、更新、删除文档，以及列出根集合和查询子集合 3.文件系统操作，包括列出目录中的文件和获取文件元数据及URL 4.用户认证，包括通过ID或电子邮件获取用户信息", "tools": [{"name": "storage_upload", "description": "Upload files from text, base64 content, or local file paths", "parameter": {"filePath": "(string) The path where the file will be stored in Firebase Storage", "content": "(string) The content of the file to upload, can be a local file path, base64 data URL, or plain text"}}, {"name": "storage_upload_from_url", "description": "Import files directly from external URLs", "parameter": {"filePath": "(string) The path where the file will be stored in Firebase Storage", "url": "(string) The external URL of the file to upload"}}, {"name": "firestore_add_document", "description": "Add a document to a collection", "parameter": {"collection": "(string) The name of the collection", "data": "(object) The data to add to the document"}}, {"name": "firestore_list_documents", "description": "List documents with filtering", "parameter": {"collection": "(string) The name of the collection"}}, {"name": "firestore_get_document", "description": "Get a specific document", "parameter": {"collection": "(string) The name of the collection", "id": "(string) The ID of the document"}}, {"name": "firestore_update_document", "description": "Update an existing document", "parameter": {"collection": "(string) The name of the collection", "id": "(string) The ID of the document", "data": "(object) The data to update in the document"}}, {"name": "firestore_delete_document", "description": "Delete a document", "parameter": {"collection": "(string) The name of the collection", "id": "(string) The ID of the document"}}, {"name": "firestore_list_collections", "description": "List root collections", "parameter": {}}, {"name": "firestore_query_collection_group", "description": "Query across subcollections", "parameter": {"collectionId": "(string) The ID of the collection group"}}, {"name": "storage_list_files", "description": "List files in a directory", "parameter": {"directoryPath": "(Optional, string) The path of the directory to list files from"}}, {"name": "storage_get_file_info", "description": "Get file metadata and URL", "parameter": {"filePath": "(string) The path of the file in Firebase Storage"}}, {"name": "auth_get_user", "description": "Get user by ID or email", "parameter": {"identifier": "(string) The user ID or email"}}], "domains": [{"name": "File System", "description": "文件系统管理,包括本地 / 云端文件的存储、读取、修改、权限控制及分类检索"}, {"name": "DataBase Management", "description": "数据库管理，涵盖数据库创建、查询、优化、备份及数据结构设计"}, {"name": "Server Management", "description": "Server operations and user management, including server lifecycle control and user administration"}]}
{"name": "FireCrawl", "description": "Firecrawl web content scraping and analysis, including: single URL scraping, batch URL scraping with rate limiting, batch operation status checking, web search with content extraction, asynchronous crawling, structured information extraction using LLM, deep web research with LLM analysis, and llms.txt file generation", "tools": [{"name": "firecrawl_scrape", "description": "Scrape content from a single URL with advanced options.", "parameter": {"url": "(string) The URL to scrape.", "formats": "(array) List of formats to return the content in (e.g., ['markdown']).", "onlyMainContent": "(boolean) Whether to only extract the main content.", "waitFor": "(number) Time to wait for page elements to load (in milliseconds).", "timeout": "(number) Maximum time to wait for the scrape operation (in milliseconds).", "mobile": "(boolean) Whether to emulate a mobile device.", "includeTags": "(array) List of HTML tags to include in the scrape.", "excludeTags": "(array) List of HTML tags to exclude from the scrape.", "skipTlsVerification": "(boolean) Whether to skip TLS verification."}}, {"name": "firecrawl_batch_scrape", "description": "Scrape multiple URLs efficiently with built-in rate limiting and parallel processing.", "parameter": {"urls": "(array) List of URLs to scrape.", "options": "(object) Additional options for the scrape operation, including 'formats' and 'onlyMainContent'."}}, {"name": "firecrawl_check_batch_status", "description": "Check the status of a batch operation.", "parameter": {"id": "(string) The ID of the batch operation to check."}}, {"name": "firecrawl_search", "description": "Search the web and optionally extract content from search results.", "parameter": {"query": "(string) The search query.", "limit": "(number) Maximum number of results to return.", "lang": "(string) Language for the search.", "country": "(string) Country for the search.", "scrapeOptions": "(object) Additional options for scraping the search results, including 'formats' and 'onlyMainContent'."}}, {"name": "firecrawl_crawl", "description": "Start an asynchronous crawl with advanced options.", "parameter": {"url": "(string) The starting URL for the crawl.", "maxDepth": "(number) Maximum recursive depth for the crawl.", "limit": "(number) Maximum number of URLs to crawl.", "allowExternalLinks": "(boolean) Whether to follow external links.", "deduplicateSimilarURLs": "(boolean) Whether to deduplicate similar URLs."}}, {"name": "firecrawl_extract", "description": "Extract structured information from web pages using LLM capabilities.", "parameter": {"urls": "(array) List of URLs to extract information from.", "prompt": "(string) Custom prompt for the LLM extraction.", "systemPrompt": "(string) System prompt to guide the LLM.", "schema": "(object) JSON schema for structured data extraction.", "allowExternalLinks": "(boolean) Allow extraction from external links.", "enableWebSearch": "(boolean) Enable web search for additional context.", "includeSubdomains": "(boolean) Include subdomains in extraction."}}, {"name": "firecrawl_deep_research", "description": "Conduct deep web research on a query using intelligent crawling, search, and LLM analysis.", "parameter": {"query": "(string, required) The research question or topic to explore.", "maxDepth": "(number, optional) Maximum recursive depth for crawling/search (default: 3).", "timeLimit": "(number, optional) Time limit in seconds for the research session (default: 120).", "maxUrls": "(number, optional) Maximum number of URLs to analyze (default: 50)."}}, {"name": "firecrawl_generate_llmstxt", "description": "Generate a standardized llms.txt (and optionally llms-full.txt) file for a given domain.", "parameter": {"url": "(string, required) The base URL of the website to analyze.", "maxUrls": "(number, optional) Max number of URLs to include (default: 10).", "showFullText": "(boolean, optional) Whether to include llms-full.txt contents in the response."}}], "domains": [{"name": "Web Data Acquisition", "description": "网络数据采集,包含网页爬虫、内容提取、反爬处理及代码仓库索引分析"}, {"name": "Web Search", "description": "网页信息检索,通过关键词查询公开网页内容,支持多类型信息主动获取"}]}
{"name": "Ghost", "description": "1.管理文章、成员、新闻简报、优惠、邀请、角色、标签、层级、用户和Webhooks的增删改查操作", "tools": [{"name": "Browse Posts", "description": "List posts with optional filters, pagination, and ordering.", "parameter": {}}, {"name": "Read Post", "description": "Retrieve a post by ID or slug.", "parameter": {}}, {"name": "Add Post", "description": "Create a new post with title, content, and status.", "parameter": {}}, {"name": "Edit Post", "description": "Update an existing post by ID.", "parameter": {}}, {"name": "Delete Post", "description": "Remove a post by ID.", "parameter": {}}, {"name": "Browse Members", "description": "List members with filters and pagination.", "parameter": {}}, {"name": "Read Member", "description": "Retrieve a member by ID or email.", "parameter": {}}, {"name": "Add Member", "description": "Create a new member.", "parameter": {}}, {"name": "Edit Member", "description": "Update member details.", "parameter": {}}, {"name": "Delete Member", "description": "Remove a member.", "parameter": {}}, {"name": "Browse Newsletters", "description": "List newsletters.", "parameter": {}}, {"name": "Read Newsletter", "description": "Retrieve a newsletter by ID.", "parameter": {}}, {"name": "Add Newsletter", "description": "Create a new newsletter.", "parameter": {}}, {"name": "Edit Newsletter", "description": "Update newsletter details.", "parameter": {}}, {"name": "Delete Newsletter", "description": "Remove a newsletter.", "parameter": {}}, {"name": "Browse Offers", "description": "List offers.", "parameter": {}}, {"name": "Read Offer", "description": "Retrieve an offer by ID.", "parameter": {}}, {"name": "Add Offer", "description": "Create a new offer.", "parameter": {}}, {"name": "Edit Offer", "description": "Update offer details.", "parameter": {}}, {"name": "Delete Offer", "description": "Remove an offer.", "parameter": {}}, {"name": "Browse Invites", "description": "List invites.", "parameter": {}}, {"name": "Add Invite", "description": "Create a new invite.", "parameter": {}}, {"name": "Delete Invite", "description": "Remove an invite.", "parameter": {}}, {"name": "Browse Roles", "description": "List roles.", "parameter": {}}, {"name": "Read Role", "description": "Retrieve a role by ID.", "parameter": {}}, {"name": "Browse Tags", "description": "List tags.", "parameter": {}}, {"name": "Read Tag", "description": "Retrieve a tag by ID or slug.", "parameter": {}}, {"name": "Add Tag", "description": "Create a new tag.", "parameter": {}}, {"name": "Edit Tag", "description": "Update tag details.", "parameter": {}}, {"name": "Delete Tag", "description": "Remove a tag.", "parameter": {}}, {"name": "Browse Tiers", "description": "List tiers.", "parameter": {}}, {"name": "Read Tier", "description": "Retrieve a tier by ID.", "parameter": {}}, {"name": "Add Tier", "description": "Create a new tier.", "parameter": {}}, {"name": "Edit Tier", "description": "Update tier details.", "parameter": {}}, {"name": "Delete Tier", "description": "Remove a tier.", "parameter": {}}, {"name": "Browse Users", "description": "List users.", "parameter": {}}, {"name": "Read User", "description": "Retrieve a user by ID or slug.", "parameter": {}}, {"name": "Edit User", "description": "Update user details.", "parameter": {}}, {"name": "Delete User", "description": "Remove a user.", "parameter": {}}, {"name": "Browse Webhooks", "description": "List webhooks.", "parameter": {}}, {"name": "Add Webhook", "description": "Create a new webhook.", "parameter": {}}, {"name": "Delete Webhook", "description": "Remove a webhook.", "parameter": {}}], "domains": [{"name": "Content Management", "description": "内容管理，包括博客文章的创建、更新、检索及媒体上传"}, {"name": "Business Management", "description": "业务管理，包括业务信息获取、位置管理、营业时间更新及媒体内容管理"}]}
{"name": "Git", "description": "Git版本控制操作,包括:状态查看、差异比较、提交记录、分支管理、仓库初始化、推送至远程仓库", "tools": [{"name": "git_status", "description": "Shows the working tree status", "parameter": {}}, {"name": "git_diff_unstaged", "description": "Shows changes in the working directory that are not yet staged", "parameter": {}}, {"name": "git_diff_staged", "description": "Shows changes that are staged for commit", "parameter": {}}, {"name": "git_diff", "description": "Shows differences between branches or commits", "parameter": {}}, {"name": "git_commit", "description": "Records changes to the repository", "parameter": {}}, {"name": "git_add", "description": "Adds file contents to the staging area", "parameter": {}}, {"name": "git_reset", "description": "Unstages all staged changes", "parameter": {}}, {"name": "git_log", "description": "Shows the commit logs", "parameter": {}}, {"name": "git_create_branch", "description": "Creates a new branch from an optional base branch", "parameter": {}}, {"name": "git_checkout", "description": "Switches branches", "parameter": {}}, {"name": "git_show", "description": "Shows the contents of a commit", "parameter": {}}, {"name": "git_init", "description": "Initialize a new Git repository", "parameter": {}}, {"name": "git_push", "description": "Pushes local commits to a remote repository (requires --write-access flag)", "parameter": {}}, {"name": "git_list_repositories", "description": "Lists all available Git repositories", "parameter": {}}], "domains": [{"name": "Code Toolkit", "description": "代码工具集,版本控制(如git命令执行)、代码生成、代码执行、测试等"}]}
{"name": "Github Actions", "description": "GitHub workflows management, including: listing workflows, getting workflow details and usage statistics, listing and managing workflow runs, triggering, canceling, and re-running workflows", "tools": [{"name": "list_workflows", "description": "List workflows in a GitHub repository", "parameter": {"owner": "(string) Repository owner (username or organization)", "repo": "(string) Repository name", "page": "(optional number) Page number for pagination", "perPage": "(optional number) Results per page (max 100)"}}, {"name": "get_workflow", "description": "Get details of a specific workflow", "parameter": {"owner": "(string) Repository owner (username or organization)", "repo": "(string) Repository name", "workflowId": "(string or number) The ID of the workflow or filename"}}, {"name": "get_workflow_usage", "description": "Get usage statistics of a workflow", "parameter": {"owner": "(string) Repository owner (username or organization)", "repo": "(string) Repository name", "workflowId": "(string or number) The ID of the workflow or filename"}}, {"name": "list_workflow_runs", "description": "List all workflow runs for a repository or a specific workflow", "parameter": {"owner": "(string) Repository owner (username or organization)", "repo": "(string) Repository name", "workflowId": "(optional string or number) The ID of the workflow or filename", "actor": "(optional string) Filter by user who triggered the workflow", "branch": "(optional string) Filter by branch", "event": "(optional string) Filter by event type", "status": "(optional string) Filter by status", "created": "(optional string) Filter by creation date (YYYY-MM-DD)", "excludePullRequests": "(optional boolean) Exclude PR-triggered runs", "checkSuiteId": "(optional number) Filter by check suite ID", "page": "(optional number) Page number for pagination", "perPage": "(optional number) Results per page (max 100)"}}, {"name": "get_workflow_run", "description": "Get details of a specific workflow run", "parameter": {"owner": "(string) Repository owner (username or organization)", "repo": "(string) Repository name", "runId": "(number) The ID of the workflow run"}}, {"name": "get_workflow_run_jobs", "description": "Get jobs for a specific workflow run", "parameter": {"owner": "(string) Repository owner (username or organization)", "repo": "(string) Repository name", "runId": "(number) The ID of the workflow run", "filter": "(optional string) Filter jobs by completion status ('latest', 'all')", "page": "(optional number) Page number for pagination", "perPage": "(optional number) Results per page (max 100)"}}, {"name": "trigger_workflow", "description": "Trigger a workflow run", "parameter": {"owner": "(string) Repository owner (username or organization)", "repo": "(string) Repository name", "workflowId": "(string or number) The ID of the workflow or filename", "ref": "(string) The reference to run the workflow on (branch, tag, or SHA)", "inputs": "(optional object) Input parameters for the workflow"}}, {"name": "cancel_workflow_run", "description": "Cancel a workflow run", "parameter": {"owner": "(string) Repository owner (username or organization)", "repo": "(string) Repository name", "runId": "(number) The ID of the workflow run"}}, {"name": "rerun_workflow", "description": "Re-run a workflow run", "parameter": {"owner": "(string) Repository owner (username or organization)", "repo": "(string) Repository name", "runId": "(number) The ID of the workflow run"}}], "domains": [{"name": "DevOps Pipeline Management", "description": "DevOps流水线管理，包括持续集成(CI)构建(如Jenkins/GitLab CI)、工作流定义及持续部署(CD)自动化，支持跨平台应用交付(如Kubernetes集群部署、云平台发布)等"}]}
{"name": "Glean", "description": "1.提供基于查询的搜索结果列表 2.支持与聊天机器人进行问答交互", "tools": [{"name": "Search", "description": "Provides a list of search results given a query.", "parameter": {}}, {"name": "Chat", "description": "Enables Q&A interactions with a chatbot.", "parameter": {}}], "domains": [{"name": "Web Search", "description": "网页信息检索,通过关键词查询公开网页内容,支持多类型信息主动获取"}, {"name": "Social Media Management", "description": "社交媒体账号运营,涵盖内容发布、粉丝互动、多平台批量管理与舆情分析"}]}
{"name": "Gmail", "description": "Gmail邮件管理，包括：发送邮件、草稿创建、邮件内容检索、邮件搜索、标签管理（创建/更新/删除）、批量邮件操作（标签修改/删除）", "tools": [{"name": "send_email", "description": "Sends a new email immediately.", "parameter": {"to": "(array) List of recipient email addresses", "subject": "(string) Subject of the email", "body": "(string) Body content of the email", "cc": "(Optional, array) List of CC recipient email addresses", "bcc": "(Optional, array) List of BCC recipient email addresses"}}, {"name": "draft_email", "description": "Creates a draft email without sending it.", "parameter": {"to": "(array) List of recipient email addresses", "subject": "(string) Subject of the email", "body": "(string) Body content of the email", "cc": "(Optional, array) List of CC recipient email addresses"}}, {"name": "read_email", "description": "Retrieves the content of a specific email by its ID.", "parameter": {"messageId": "(string) ID of the email message"}}, {"name": "search_emails", "description": "Searches for emails using Gmail search syntax.", "parameter": {"query": "(string) Gmail search query", "maxResults": "(Optional, integer) Maximum number of results to return"}}, {"name": "modify_email", "description": "Adds or removes labels from emails (move to different folders, archive, etc.).", "parameter": {"messageId": "(string) ID of the email message", "addLabelIds": "(array) List of label IDs to add", "removeLabelIds": "(array) List of label IDs to remove"}}, {"name": "delete_email", "description": "Permanently deletes an email.", "parameter": {"messageId": "(string) ID of the email message"}}, {"name": "list_email_labels", "description": "Retrieves all available Gmail labels.", "parameter": {}}, {"name": "create_label", "description": "Creates a new Gmail label.", "parameter": {"name": "(string) Name of the label", "messageListVisibility": "(string) Visibility setting for message list (show or hide)", "labelListVisibility": "(string) Visibility setting for label list (labelShow, labelShowIfUnread, or labelHide)"}}, {"name": "update_label", "description": "Updates an existing Gmail label.", "parameter": {"id": "(string) ID of the label", "name": "(string) New name of the label", "messageListVisibility": "(string) New visibility setting for message list (show or hide)", "labelListVisibility": "(string) New visibility setting for label list (labelShow, labelShowIfUnread, or labelHide)"}}, {"name": "delete_label", "description": "Deletes a Gmail label.", "parameter": {"id": "(string) ID of the label"}}, {"name": "get_or_create_label", "description": "Gets an existing label by name or creates it if it doesn't exist.", "parameter": {"name": "(string) Name of the label", "messageListVisibility": "(string) Visibility setting for message list (show or hide)", "labelListVisibility": "(string) Visibility setting for label list (labelShow, labelShowIfUnread, or labelHide)"}}, {"name": "batch_modify_emails", "description": "Modifies labels for multiple emails in efficient batches.", "parameter": {"messageIds": "(array) List of email message IDs", "addLabelIds": "(array) List of label IDs to add", "removeLabelIds": "(array) List of label IDs to remove", "batchSize": "(Optional, integer) Number of emails to process in each batch"}}, {"name": "batch_delete_emails", "description": "Permanently deletes multiple emails in efficient batches.", "parameter": {"messageIds": "(array) List of email message IDs", "batchSize": "(Optional, integer) Number of emails to process in each batch"}}], "domains": [{"name": "Office Productivity", "description": "办公生产力工具,涵盖文档编辑、邮件通信、日程管理及团队协作"}]}
{"name": "Gmail Headless", "description": "Gmail邮件操作,包括:刷新访问令牌、获取最近邮件、获取完整邮件内容、发送邮件", "tools": [{"name": "gmail_refresh_token", "description": "Refreshes the access token using the refresh token, client ID, and client secret.", "parameter": {"google_refresh_token": "(string) The refresh token used to obtain a new access token.", "google_client_id": "(string) The client ID obtained from Google API credentials.", "google_client_secret": "(string) The client secret obtained from Google API credentials."}}, {"name": "get_recent_emails", "description": "Retrieves recent emails with the first 1k characters of each email body.", "parameter": {"google_access_token": "(string) The access token required to authenticate the request.", "max_results": "(Optional, integer) The maximum number of emails to retrieve. Default is 5.", "unread_only": "(Optional, boolean) Whether to retrieve only unread emails. Default is false."}}, {"name": "get_full_email_body_content", "description": "Retrieves the full content of an email in chunks of 1k characters.", "parameter": {"google_access_token": "(string) The access token required to authenticate the request.", "message_id": "(string) The unique identifier of the email message.", "offset": "(integer) The starting point in the email body for the chunk to be retrieved."}}, {"name": "send_email", "description": "Sends an email through Gmail.", "parameter": {"google_access_token": "(string) The access token required to authenticate the request.", "to": "(string) The recipient's email address.", "subject": "(string) The subject of the email.", "body": "(string) The plain text body of the email.", "html_body": "(Optional, string) The HTML body of the email."}}], "domains": [{"name": "Office Productivity", "description": "办公生产力工具,涵盖文档编辑、邮件通信、日程管理及团队协作"}]}
{"name": "GOAT", "description": "1. Token swapping and liquidity provision on various platforms (0x, Starknet, Balancer, Balmy, Jupiter, KIM, Uniswap) 2. Wallet and token management (1inch, Crossmint, DeBridge, ERC20/ERC721, SPL, Starknet tokens) 3. NFT operations (Crossmint, Magic Eden, OpenSea, Solana NFTs) 4. Financial services (Hedgey rewards, Ionic borrowing/lending, Lulo USDC deposits, Polymarket betting, Pump.fun token launches) 5. Data and insights (Allora price predictions, BirdEye/BMX token insights, CoinGecko/Coinmarketcap coin info, Dexscreener token info, Nansen info, Synth Subnet price data) 6. Blockchain interactions (Cosmos tokens, Irys datachain, JSON RPC, SNS, Zilliqa) 7. Governance and proposals (Mode governance, voting, token spraying) 8. Casino games (BetSwirl) 9. Physical asset purchases (Worldstore) 10. Address management (ENS resolution, ZeroDev global address)", "tools": [{"name": "Get quotes and swap on 0x", "description": "Allows agents to get quotes and perform swaps using the 0x protocol.", "parameter": {}}, {"name": "Get the balances of a wallet using 1inch API", "description": "Retrieves the balances of a wallet using the 1inch API.", "parameter": {}}, {"name": "Get price predictions using Allora API", "description": "Fetches price predictions using the Allora API.", "parameter": {}}, {"name": "Swap tokens on Starknet", "description": "Enables token swapping on the Starknet network.", "parameter": {}}, {"name": "Swap tokens and provide liquidity on Balancer", "description": "Facilitates token swapping and liquidity provision on Balancer.", "parameter": {}}, {"name": "Swap tokens on Balmy", "description": "Allows token swapping on the Balmy platform.", "parameter": {}}, {"name": "Play casino games", "description": "Enables agents to play casino games using the BetSwirl platform.", "parameter": {}}, {"name": "Get token insights using BirdEye API", "description": "Provides token insights using the BirdEye API.", "parameter": {}}, {"name": "Get token insights using BMX API", "description": "Fetches token insights using the BMX API.", "parameter": {}}, {"name": "Get coin information using CoinGecko API", "description": "Retrieves coin information using the CoinGecko API.", "parameter": {}}, {"name": "Get coin information using Coinmarketcap API", "description": "Fetches coin information using the Coinmarketcap API.", "parameter": {}}, {"name": "Interact with Cosmos tokens", "description": "Enables interaction with Cosmos tokens.", "parameter": {}}, {"name": "Purchase any NFT on any chain using Crossmint", "description": "Allows the purchase of NFTs on any supported chain using Crossmint.", "parameter": {}}, {"name": "Create a wallet, mint tokens and get test tokens on any chain using Crossmint", "description": "Facilitates the creation of wallets, minting of tokens, and retrieval of test tokens on any supported chain using Crossmint.", "parameter": {}}, {"name": "Bridge tokens on DeBridge", "description": "Enables token bridging on the DeBridge network.", "parameter": {}}, {"name": "Get token information using Dexscreener API", "description": "Provides token information using the Dexscreener API.", "parameter": {}}, {"name": "Push based real time data streams", "description": "Enables push-based real-time data streams.", "parameter": {}}, {"name": "Resolve ENS names to addresses", "description": "Resolves ENS names to their corresponding addresses.", "parameter": {}}, {"name": "Find the most optimal route between tokens", "description": "Finds the most optimal route for token swaps.", "parameter": {}}, {"name": "Interact with any ERC20 token", "description": "Enables interaction with ERC20 tokens.", "parameter": {}}, {"name": "Interact with any ERC721 token", "description": "Enables interaction with ERC721 tokens.", "parameter": {}}, {"name": "Get transaction information using Etherscan API", "description": "Retrieves transaction information using the Etherscan API.", "parameter": {}}, {"name": "Read and post casts on Farcaster", "description": "Enables reading and posting casts on the Farcaster platform.", "parameter": {}}, {"name": "Claim rewards on Hedgey", "description": "Allows claiming of rewards on the Hedgey platform.", "parameter": {}}, {"name": "Borrow and lend on Ionic", "description": "Enables borrowing and lending on the Ionic platform.", "parameter": {}}, {"name": "Create positions on Ironclad", "description": "Facilitates the creation of positions on Ironclad.", "parameter": {}}, {"name": "Interact with Irys datachain", "description": "Enables interaction with the Irys datachain.", "parameter": {}}, {"name": "Call any JSON RPC endpoint", "description": "Allows calling of any JSON RPC endpoint.", "parameter": {}}, {"name": "Swap tokens on Jupiter", "description": "Enables token swapping on the Jupiter platform.", "parameter": {}}, {"name": "Swap tokens on KIM", "description": "Allows token swapping on the KIM platform.", "parameter": {}}, {"name": "Deposit USDC on Lulo", "description": "Enables depositing of USDC on the Lulo platform.", "parameter": {}}, {"name": "Cross-chain token swap using Mayan SDK", "description": "Facilitates cross-chain token swaps using the Mayan SDK.", "parameter": {}}, {"name": "Create liquidity pools on Meteora", "description": "Enables the creation of liquidity pools on Meteora.", "parameter": {}}, {"name": "Create a governance proposal on Mode", "description": "Facilitates the creation of governance proposals on Mode.", "parameter": {}}, {"name": "Vote on a governance proposal on Mode", "description": "Enables voting on governance proposals on Mode.", "parameter": {}}, {"name": "Spray tokens on Mode", "description": "Facilitates the spraying of tokens on Mode.", "parameter": {}}, {"name": "Get Nansen information using Nansen API", "description": "Retrieves information using the Nansen API.", "parameter": {}}, {"name": "Get nft and sales information using OpenSea API", "description": "Provides NFT and sales information using the OpenSea API.", "parameter": {}}, {"name": "Create positions on Orca", "description": "Enables the creation of positions on Orca.", "parameter": {}}, {"name": "Currency exchange on Zilliqa", "description": "Facilitates currency exchange on the Zilliqa network.", "parameter": {}}, {"name": "Bet on Polymarket", "description": "Enables betting on Polymarket.", "parameter": {}}, {"name": "Launch a token on Pump.fun", "description": "Facilitates the launch of tokens on Pump.fun.", "parameter": {}}, {"name": "Create a position on Renzo", "description": "Enables the creation of positions on Renzo.", "parameter": {}}, {"name": "Check SPL token validity on Rugcheck", "description": "Checks the validity of SPL tokens using Rugcheck.", "parameter": {}}, {"name": "Interact with SNS", "description": "Enables interaction with SNS.", "parameter": {}}, {"name": "Purchase NFTs on Magic Eden", "description": "Facilitates the purchase of NFTs on Magic Eden.", "parameter": {}}, {"name": "Get NFT information using Solana NFTs API", "description": "Provides NFT information using the Solana NFTs API.", "parameter": {}}, {"name": "Interact with SPL tokens", "description": "Enables interaction with SPL tokens.", "parameter": {}}, {"name": "Interact with Starknet tokens", "description": "Enables interaction with Starknet tokens.", "parameter": {}}, {"name": "Create streams with Superfluid", "description": "Facilitates the creation of streams using Superfluid.", "parameter": {}}, {"name": "Get synthetic price data using Synth Subnet API", "description": "Provides synthetic price data using the Synth Subnet API.", "parameter": {}}, {"name": "Purchase tokens on Tensor", "description": "Enables the purchase of tokens on Tensor.", "parameter": {}}, {"name": "Swap tokens on Uniswap", "description": "Facilitates token swapping on Uniswap.", "parameter": {}}, {"name": "Create a position on Velodrome", "description": "Enables the creation of positions on Velodrome.", "parameter": {}}, {"name": "Purchase physical assets on Worldstore", "description": "Facilitates the purchase of physical assets on Worldstore.", "parameter": {}}, {"name": "Create a global address on ZeroDev", "description": "Enables the creation of a global address on ZeroDev.", "parameter": {}}, {"name": "Interact with Zilliqa", "description": "Enables interaction with the Zilliqa network.", "parameter": {}}], "domains": [{"name": "Blockchain Service", "description": "区块链服务，包括智能合约状态读取、代理合约地址检索、事件日志获取及事件主题签名生成"}, {"name": "Financial Service", "description": "金融服务,包括支付处理、理财管理、云成本分析及财务报表生成"}, {"name": "Data Analysis", "description": "数据分析，包括数据收集、查询、追踪和分析"}]}
{"name": "Godot", "description": "Godot游戏引擎操作,包括:项目编辑与执行、调试输出获取、版本查询、项目管理、场景创建与节点操作、资源加载与导出、UID管理", "tools": [{"name": "launch_editor", "description": "Open the Godot editor for a specific project", "parameter": {}}, {"name": "run_project", "description": "Execute Godot projects in debug mode", "parameter": {}}, {"name": "get_debug_output", "description": "Retrieve console output and error messages", "parameter": {}}, {"name": "stop_project", "description": "Stop the execution of a Godot project", "parameter": {}}, {"name": "get_godot_version", "description": "Retrieve the installed Godot version", "parameter": {}}, {"name": "list_projects", "description": "Find Godot projects in a specified directory", "parameter": {}}, {"name": "get_project_info", "description": "Get detailed information about project structure", "parameter": {}}, {"name": "create_scene", "description": "Create new scenes with specified root node types", "parameter": {}}, {"name": "add_node", "description": "Add nodes to existing scenes with customizable properties", "parameter": {}}, {"name": "load_sprite", "description": "Load sprites and textures into Sprite2D nodes", "parameter": {}}, {"name": "export_mesh_library", "description": "Export 3D scenes as MeshLibrary resources for GridMap", "parameter": {}}, {"name": "save_scene", "description": "Save scenes with options for creating variants", "parameter": {}}, {"name": "get_uid", "description": "Get UID for specific files (for Godot 4.4+)", "parameter": {}}, {"name": "update_project_uids", "description": "Update UID references by resaving resources (for Godot 4.4+)", "parameter": {}}], "domains": [{"name": "Game Development", "description": "游戏开发工具集，包括游戏引擎操作、场景管理、资源加载与调试功能"}]}
{"name": "Golang Filesystem Server", "description": "File system operations including: reading single/multiple files, writing files, creating directories, listing directory contents, moving/renaming files, searching files/directories, retrieving file metadata, displaying directory structure, and listing accessible directories", "tools": [{"name": "read_file", "description": "Read complete contents of a file", "parameter": {"path": "(string) File path"}}, {"name": "read_multiple_files", "description": "Read multiple files simultaneously", "parameter": {"paths": "(string[]) Array of file paths"}}, {"name": "write_file", "description": "Create new file or overwrite existing", "parameter": {"path": "(string) File location", "content": "(string) File content"}}, {"name": "create_directory", "description": "Create new directory or ensure it exists", "parameter": {"path": "(string) Directory path"}}, {"name": "list_directory", "description": "List directory contents with [FILE] or [DIR] prefixes", "parameter": {"path": "(string) Directory path"}}, {"name": "move_file", "description": "Move or rename files and directories", "parameter": {"source": "(string) Source path", "destination": "(string) Destination path"}}, {"name": "search_files", "description": "Recursively search for files/directories", "parameter": {"path": "(string) Starting directory", "pattern": "(string) Search pattern"}}, {"name": "get_file_info", "description": "Get detailed file/directory metadata", "parameter": {"path": "(string) File or directory path"}}, {"name": "tree", "description": "Returns a hierarchical JSON representation of a directory structure", "parameter": {"path": "(string) Directory to traverse (required)", "depth": "(number) Maximum depth to traverse (default: 3)", "follow_symlinks": "(boolean) Whether to follow symbolic links (default: false)"}}, {"name": "list_allowed_directories", "description": "List all directories the server is allowed to access", "parameter": {}}], "domains": [{"name": "File System", "description": "文件系统管理,包括本地 / 云端文件的存储、读取、修改、权限控制及分类检索"}]}
{"name": "Goodnews", "description": "Fetch and return a list of positive and uplifting news articles", "tools": [{"name": "fetch_list_of_goodnews", "description": "Fetches and returns a list of good, positive, and uplifting news articles.", "parameter": {}}], "domains": [{"name": "News & Content Services", "description": "新闻与内容服务,提供资讯聚合、热点推送、主题订阅及媒体品牌内容"}]}
{"name": "Google Calendar", "description": "Calendar event operations, including: listing events, creating events, updating events, deleting events, and finding free time slots", "tools": [{"name": "list_events", "description": "List calendar events within a specified time range", "parameter": {}}, {"name": "create_event", "description": "Create a new calendar event", "parameter": {}}, {"name": "update_event", "description": "Update an existing calendar event", "parameter": {}}, {"name": "delete_event", "description": "Delete a calendar event", "parameter": {}}, {"name": "find_free_time", "description": "Find available time slots in the calendar", "parameter": {}}], "domains": [{"name": "Time & Task Management", "description": "时间与任务管理,涵盖日历日程、待办事项、项目进度跟踪及会议调度"}]}
{"name": "Google Custom Search", "description": "1.使用Google Custom Search API进行网页搜索 2.从任意网页提取内容", "tools": [{"name": "search", "description": "Perform web searches using Google Custom Search API.", "parameter": {"query": "(string) the search query", "num": "(Optional, integer) the number of results to return, default is 5, max is 10"}}, {"name": "read_webpage", "description": "Extract content from any webpage.", "parameter": {"url": "(string) the URL of the webpage to extract content from"}}], "domains": [{"name": "Web Search", "description": "网页信息检索,通过关键词查询公开网页内容,支持多类型信息主动获取"}, {"name": "Web Data Acquisition", "description": "网络数据采集,包含网页爬虫、内容提取、反爬处理及代码仓库索引分析"}]}
{"name": "Google Sheets", "description": "Google Sheets operations, including: listing spreadsheets, creating spreadsheets, reading/writing data, batch updates, adding rows, managing sheets, fetching multi-sheet data, sharing spreadsheets, and retrieving metadata", "tools": [{"name": "list_spreadsheets", "description": "Lists spreadsheets in the configured Drive folder (Service Account) or accessible by the user (OAuth).", "parameter": {}}, {"name": "create_spreadsheet", "description": "Creates a new spreadsheet.", "parameter": {"title": "(string) The desired title."}}, {"name": "get_sheet_data", "description": "Reads data from a range in a sheet.", "parameter": {"spreadsheet_id": "(string)", "sheet": "(string) Name of the sheet.", "range": "(Optional, string) A1 notation (e.g., 'A1:C10', 'Sheet1!B2:D'). If omitted, reads the whole sheet."}}, {"name": "update_cells", "description": "Writes data to a specific range. Overwrites existing data.", "parameter": {"spreadsheet_id": "(string)", "sheet": "(string)", "range": "(string) A1 notation.", "data": "(2D array) Values to write."}}, {"name": "batch_update_cells", "description": "Updates multiple ranges in one API call.", "parameter": {"spreadsheet_id": "(string)", "sheet": "(string)", "ranges": "(object) Dictionary mapping range strings (A1 notation) to 2D arrays of values { 'A1:B2': [[1, 2], [3, 4]], 'D5': [['Hello']] }."}}, {"name": "add_rows", "description": "Appends rows to the end of a sheet (after the last row with data).", "parameter": {"spreadsheet_id": "(string)", "sheet": "(string)", "data": "(2D array) Rows to append."}}, {"name": "list_sheets", "description": "Lists all sheet names within a spreadsheet.", "parameter": {"spreadsheet_id": "(string)"}}, {"name": "create_sheet", "description": "Adds a new sheet (tab) to a spreadsheet.", "parameter": {"spreadsheet_id": "(string)", "title": "(string) Name for the new sheet."}}, {"name": "get_multiple_sheet_data", "description": "Fetches data from multiple ranges across potentially different spreadsheets in one call.", "parameter": {"queries": "(array of objects) Each object needs `spreadsheet_id`, `sheet`, and `range`. [{spreadsheet_id: 'abc', sheet: 'Sheet1', range: 'A1:B2'}, ...]."}}, {"name": "get_multiple_spreadsheet_summary", "description": "Gets titles, sheet names, headers, and first few rows for multiple spreadsheets.", "parameter": {"spreadsheet_ids": "(array of strings)", "rows_to_fetch": "(Optional, integer, default 5) How many rows (including header) to preview."}}, {"name": "share_spreadsheet", "description": "Shares a spreadsheet with specified users/emails and roles.", "parameter": {"spreadsheet_id": "(string)", "recipients": "(array of objects) [{email_address: 'user@example.com', role: 'writer'}, ...]. Roles: reader, commenter, writer.", "send_notification": "(Optional, boolean, default True) Send email notifications."}}, {"name": "spreadsheet_info", "description": "Get basic metadata about a Google Spreadsheet.", "parameter": {"spreadsheet_id": "(string)"}}], "domains": [{"name": "Office Productivity", "description": "办公生产力工具,涵盖文档编辑、邮件通信、日程管理及团队协作"}]}
{"name": "Google Tasks", "description": "Google Tasks operations, including: search, list, create, update, delete, and clear completed tasks", "tools": [{"name": "search", "description": "Search for tasks in Google Tasks", "parameter": {"query": "(string): Search query"}}, {"name": "list", "description": "List all tasks in Google Tasks", "parameter": {"cursor": "(Optional, string): Cursor for pagination"}}, {"name": "create", "description": "Create a new task in Google Tasks", "parameter": {"taskListId": "(Optional, string): Task list ID", "title": "(string, required): Task title", "notes": "(Optional, string): Task notes", "due": "(Optional, string): Due date"}}, {"name": "update", "description": "Update an existing task in Google Tasks", "parameter": {"taskListId": "(Optional, string): Task list ID", "id": "(string, required): Task ID", "uri": "(string, required): Task URI", "title": "(Optional, string): New task title", "notes": "(Optional, string): New task notes", "status": "(Optional, string): New task status (\"needsAction\" or \"completed\")", "due": "(Optional, string): New due date"}}, {"name": "delete", "description": "Delete a task in Google Tasks", "parameter": {"taskListId": "(string, required): Task list ID", "id": "(string, required): Task ID"}}, {"name": "clear", "description": "Clear completed tasks from a Google Tasks task list", "parameter": {"taskListId": "(string, required): Task list ID"}}], "domains": [{"name": "Time & Task Management", "description": "时间与任务管理,涵盖日历日程、待办事项、项目进度跟踪及会议调度"}]}
{"name": "Google Vertex AI Search", "description": "Search documents using Vertex AI Search", "tools": [{"name": "search", "description": "Searches documents using Vertex AI Search.", "parameter": {"--config": "(string) Path to the configuration file.", "--query": "(string) The query to search for."}}], "domains": [{"name": "Web Search", "description": "网页信息检索,通过关键词查询公开网页内容,支持多类型信息主动获取"}]}
{"name": "GraphQL Schema", "description": "GraphQL schema exploration and documentation, including: listing query/mutation/subscription fields, getting field definitions in SDL format, listing schema types, getting type definitions, and searching schema by name pattern", "tools": [{"name": "list-query-fields", "description": "Lists all available root-level fields for GraphQL queries", "parameter": {}}, {"name": "get-query-field", "description": "Gets detailed definition for a specific query field in SDL format", "parameter": {}}, {"name": "list-mutation-fields", "description": "Lists all available root-level fields for GraphQL mutations", "parameter": {}}, {"name": "get-mutation-field", "description": "Gets detailed definition for a specific mutation field in SDL format", "parameter": {}}, {"name": "list-subscription-fields", "description": "Lists all available root-level fields for GraphQL subscriptions (if present in schema)", "parameter": {}}, {"name": "get-subscription-field", "description": "Gets detailed definition for a specific subscription field (if present in schema)", "parameter": {}}, {"name": "list-types", "description": "Lists all types defined in the GraphQL schema (excluding internal types)", "parameter": {}}, {"name": "get-type", "description": "Gets detailed definition for a specific GraphQL type in SDL format", "parameter": {}}, {"name": "get-type-fields", "description": "Gets a simplified list of fields with their types for a specific GraphQL object type", "parameter": {}}, {"name": "search-schema", "description": "Searches for types or fields in the schema by name pattern (case-insensitive regex)", "parameter": {}}], "domains": [{"name": "API Development & Testing", "description": "API开发与测试，包括API规范验证、接口测试、文档生成及SDK生成"}]}
{"name": "HDW LinkedIn", "description": "LinkedIn用户和公司信息检索与管理，包括：用户搜索、个人资料获取、电子邮件查找、帖子检索、反应获取、聊天消息管理、连接邀请发送、帖子评论、连接列表获取、公司搜索和员工检索", "tools": [{"name": "search_linkedin_users", "description": "Search for LinkedIn users with various filters.", "parameter": {"keywords": "(optional) Any keyword for search.", "first_name": "(optional) First name.", "last_name": "(optional) Last name.", "title": "(optional) Job title.", "company_keywords": "(optional) Company keywords.", "school_keywords": "(optional) School keywords.", "current_company": "(optional) Current company.", "past_company": "(optional) Past company.", "location": "(optional) Location.", "industry": "(optional) Industry.", "education": "(optional) Education.", "count": "(optional, default: 10) Maximum number of results (max 1000).", "timeout": "(optional, default: 300) Timeout in seconds (20–1500)."}}, {"name": "get_linkedin_profile", "description": "Retrieve detailed profile information about a LinkedIn user.", "parameter": {"user": "(required) User alias, URL, or URN.", "with_experience": "(optional, default: true)", "with_education": "(optional, default: true)", "with_skills": "(optional, default: true)"}}, {"name": "get_linkedin_email_user", "description": "Look up LinkedIn user details by email.", "parameter": {"email": "(required) Email address.", "count": "(optional, default: 5)", "timeout": "(optional, default: 300)"}}, {"name": "get_linkedin_user_posts", "description": "Retrieve posts for a LinkedIn user by URN.", "parameter": {"urn": "(required) User URN (must include prefix, e.g. fsd_profile:...).", "count": "(optional, default: 10)", "timeout": "(optional, default: 300)"}}, {"name": "get_linkedin_user_reactions", "description": "Retrieve reactions for a LinkedIn user by URN.", "parameter": {"urn": "(required)", "count": "(optional, default: 10)", "timeout": "(optional, default: 300)"}}, {"name": "get_linkedin_chat_messages", "description": "Retrieve top chat messages from the LinkedIn management API.", "parameter": {"user": "(required) User URN (with prefix).", "count": "(optional, default: 20)", "timeout": "(optional, default: 300)"}}, {"name": "send_linkedin_chat_message", "description": "Send a chat message using the LinkedIn management API.", "parameter": {"user": "(required) Recipient user URN (with prefix).", "text": "(required) Message text.", "timeout": "(optional, default: 300)"}}, {"name": "send_linkedin_connection", "description": "Send a connection invitation to a LinkedIn user.", "parameter": {"user": "(required)", "timeout": "(optional, default: 300)"}}, {"name": "send_linkedin_post_comment", "description": "Create a comment on a LinkedIn post or reply.", "parameter": {"text": "(required) Comment text.", "urn": "(required) Activity or comment URN.", "timeout": "(optional, default: 300)"}}, {"name": "get_linkedin_user_connections", "description": "Retrieve a list of LinkedIn user connections.", "parameter": {"connected_after": "(optional) Timestamp filter.", "count": "(optional, default: 20)", "timeout": "(optional, default: 300)"}}, {"name": "get_linkedin_post_reposts", "description": "Retrieve reposts for a LinkedIn post.", "parameter": {"urn": "(required) Post URN (must start with activity:).", "count": "(optional, default: 10)", "timeout": "(optional, default: 300)"}}, {"name": "get_linkedin_post_comments", "description": "Retrieve comments for a LinkedIn post.", "parameter": {"urn": "(required)", "sort": "(optional, default: relevance; allowed values: relevance, recent)", "count": "(optional, default: 10)", "timeout": "(optional, default: 300)"}}, {"name": "get_linkedin_google_company", "description": "Search for LinkedIn companies via Google – the first result is typically the best match.", "parameter": {"keywords": "(required) Array of company keywords.", "with_urn": "(optional, default: false)", "count_per_keyword": "(optional, default: 1; range 1–10)", "timeout": "(optional, default: 300)"}}, {"name": "get_linkedin_company", "description": "Retrieve detailed information about a LinkedIn company.", "parameter": {"company": "(required) Company alias, URL, or URN.", "timeout": "(optional, default: 300)"}}, {"name": "get_linkedin_company_employees", "description": "Retrieve employees of a LinkedIn company.", "parameter": {"companies": "(required) Array of company URNs.", "keywords": "(optional)", "first_name": "(optional)", "last_name": "(optional)", "count": "(optional, default: 10)", "timeout": "(optional, default: 300)"}}], "domains": [{"name": "Social Media Management", "description": "社交媒体账号运营,涵盖内容发布、粉丝互动、多平台批量管理与舆情分析"}]}
{"name": "Heurist Mesh Agent", "description": "1. Search for token information and market data using CoinGecko ID 2. Get trading pair info and basic token info from DexScreener 3. Search and analyze Twitter accounts and mentions 4. Perform web search and answer operations using Exa's API 5. Fetch security details of blockchain token contracts", "tools": [{"name": "get_coingecko_id", "description": "Search for a token by name to get its CoinGecko ID", "parameter": {"token_name": "(string) The token name to search for"}}, {"name": "get_token_info", "description": "Get detailed token information and market data using CoinGecko ID (you can't use the token address or name or symbol)", "parameter": {"coingecko_id": "(string) The CoinGecko ID of the token"}}, {"name": "get_trending_coins", "description": "Get the current top trending cryptocurrencies on CoinGecko", "parameter": {}}, {"name": "get_specific_pair_info", "description": "Get trading pair info by chain and pair address on DexScreener", "parameter": {"chain": "(string) Chain identifier (e.g., solana, bsc, ethereum, base)", "pair_address": "(string) The pair contract address to look up"}}, {"name": "get_token_pairs", "description": "Get the trading pairs by chain and token address on DexScreener", "parameter": {"chain": "(string) Chain identifier (e.g., solana, bsc, ethereum, base)", "token_address": "(string) The token contract address to look up all pairs for"}}, {"name": "get_token_profiles", "description": "Get the basic info of the latest tokens from DexScreener", "parameter": {}}, {"name": "search_pairs", "description": "Search for trading pairs on DexScreener by token name, symbol, or address", "parameter": {"search_term": "(string) Search term (token name, symbol, or address)"}}, {"name": "get_trending_tokens", "description": "Get current trending tokens on Twitter", "parameter": {"time_window": "(string) Time window to analyze"}}, {"name": "search_account", "description": "Analyze a Twitter account with both mention search and account stats", "parameter": {"username": "(string) Twitter username to analyze (without @)", "days_ago": "(integer) Number of days to look back for mentions", "limit": "(integer) Maximum number of mention results"}}, {"name": "search_mentions", "description": "Search for mentions of specific tokens or topics on Twitter", "parameter": {"keywords": "(array) List of keywords to search for", "days_ago": "(integer) Number of days to look back", "limit": "(integer) Maximum number of results (minimum: 20)"}}, {"name": "answer", "description": "Get a direct answer to a question using Exa's answer API", "parameter": {"question": "(string) The question to answer"}}, {"name": "search", "description": "Search for webpages related to a query", "parameter": {"search_term": "(string) The search term", "limit": "(integer) Maximum number of results to return (default: 10)"}}, {"name": "search_and_answer", "description": "Perform both search and answer operations for a query", "parameter": {"topic": "(string) The topic to search for and answer"}}, {"name": "execute_search", "description": "Execute a web search query by reading the web pages", "parameter": {"search_term": "(string) The search term to execute"}}, {"name": "generate_queries", "description": "Generate related search queries for a topic that can expand the research", "parameter": {"topic": "(string) The main topic to research", "num_queries": "(integer) Number of queries to generate"}}, {"name": "fetch_security_details", "description": "Fetch security details of a blockchain token contract", "parameter": {"contract_address": "(string) The token contract address", "chain_id": "(['integer', 'string']) The blockchain chain ID or 'solana' for Solana tokens. Supported chains: Ethereum (1), Optimism (10), Cronos (25), BSC (56), Gnosis (100), HECO (128), Polygon (137), Fantom (250), KCC (321), zkSync Era (324), ETHW (10001), FON (201022), Arbitrum (42161), Avalanche (43114), Linea Mainnet (59144), Base (8453), Tron (tron), Scroll (534352), opBNB (204), Mantle (5000), ZKFair (42766), Blast (81457), Manta Pacific (169), Berachain Artio Testnet (80085), Merlin (4200), Bitlayer Mainnet (200901), zkLink Nova (810180), X Layer Mainnet (196), Solana (solana)"}}], "domains": [{"name": "Blockchain Service", "description": "区块链服务，包括智能合约状态读取、代理合约地址检索、事件日志获取及事件主题签名生成"}, {"name": "Web Search", "description": "网页信息检索,通过关键词查询公开网页内容,支持多类型信息主动获取"}, {"name": "Social Media Management", "description": "社交媒体账号运营,涵盖内容发布、粉丝互动、多平台批量管理与舆情分析"}, {"name": "Data Analysis", "description": "数据分析，包括数据收集、查询、追踪和分析"}]}
{"name": "Holaspirit", "description": "Holaspirit组织管理工具集，包括：任务列表、指标列表、圈子列表与详情、角色列表与详情、域列表、政策列表、会议列表与详情、成员动态获取、会议紧张关系获取、成员搜索", "tools": [{"name": "holaspirit_list_tasks", "description": "List all tasks in the organization", "parameter": {}}, {"name": "holaspirit_list_metrics", "description": "List all metrics in the organization", "parameter": {}}, {"name": "holaspirit_list_circles", "description": "List all circles in the organization", "parameter": {}}, {"name": "holaspirit_get_circle", "description": "Get details of a specific circle", "parameter": {}}, {"name": "holaspirit_list_roles", "description": "List all roles in the organization", "parameter": {}}, {"name": "holaspirit_get_role", "description": "Get details of a specific role", "parameter": {}}, {"name": "holaspirit_list_domains", "description": "List all domains in the organization", "parameter": {}}, {"name": "holaspirit_list_policies", "description": "List all policies in the organization", "parameter": {}}, {"name": "holaspirit_list_meetings", "description": "List all meetings in the organization", "parameter": {}}, {"name": "holaspirit_get_meeting", "description": "Get details of a specific meeting", "parameter": {}}, {"name": "holaspirit_get_member_feed", "description": "Get member feed", "parameter": {}}, {"name": "holaspirit_get_tensions", "description": "Get tensions for a meeting or meetings", "parameter": {}}, {"name": "holaspirit_search_member", "description": "Search for a member by email", "parameter": {}}], "domains": [{"name": "Business Management", "description": "业务管理，包括业务信息获取、位置管理、营业时间更新及媒体内容管理"}]}
{"name": "Home Assistant", "description": "1.控制Home Assistant设备 2.管理Home Assistant插件 3.管理HACS包 4.管理Home Assistant自动化配置 5.执行指定动作 6.批量执行动作", "tools": [{"name": "control", "description": "Controls Home Assistant devices with various commands.", "parameter": {"command": "(string) The command to execute (e.g., 'turn_on', 'turn_off', 'toggle')", "entity_id": "(string) The ID of the entity to control", "brightness": "(Optional, number) Brightness level for lights", "color_temp": "(Optional, number) Color temperature for lights", "rgb_color": "(Optional, array) RGB color for lights"}}, {"name": "addon", "description": "Manages Home Assistant add-ons.", "parameter": {"action": "(string) The action to perform (e.g., 'list', 'install', 'start', 'stop', 'restart')", "slug": "(Optional, string) The slug of the add-on", "version": "(Optional, string) The version of the add-on"}}, {"name": "package", "description": "Manages HACS packages.", "parameter": {"action": "(string) The action to perform (e.g., 'list', 'install')", "category": "(string) The category of the package (e.g., 'integration', 'plugin', 'theme', 'python_script', 'appdaemon', 'netdaemon')", "repository": "(Optional, string) The repository of the package", "version": "(Optional, string) The version of the package"}}, {"name": "automation_config", "description": "Manages Home Assistant automations.", "parameter": {"action": "(string) The action to perform (e.g., 'create', 'duplicate')", "config": "(Optional, object) Configuration for creating an automation", "automation_id": "(Optional, string) The ID of the automation to duplicate"}}, {"name": "execute_action", "description": "Executes a specified action with given parameters.", "parameter": {"action": "(string) The action to execute", "parameters": "(object) Parameters for the action"}}, {"name": "batch_actions", "description": "Executes multiple actions in sequence.", "parameter": {"actions": "(array) An array of action objects, each containing an action and parameters"}}], "domains": [{"name": "Home Automation", "description": "智能家居自动化控制，包括设备控制、插件管理、自动化配置及批量操作执行"}]}
{"name": "HubSpot", "description": "HubSpot CRM operations, including: contact/company creation with duplicate prevention, retrieving company/contact activity, fetching recent conversations, and semantic search across HubSpot data", "tools": [{"name": "hubspot_create_contact", "description": "Create contacts with duplicate prevention", "parameter": {}}, {"name": "hubspot_create_company", "description": "Create companies with duplicate prevention", "parameter": {}}, {"name": "hubspot_get_company_activity", "description": "Retrieve activity for specific companies", "parameter": {}}, {"name": "hubspot_get_active_companies", "description": "Retrieve most recently active companies", "parameter": {}}, {"name": "hubspot_get_active_contacts", "description": "Retrieve most recently active contacts", "parameter": {}}, {"name": "hubspot_get_recent_conversations", "description": "Retrieve recent conversation threads with messages", "parameter": {}}, {"name": "hubspot_search_data", "description": "Semantic search across previously retrieved HubSpot data", "parameter": {}}], "domains": [{"name": "Business Management", "description": "业务管理，包括业务信息获取、位置管理、营业时间更新及媒体内容管理"}]}
{"name": "HuggingFace Spaces", "description": "1.使用merve/paligemma2-vqav2空间查询图像中的对象或人物 2.使用microsoft/OmniParser空间分析图像并生成带注释的图像 3.使用shuttleai/shuttle-jaguar空间生成图像 4.使用black-forest-labs/FLUX.1-schnell空间生成图像 5.使用hf-audio/whisper-large-v3-turbo空间转录音频 6.使用Qwen/Qwen2.5-72B-Instruct空间提供聊天功能 7.使用DawnC/PawMatchAI空间执行视觉任务", "tools": [{"name": "use paligemma", "description": "Queries an image using the `merve/paligemma2-vqav2` space to identify objects or people in the image.", "parameter": {"filename": "(string) The filename of the image in the working directory.", "url": "(Optional, string) A URL to an image."}}, {"name": "use omniparser", "description": "Analyzes an image using the `microsoft/OmniParser` space and produces an annotated image along with descriptions and coordinates.", "parameter": {"filename": "(string) The filename of the image in the working directory."}}, {"name": "use shuttle-jaguar", "description": "Generates images using the `shuttleai/shuttle-jaguar` space.", "parameter": {}}, {"name": "use FLUX.1-schnell", "description": "Generates images using the `black-forest-labs/FLUX.1-schnell` space.", "parameter": {}}, {"name": "use whisper-large-v3-turbo", "description": "Transcribes audio using the `hf-audio/whisper-large-v3-turbo` space.", "parameter": {"filename": "(string) The filename of the audio file in the working directory."}}, {"name": "use Qwen2.5-72B-Instruct", "description": "Provides chat capabilities using the `Qwen/Qwen2.5-72B-Instruct` space.", "parameter": {}}, {"name": "use PawMatchAI", "description": "Performs vision tasks using the `DawnC/PawMatchAI` space, such as finding matches in images.", "parameter": {"filename": "(string) The filename of the image in the working directory."}}], "domains": [{"name": "Image Processing", "description": "图像处理与生成,包括传统图片编辑、AI 图像生成、图表绘制与可视化"}, {"name": "Audio-Video Creation", "description": "音视频创作,包括录制、剪辑、特效添加、配音及格式转换"}, {"name": "AI Model Lifecycle Management", "description": "人工智能模型训练与推理，涵盖深度学习与传统机器学习框架建模、模型优化与部署、实验跟踪、数据预处理及全流程生命周期管理"}]}
{"name": "Hyperliquid", "description": "1. Retrieve mid prices for all coins on Hyperliquid 2. Get historical candlestick data for any token 3. Access the L2 order book for any token", "tools": [{"name": "get_all_mids", "description": "Retrieve mid prices for all coins on Hyperliquid", "parameter": {}}, {"name": "get_candle_snapshot", "description": "Get historical candlestick data for any token", "parameter": {"coin": "(string) Token symbol", "interval": "(string) Time interval (e.g., '15m', '1h')", "startTime": "(number) Start time in milliseconds since epoch", "endTime": "(Optional, number) End time in milliseconds since epoch"}}, {"name": "get_l2_book", "description": "Access the L2 order book for any token", "parameter": {"symbol": "(string) Token symbol"}}], "domains": [{"name": "Financial Service", "description": "金融服务,包括支付处理、理财管理、云成本分析及财务报表生成"}]}
{"name": "Image Generation", "description": "Generate images using the Flux model based on text prompts", "tools": [{"name": "generate_image", "description": "Generates images using the Flux model based on text prompts.", "parameter": {"prompt": "(required) Text description of the image to generate", "seed": "(optional) Random seed for reproducible generation", "aspect_ratio": "(optional) Image aspect ratio (default: '1:1')", "output_format": "(optional) Output format - 'webp', 'jpg', or 'png' (default: 'webp')", "num_outputs": "(optional) Number of images to generate (1-4, default: 1)"}}], "domains": [{"name": "Image Processing", "description": "图像处理与生成,包括传统图片编辑、AI 图像生成、图表绘制与可视化"}]}
{"name": "InfluxDB", "description": "1. Write time-series data in line protocol format 2. Execute Flux queries 3. Create a new bucket 4. Create a new organization", "tools": [{"name": "write-data", "description": "Write time-series data in line protocol format", "parameter": {"org": "(string) The organization name", "bucket": "(string) The bucket name", "data": "(string) The data in line protocol format", "precision": "(Optional, string) The precision of the timestamps"}}, {"name": "query-data", "description": "Execute Flux queries", "parameter": {"org": "(string) The organization name", "query": "(string) The Flux query to execute"}}, {"name": "create-bucket", "description": "Create a new bucket", "parameter": {"name": "(string) The name of the new bucket", "orgID": "(string) The ID of the organization", "retentionPeriodSeconds": "(Optional, number) The retention period in seconds"}}, {"name": "create-org", "description": "Create a new organization", "parameter": {"name": "(string) The name of the new organization", "description": "(Optional, string) A description of the organization"}}], "domains": [{"name": "DataBase Management", "description": "数据库管理，涵盖数据库创建、查询、优化、备份及数据结构设计"}]}
{"name": "Inoyu", "description": "1.获取个人资料 2.更新个人资料属性 3.通过ID获取特定资料 4.搜索资料 5.创建Unomi范围", "tools": [{"name": "get_my_profile", "description": "Get your profile using environment variables. Automatically generates a session ID based on the current date.", "parameter": {"requireSegments": "(Optional, boolean) Include segment information", "requireScores": "(Optional, boolean) Include scoring information"}}, {"name": "update_my_profile", "description": "Update properties of your profile. Takes a properties object with key-value pairs to update.", "parameter": {"properties": "(object) Key-value pairs to update, supporting string, number, boolean, and null values"}}, {"name": "get_profile", "description": "Retrieve a specific profile by ID. Returns full profile data from Unomi.", "parameter": {"profileId": "(string) Required parameter to specify the profile ID"}}, {"name": "search_profiles", "description": "Search for profiles using a query string and optional limit/offset parameters. Searches across firstName, lastName, and email fields.", "parameter": {"query": "(string) Query string to search for profiles", "limit": "(Optional, number) Limit the number of results", "offset": "(Optional, number) Offset for pagination"}}, {"name": "create_scope", "description": "Create a new Unomi scope. Required for event tracking and profile updates.", "parameter": {"scope": "(string) Identifier for the new scope", "name": "(Optional, string) Name of the new scope", "description": "(Optional, string) Description of the new scope"}}], "domains": [{"name": "Data Management", "description": "数据管理，包括数据查询、提取、传输和配置管理"}]}
{"name": "Intercom", "description": "1. Retrieve conversations within a date range with content filtering 2. Find conversations for a specific customer 3. Retrieve tickets by status 4. Find tickets associated with a specific customer", "tools": [{"name": "list_conversations", "description": "Retrieves all conversations within a date range with content filtering.", "parameter": {"startDate": "(DD/MM/YYYY) Start date (required)", "endDate": "(DD/MM/YYYY) End date (required)", "keyword": "(string) Filter to include conversations with this text", "exclude": "(string) Filter to exclude conversations with this text"}}, {"name": "search_conversations_by_customer", "description": "Finds conversations for a specific customer.", "parameter": {"customerIdentifier": "(string) Customer email or Intercom ID (required)", "startDate": "(Optional, DD/MM/YYYY) Optional start date", "endDate": "(Optional, DD/MM/YYYY) Optional end date", "keywords": "(array) Optional keywords to filter by content"}}, {"name": "search_tickets_by_status", "description": "Retrieves tickets by their status.", "parameter": {"status": "(string) 'open', 'pending', or 'resolved' (required)", "startDate": "(Optional, DD/MM/YYYY) Optional start date", "endDate": "(Optional, DD/MM/YYYY) Optional end date"}}, {"name": "search_tickets_by_customer", "description": "Finds tickets associated with a specific customer.", "parameter": {"customerIdentifier": "(string) Customer email or Intercom ID (required)", "startDate": "(Optional, DD/MM/YYYY) Optional start date", "endDate": "(Optional, DD/MM/YYYY) Optional end date"}}], "domains": [{"name": "Customer Support Management", "description": "Customer support operations, including conversation retrieval, ticket management, and customer-specific queries"}]}
{"name": "iOS Simulator", "description": "Process natural language instructions and perform corresponding actions on the iOS simulator", "tools": [{"name": "processInstruction", "description": "Processes a natural language instruction and performs the corresponding action on the iOS simulator.", "parameter": {"instruction": "(string) The natural language command to execute."}}], "domains": [{"name": "Remote Desktop Control", "description": "远程桌面控制，包括屏幕捕获、输入模拟（键盘/鼠标）、应用程序控制及自动化操作"}]}
{"name": "iTerm MCP", "description": "1.在iTerm终端中写入命令并返回输出行数 2.从iTerm终端读取指定行数的输出 3.向iTerm终端发送控制字符", "tools": [{"name": "write_to_terminal", "description": "Writes to the active iTerm terminal, often used to run a command. Returns the number of lines of output produced by the command.", "parameter": {}}, {"name": "read_terminal_output", "description": "Reads the requested number of lines from the active iTerm terminal.", "parameter": {}}, {"name": "send_control_character", "description": "Sends a control character to the active iTerm terminal.", "parameter": {}}], "domains": [{"name": "Terminal Execution", "description": "终端命令行执行,用于系统命令操作、脚本运行及服务器资源管理"}]}
{"name": "JDBC", "description": "1.通过JDBC URL存储和检索数据库数据 2.检查运行中的JVM进程 3.从文件系统提供文件服务 4.使用JavaFX创建绘图画布 5.与Kubernetes集群交互 6.使用Docker/Podman/OCI兼容容器引擎 7.通过Wolfram Alpha LLM API进行优化的网络搜索", "tools": [{"name": "jdbc", "description": "A server for storing and retrieving data from a database via a JDBC URL.", "parameter": {}}, {"name": "jvminsight", "description": "A server for inspecting a running JVM process.", "parameter": {}}, {"name": "filesystem", "description": "A server for serving files from a file system.", "parameter": {"path1": "(string) Path to the first directory to serve", "path2": "(Optional, string) Path to an additional directory to serve"}}, {"name": "jfx", "description": "A server that exposes a canvas for making drawings using JavaFX.", "parameter": {}}, {"name": "kubernetes", "description": "A server for interacting with a Kubernetes cluster.", "parameter": {}}, {"name": "containers", "description": "A server for working with Docker/Podman/OCI compatible container engines.", "parameter": {}}, {"name": "wolfram", "description": "A server for performing web searches optimized for use by a large language model through the Wolfram Alpha LLM API.", "parameter": {}}], "domains": [{"name": "DataBase Management", "description": "数据库管理，涵盖数据库创建、查询、优化、备份及数据结构设计"}, {"name": "Application Monitoring & Management", "description": "Application performance monitoring and management, including error tracking, deployment management, performance metrics analysis, and team collaboration"}, {"name": "File System", "description": "文件系统管理,包括本地 / 云端文件的存储、读取、修改、权限控制及分类检索"}, {"name": "Image Processing", "description": "图像处理与生成,包括传统图片编辑、AI 图像生成、图表绘制与可视化"}, {"name": "Virtual Environment & Container Manager", "description": "虚拟与容器环境管理，支持开发环境如（如Python虚拟环境、Node.js运行时）、容器化环境构建（Docker）"}, {"name": "Web Search", "description": "网页信息检索,通过关键词查询公开网页内容,支持多类型信息主动获取"}]}
{"name": "JSON", "description": "1. Query JSON data using JSONPath syntax with extended operations 2. Filter JSON data using conditions", "tools": [{"name": "query", "description": "Query JSON data using JSONPath syntax with extended operations", "parameter": {"url": "(string) URL of the JSON data source", "jsonPath": "(string) JSONPath expression with optional operations"}}, {"name": "filter", "description": "Filter JSON data using conditions", "parameter": {"url": "(string) URL of the JSON data source", "jsonPath": "(string) Base JSONPath expression", "condition": "(string) Filter condition"}}], "domains": [{"name": "Data Management", "description": "数据管理，包括数据查询、提取、传输和配置管理"}]}
{"name": "KiCad MCP", "description": "1. Launch KiCad with a specific project 2. Run design rule checks on a specified PCB project", "tools": [{"name": "open_project", "description": "Launches KiCad with a specific project.", "parameter": {"project_path": "(string) Path to the KiCad project file (.kicad_pro)"}}, {"name": "run_drc", "description": "Runs design rule checks on a specified PCB project and compares results.", "parameter": {"project_path": "(string) Path to the KiCad project file (.kicad_pro)", "compare_to": "(Optional, string) Path to the previous DRC report for comparison"}}], "domains": [{"name": "Game Development", "description": "游戏开发工具集，包括游戏引擎操作、场景管理、资源加载与调试功能"}]}
{"name": "Keycloak MCP", "description": "1.在指定领域创建新用户 2.从指定领域删除用户 3.列出所有可用领域 4.列出指定领域的所有用户", "tools": [{"name": "create-user", "description": "Creates a new user in a specified realm.", "parameter": {"realm": "(string) The realm name", "username": "(string) Username for the new user", "email": "(string) Email address for the user", "firstName": "(string) User's first name", "lastName": "(string) User's last name"}}, {"name": "delete-user", "description": "Deletes a user from a specified realm.", "parameter": {"realm": "(string) The realm name", "userId": "(string) The ID of the user to delete"}}, {"name": "list-realms", "description": "Lists all available realms.", "parameter": {}}, {"name": "list-users", "description": "Lists all users in a specified realm.", "parameter": {"realm": "(string) The realm name"}}], "domains": [{"name": "Server Management", "description": "Server operations and user management, including server lifecycle control and user administration"}]}
{"name": "Kong Konnect", "description": "Kong API Gateway operations, including: querying API requests, analyzing consumer requests, listing services/routes/consumers/plugins/control planes, and checking control plane group memberships", "tools": [{"name": "Query API Requests", "description": "Query and analyze Kong API Gateway requests with customizable filters.", "parameter": {"timeRange": "(string) Time range for data retrieval (15M, 1H, 6H, 12H, 24H, 7D)", "statusCodes": "(array) Filter by specific HTTP status codes", "excludeStatusCodes": "(array) Exclude specific HTTP status codes", "httpMethods": "(array) Filter by HTTP methods", "consumerIds": "(array) Filter by consumer IDs", "serviceIds": "(array) Filter by service IDs", "routeIds": "(array) Filter by route IDs", "maxResults": "(number) Maximum number of results to return"}}, {"name": "Get Consumer Requests", "description": "Analyze API requests made by a specific consumer.", "parameter": {"consumerId": "(string) ID of the consumer to analyze", "timeRange": "(string) Time range for data retrieval", "successOnly": "(boolean) Show only successful (2xx) requests", "failureOnly": "(boolean) Show only failed (non-2xx) requests", "maxResults": "(number) Maximum number of results to return"}}, {"name": "List Services", "description": "List all services associated with a control plane.", "parameter": {"controlPlaneId": "(string) ID of the control plane", "size": "(number) Number of services to return", "offset": "(string) Pagination offset token"}}, {"name": "List Routes", "description": "List all routes associated with a control plane.", "parameter": {"controlPlaneId": "(string) ID of the control plane", "size": "(number) Number of routes to return", "offset": "(string) Pagination offset token"}}, {"name": "List Consumers", "description": "List all consumers associated with a control plane.", "parameter": {"controlPlaneId": "(string) ID of the control plane", "size": "(number) Number of consumers to return", "offset": "(string) Pagination offset token"}}, {"name": "List Plugins", "description": "List all plugins associated with a control plane.", "parameter": {"controlPlaneId": "(string) ID of the control plane", "size": "(number) Number of plugins to return", "offset": "(string) Pagination offset token"}}, {"name": "List Control Planes", "description": "List all control planes in your organization.", "parameter": {"pageSize": "(number) Number of control planes per page", "pageNumber": "(number) Page number to retrieve", "filterName": "(string) Filter control planes by name", "filterClusterType": "(string) Filter by cluster type", "filterCloudGateway": "(boolean) Filter by cloud gateway capability", "labels": "(array) Filter by labels", "sort": "(string) Sort field and direction"}}, {"name": "Get Control Plane", "description": "Get detailed information about a specific control plane.", "parameter": {"controlPlaneId": "(string) ID of the control plane to retrieve"}}, {"name": "List Control Plane Group Memberships", "description": "List all control planes that are members of a specific group.", "parameter": {"groupId": "(string) Control plane group ID", "pageSize": "(number) Number of members to return per page", "pageAfter": "(string) Cursor for pagination"}}, {"name": "Check Control Plane Group Membership", "description": "Check if a control plane is a member of any group.", "parameter": {"controlPlaneId": "(string) Control plane ID to check"}}], "domains": [{"name": "API Development & Testing", "description": "API开发与测试，包括API规范验证、接口测试、文档生成及SDK生成"}]}
{"name": "Kubernetes and OpenShift", "description": "Kubernetes集群管理，包括：配置查看、事件列表、命名空间管理、Pod操作（创建/删除/执行命令/获取日志）、资源管理（创建/更新/删除/获取/列表）", "tools": [{"name": "configuration_view", "description": "Get the current Kubernetes configuration content as a kubeconfig YAML", "parameter": {"minified": "(Optional, boolean) Return a minified version of the configuration. Default is true."}}, {"name": "events_list", "description": "List all the Kubernetes events in the current cluster from all namespaces", "parameter": {"namespace": "(Optional, string) Namespace to retrieve the events from. If not provided, will list events from all namespaces."}}, {"name": "namespaces_list", "description": "List all the Kubernetes namespaces in the current cluster", "parameter": {}}, {"name": "pods_delete", "description": "Delete a Kubernetes Pod in the current or provided namespace with the provided name", "parameter": {"name": "(Required, string) Name of the Pod to delete", "namespace": "(Required, string) Namespace to delete the Pod from"}}, {"name": "pods_exec", "description": "Execute a command in a Kubernetes Pod in the current or provided namespace with the provided name and command", "parameter": {"command": "(Required, string[]) Command to execute in the Pod container. First item is the command, rest are arguments.", "name": "(Required, string) Name of the Pod", "namespace": "(Required, string) Namespace of the Pod", "container": "(Optional, string) Name of the Pod container to get logs from"}}, {"name": "pods_get", "description": "Get a Kubernetes Pod in the current or provided namespace with the provided name", "parameter": {"name": "(Required, string) Name of the Pod", "namespace": "(Required, string) Namespace to get the Pod from"}}, {"name": "pods_list", "description": "List all the Kubernetes pods in the current cluster from all namespaces", "parameter": {}}, {"name": "pods_list_in_namespace", "description": "List all the Kubernetes pods in the specified namespace in the current cluster", "parameter": {"namespace": "(Required, string) Namespace to list pods from"}}, {"name": "pods_log", "description": "Get the logs of a Kubernetes Pod in the current or provided namespace with the provided name", "parameter": {"name": "(Required, string) Name of the Pod to get logs from", "namespace": "(Required, string) Namespace to get the Pod logs from", "container": "(Optional, string) Name of the Pod container to get logs from"}}, {"name": "pods_run", "description": "Run a Kubernetes Pod in the current or provided namespace with the provided container image and optional name", "parameter": {"image": "(Required, string) Container Image to run in the Pod", "namespace": "(Required, string) Namespace to run the Pod in", "name": "(Optional, string) Name of the Pod (random name if not provided)", "port": "(Optional, number) TCP/IP port to expose from the Pod container. No port exposed if not provided."}}, {"name": "projects_list", "description": "List all the OpenShift projects in the current cluster", "parameter": {}}, {"name": "resources_create_or_update", "description": "Create or update a Kubernetes resource in the current cluster by providing a YAML or JSON representation of the resource", "parameter": {"resource": "(Required, string) A JSON or YAML containing a representation of the Kubernetes resource. Should include top-level fields such as apiVersion, kind, metadata, and spec."}}, {"name": "resources_delete", "description": "Delete a Kubernetes resource in the current cluster", "parameter": {"apiVersion": "(Required, string) apiVersion of the resource (e.g., v1, apps/v1, networking.k8s.io/v1)", "kind": "(Required, string) kind of the resource (e.g., Pod, Service, Deployment, Ingress)", "name": "(Required, string) Name of the resource", "namespace": "(Optional, string) Namespace to delete the namespaced resource from. Ignored for cluster-scoped resources. Uses configured namespace if not provided."}}, {"name": "resources_get", "description": "Get a Kubernetes resource in the current cluster", "parameter": {"apiVersion": "(Required, string) apiVersion of the resource (e.g., v1, apps/v1, networking.k8s.io/v1)", "kind": "(Required, string) kind of the resource (e.g., Pod, Service, Deployment, Ingress)", "name": "(Required, string) Name of the resource", "namespace": "(Optional, string) Namespace to retrieve the namespaced resource from. Ignored for cluster-scoped resources. Uses configured namespace if not provided."}}, {"name": "resources_list", "description": "List Kubernetes resources and objects in the current cluster", "parameter": {"apiVersion": "(Required, string) apiVersion of the resources (e.g., v1, apps/v1, networking.k8s.io/v1)", "kind": "(Required, string) kind of the resources (e.g., Pod, Service, Deployment, Ingress)", "namespace": "(Optional, string) Namespace to retrieve the namespaced resources from. Ignored for cluster-scoped resources. Lists resources from all namespaces if not provided."}}], "domains": [{"name": "Server Management", "description": "Server operations and user management, including server lifecycle control and user administration"}, {"name": "DevOps Pipeline Management", "description": "DevOps流水线管理，包括持续集成(CI)构建(如Jenkins/GitLab CI)、工作流定义及持续部署(CD)自动化，支持跨平台应用交付(如Kubernetes集群部署、云平台发布)等"}]}
{"name": "Langflow-DOC-QA-SERVER", "description": "Query the document Q&A system", "tools": [{"name": "query_docs", "description": "Query the document Q&A system", "parameter": {"query": "(string) The query string to be sent to the document Q&A system"}}], "domains": [{"name": "Content Management", "description": "内容管理，包括博客文章的创建、更新、检索及媒体上传"}]}
{"name": "Lightdash", "description": "Lightdash organization operations, including: listing projects, getting project details, listing spaces, listing charts, listing dashboards, getting custom metrics, getting catalog, getting metrics catalog, getting charts as code, and getting dashboards as code", "tools": [{"name": "list_projects", "description": "List all projects in the Lightdash organization", "parameter": {}}, {"name": "get_project", "description": "Get details of a specific project", "parameter": {}}, {"name": "list_spaces", "description": "List all spaces in a project", "parameter": {}}, {"name": "list_charts", "description": "List all charts in a project", "parameter": {}}, {"name": "list_dashboards", "description": "List all dashboards in a project", "parameter": {}}, {"name": "get_custom_metrics", "description": "Get custom metrics for a project", "parameter": {}}, {"name": "get_catalog", "description": "Get catalog for a project", "parameter": {}}, {"name": "get_metrics_catalog", "description": "Get metrics catalog for a project", "parameter": {}}, {"name": "get_charts_as_code", "description": "Get charts as code for a project", "parameter": {}}, {"name": "get_dashboards_as_code", "description": "Get dashboards as code for a project", "parameter": {}}], "domains": [{"name": "Workspace Management", "description": "Workspace operations and management, including workspace creation, SQL execution, and job scheduling"}]}
{"name": "lsp-mcp", "description": "Language Server Protocol (LSP) operations, including: hover information retrieval, code completion suggestions, code actions, document opening/closing, diagnostics retrieval, LSP server start/restart, and log level configuration", "tools": [{"name": "get_info_on_location", "description": "Gets hover information at a specific location in a file.", "parameter": {"file_path": "(string) Path to the file", "language_id": "(string) The programming language the file is written in (e.g., 'haskell')", "line": "(number) Line number", "column": "(number) Column position"}}, {"name": "get_completions", "description": "Gets completion suggestions at a specific location in a file.", "parameter": {"file_path": "(string) Path to the file", "language_id": "(string) The programming language the file is written in (e.g., 'haskell')", "line": "(number) Line number", "column": "(number) Column position"}}, {"name": "get_code_actions", "description": "Gets code actions for a specific range in a file.", "parameter": {"file_path": "(string) Path to the file", "language_id": "(string) The programming language the file is written in (e.g., 'haskell')", "start_line": "(number) Start line number", "start_column": "(number) Start column position", "end_line": "(number) End line number", "end_column": "(number) End column position"}}, {"name": "open_document", "description": "Opens a file in the LSP server for analysis.", "parameter": {"file_path": "(string) Path to the file to open", "language_id": "(string) The programming language the file is written in (e.g., 'haskell')"}}, {"name": "close_document", "description": "Closes a file in the LSP server when you're done working with it.", "parameter": {"file_path": "(string) Path to the file to close"}}, {"name": "get_diagnostics", "description": "Gets diagnostic messages (errors, warnings) for one or all open files.", "parameter": {"file_path": "(Optional, string) Path to the file to get diagnostics for. If not provided, returns diagnostics for all open files."}}, {"name": "start_lsp", "description": "Starts the LSP server with a specified root directory. This must be called before using any other LSP-related tools.", "parameter": {"root_dir": "(string) The root directory for the LSP server (absolute path recommended)"}}, {"name": "restart_lsp_server", "description": "Restarts the LSP server process without restarting the MCP server. This is useful for recovering from LSP server issues or for applying changes to the LSP server configuration.", "parameter": {"root_dir": "(Optional, string) The root directory for the LSP server. If provided, the server will be initialized with this directory after restart."}}, {"name": "set_log_level", "description": "Sets the server's logging level to control verbosity of log messages.", "parameter": {"level": "(string) The logging level to set. One of: 'debug', 'info', 'notice', 'warning', 'error', 'critical', 'alert', 'emergency'."}}], "domains": [{"name": "Code Toolkit", "description": "代码工具集,版本控制(如git命令执行)、代码生成、代码执行、测试等"}]}
{"name": "Linear", "description": "Linear issue management, including: creating, updating, searching, retrieving user-assigned issues, and adding comments", "tools": [{"name": "linear_create_issue", "description": "Create a new Linear issue.", "parameter": {"title": "(string) Issue title", "teamId": "(string) Team ID to create issue in", "description": "(Optional, string) Issue description (markdown supported)", "priority": "(Optional, number, 0-4) Priority level (1=urgent, 4=low)", "status": "(Optional, string) Initial status name"}}, {"name": "linear_update_issue", "description": "Update an existing Linear issue.", "parameter": {"id": "(string) Issue ID to update", "title": "(Optional, string) New title", "description": "(Optional, string) New description", "priority": "(Optional, number, 0-4) New priority", "status": "(Optional, string) New status name"}}, {"name": "linear_search_issues", "description": "Search Linear issues with flexible filtering.", "parameter": {"query": "(Optional, string) Text to search in title/description", "teamId": "(Optional, string) Filter by team", "status": "(Optional, string) Filter by status", "assigneeId": "(Optional, string) Filter by assignee", "labels": "(Optional, string[]) Filter by labels", "priority": "(Optional, number) Filter by priority", "limit": "(Optional, number, default: 10) Max results"}}, {"name": "linear_get_user_issues", "description": "Get issues assigned to a user.", "parameter": {"userId": "(Optional, string) User ID (omit for authenticated user)", "includeArchived": "(Optional, boolean) Include archived issues", "limit": "(Optional, number, default: 50) Max results"}}, {"name": "linear_add_comment", "description": "Add a comment to a Linear issue.", "parameter": {"issueId": "(string) Issue ID to comment on", "body": "(string) Comment text (markdown supported)", "createAsUser": "(Optional, string) Custom username", "displayIconUrl": "(Optional, string) Custom avatar URL"}}], "domains": [{"name": "Time & Task Management", "description": "时间与任务管理,涵盖日历日程、待办事项、项目进度跟踪及会议调度"}]}
{"name": "Linear (Go)", "description": "Linear issue management, including: issue creation, update, search, retrieval by user/ID, comment addition, and team retrieval", "tools": [{"name": "linear_create_issue", "description": "Creates a new Linear issue with specified details. Supports creating sub-issues and assigning labels.", "parameter": {"title": "(required) Issue title", "team": "(required) Team identifier (key, UUID or name)", "description": "Issue description", "priority": "Priority (0-4)", "status": "Issue status", "parentIssue": "(Optional) Optional parent issue ID to create a sub-issue", "labels": "(Optional) Optional comma-separated list of label IDs to assign"}}, {"name": "linear_update_issue", "description": "Updates an existing Linear issue's properties.", "parameter": {"id": "(required) Issue ID", "title": "New title", "description": "New description", "priority": "New priority (0-4)", "status": "New status"}}, {"name": "linear_search_issues", "description": "Searches Linear issues using flexible criteria.", "parameter": {"query": "(Optional) Optional text to search in title and description", "teamId": "Filter by team ID", "status": "Filter by status name (e.g., 'In Progress', 'Done')", "assigneeId": "Filter by assignee's user ID", "labels": "Filter by label names (comma-separated)", "priority": "Filter by priority (1=urgent, 2=high, 3=normal, 4=low)", "estimate": "Filter by estimate points", "includeArchived": "Include archived issues in results (default: false)", "limit": "Max results to return (default: 10)"}}, {"name": "linear_get_user_issues", "description": "Retrieves issues assigned to a specific user or the authenticated user.", "parameter": {"userId": "(Optional) Optional user ID. If not provided, returns authenticated user's issues", "includeArchived": "Include archived issues in results", "limit": "Maximum number of issues to return (default: 50)"}}, {"name": "linear_get_issue", "description": "Retrieves a single Linear issue by its ID.", "parameter": {"issueId": "(required) ID of the issue to retrieve"}}, {"name": "linear_add_comment", "description": "Adds a comment to an existing Linear issue.", "parameter": {"issueId": "(required) ID of the issue to comment on", "body": "(required) Comment text in markdown format", "createAsUser": "(Optional) Optional custom username to show for the comment", "displayIconUrl": "(Optional) Optional avatar URL for the comment"}}, {"name": "linear_get_teams", "description": "Retrieves Linear teams with an optional name filter.", "parameter": {"name": "(Optional) Optional team name filter. Returns teams whose names contain this string."}}], "domains": [{"name": "Time & Task Management", "description": "时间与任务管理,涵盖日历日程、待办事项、项目进度跟踪及会议调度"}]}
{"name": "llm-context", "description": "1. Initialize project configuration 2. Switch rules 3. Select files for inclusion and outline generation 4. Generate and copy context 5. Generate project instructions for LLMs 6. Process LLM file requests 7. List modified files 8. Generate outlines for code files 9. Extract code implementations requested by LLMs", "tools": [{"name": "lc-init", "description": "Initialize project configuration", "parameter": {}}, {"name": "lc-set-rule", "description": "Switch rules", "parameter": {"n": "(integer) The rule number to switch to"}}, {"name": "lc-sel-files", "description": "Select files for inclusion", "parameter": {}}, {"name": "lc-sel-outlines", "description": "Select files for outline generation", "parameter": {}}, {"name": "lc-context", "description": "Generate and copy context", "parameter": {"-p": "(Optional, flag) Include prompt instructions", "-u": "(Optional, flag) Include user notes", "-f FILE": "(Optional, string) Write to output file"}}, {"name": "lc-prompt", "description": "Generate project instructions for LLMs", "parameter": {}}, {"name": "lc-clip-files", "description": "Process LLM file requests", "parameter": {}}, {"name": "lc-changed", "description": "List files modified since last context generation", "parameter": {}}, {"name": "lc-outlines", "description": "Generate outlines for code files", "parameter": {}}, {"name": "lc-clip-implementations", "description": "Extract code implementations requested by LLMs (doesn't support C/C++)", "parameter": {}}], "domains": [{"name": "Code Toolkit", "description": "代码工具集,版本控制(如git命令执行)、代码生成、代码执行、测试等"}]}
{"name": "lucene-mcp-server", "description": "1.查询服务器状态 2.在Lucene索引中插入或更新文档 3.查询Lucene索引 4.从Lucene索引中删除文档 5.列出Lucene索引中的文档", "tools": [{"name": "GET /mcp/v1/status", "description": "Returns the status of the server.", "parameter": {}}, {"name": "POST /mcp/v1/upsert", "description": "Upserts (inserts or updates) one or more documents in the Lucene index.", "parameter": {"documents": "(array) An array of documents to upsert. Each document has an 'id', 'text', and optional 'metadata'."}}, {"name": "POST /mcp/v1/query", "description": "Queries the Lucene index.", "parameter": {"queries": "(array) An array of query objects. Each query object contains a 'query' string, an optional 'top_k' integer, and an optional 'filter' map."}}, {"name": "POST /mcp/v1/delete", "description": "Deletes documents from the Lucene index.", "parameter": {"ids": "(array) An array of document IDs to delete."}}, {"name": "GET /mcp/v1/list", "description": "Lists documents from the Lucene index.", "parameter": {"ids": "(array) An array of document IDs to list."}}], "domains": [{"name": "Data Management", "description": "数据管理，包括数据查询、提取、传输和配置管理"}]}
{"name": "mac-messages-mcp", "description": "1. Retrieve recent messages from macOS Messages app 2. Send new messages through iMessage", "tools": [{"name": "get_recent_messages", "description": "Retrieves recent messages from the macOS Messages app.", "parameter": {"hours": "(int) Number of hours to look back for recent messages"}}, {"name": "send_message", "description": "Sends a new message through iMessage.", "parameter": {"recipient": "(str) Phone number or email of the recipient", "message": "(str) Content of the message to be sent"}}], "domains": [{"name": "Social Media Management", "description": "社交媒体账号运营,涵盖内容发布、粉丝互动、多平台批量管理与舆情分析"}]}
{"name": "MariaDB", "description": "Execute read-only operations against MariaDB", "tools": [{"name": "query_database", "description": "Execute read-only operations against MariaDB", "parameter": {}}], "domains": [{"name": "DataBase Management", "description": "数据库管理，涵盖数据库创建、查询、优化、备份及数据结构设计"}]}
{"name": "MCP Create", "description": "1.从模板创建MCP服务器 2.在服务器上执行工具 3.获取服务器工具列表 4.删除服务器 5.获取运行中的服务器列表", "tools": [{"name": "create-server-from-template", "description": "Create MCP server from template", "parameter": {"language": "(string) The programming language for the server template"}}, {"name": "execute-tool", "description": "Execute tool on server", "parameter": {"serverId": "(string) The ID of the server", "toolName": "(string) The name of the tool to execute", "args": "(object) Arguments for the tool"}}, {"name": "get-server-tools", "description": "Get list of server tools", "parameter": {"serverId": "(string) The ID of the server"}}, {"name": "delete-server", "description": "Delete server", "parameter": {"serverId": "(string) The ID of the server to delete"}}, {"name": "list-servers", "description": "Get list of running servers", "parameter": {}}], "domains": [{"name": "Server Management", "description": "Server operations and user management, including server lifecycle control and user administration"}]}
{"name": "mcp-k8s-go", "description": "Kubernetes资源管理，包括：上下文列表、命名空间列表、资源检索（如pods/services/deployments）、节点列表、事件获取、pod日志检索及pod内命令执行", "tools": [{"name": "List Kubernetes contexts", "description": "Lists available Kubernetes contexts.", "parameter": {}}, {"name": "List Kubernetes namespaces", "description": "Lists available Kubernetes namespaces.", "parameter": {}}, {"name": "List and get any Kubernetes resources", "description": "Lists and retrieves any Kubernetes resources, including custom mappings for pods, services, and deployments.", "parameter": {}}, {"name": "List Kubernetes nodes", "description": "Lists available Kubernetes nodes.", "parameter": {}}, {"name": "List Kubernetes pods", "description": "Lists available Kubernetes pods.", "parameter": {}}, {"name": "Get Kubernetes events", "description": "Retrieves Kubernetes events.", "parameter": {}}, {"name": "Get Kubernetes pod logs", "description": "Retrieves logs from a specified Kubernetes pod.", "parameter": {}}, {"name": "Run command in Kubernetes pod", "description": "Executes a command within a specified Kubernetes pod.", "parameter": {}}], "domains": [{"name": "DevOps Pipeline Management", "description": "DevOps流水线管理，包括持续集成(CI)构建(如Jenkins/GitLab CI)、工作流定义及持续部署(CD)自动化，支持跨平台应用交付(如Kubernetes集群部署、云平台发布)等"}]}
{"name": "mcp-local-rag", "description": "Perform web search to fetch latest information for enhancing model responses", "tools": [{"name": "rag_search", "description": "Performs a web search to fetch the latest information and provides it to the model to enhance its responses.", "parameter": {}}], "domains": [{"name": "Web Search", "description": "网页信息检索,通过关键词查询公开网页内容,支持多类型信息主动获取"}]}
{"name": "mcp-proxy", "description": "1.运行代理服务器从stdio连接到远程SSE服务器 2.运行代理服务器暴露SSE服务器连接到本地stdio服务器", "tools": [{"name": "stdio to SSE", "description": "Runs a proxy server from stdio that connects to a remote SSE server, allowing clients to communicate with the remote server over SSE.", "parameter": {"command_or_url": "(string) The MCP server SSE endpoint to connect to", "--headers": "(Optional, string) Headers to use for the MCP server SSE connection"}}, {"name": "SSE to stdio", "description": "Runs a proxy server exposing a SSE server that connects to a local stdio server, allowing remote connections to the local stdio server.", "parameter": {"command_or_url": "(string) The command to spawn the MCP stdio server", "--sse-port": "(Optional, int) The SSE server port to listen on", "--sse-host": "(Optional, string) The host IP address that the SSE server will listen on", "--env": "(Optional, string) Additional environment variables to pass to the MCP stdio server", "--pass-environment": "(Optional, flag) Pass through all environment variables when spawning the server", "--allow-origin": "(Optional, string) Allowed origins for the SSE server"}}], "domains": [{"name": "Server Management", "description": "Server operations and user management, including server lifecycle control and user administration"}]}
{"name": "mem0-mcp", "description": "1.存储代码片段、实现细节和编码模式 2.检索所有存储的编码偏好 3.语义搜索存储的编码偏好", "tools": [{"name": "add_coding_preference", "description": "Store code snippets, implementation details, and coding patterns with comprehensive context.", "parameter": {"code_snippet": "(string) The complete code snippet with dependencies.", "language_version": "(string) The language or framework version used.", "setup_instructions": "(string) Instructions for setting up the environment.", "documentation": "(string) Additional documentation and comments.", "example_usage": "(string) Example usage of the code snippet.", "best_practices": "(string) Best practices associated with the code."}}, {"name": "get_all_coding_preferences", "description": "Retrieve all stored coding preferences for analysis and review.", "parameter": {}}, {"name": "search_coding_preferences", "description": "Semantically search through stored coding preferences to find relevant information.", "parameter": {"query": "(string) The search query to find relevant coding preferences."}}], "domains": [{"name": "Code Toolkit", "description": "代码工具集,版本控制(如git命令执行)、代码生成、代码执行、测试等"}]}
{"name": "Membase", "description": "1.获取当前会话ID 2.切换到不同会话 3.保存消息到当前会话 4.获取当前会话的最后n条消息", "tools": [{"name": "get_conversation_id", "description": "Get the current conversation id.", "parameter": {}}, {"name": "switch_conversation", "description": "Switch to a different conversation.", "parameter": {}}, {"name": "save_message", "description": "Save a message/memory into the current conversation.", "parameter": {}}, {"name": "get_messages", "description": "Get the last n messages from the current conversation.", "parameter": {}}], "domains": [{"name": "Customer Support Management", "description": "Customer support operations, including conversation retrieval, ticket management, and customer-specific queries"}]}
{"name": "Markdownify", "description": "Convert various file types (YouTube videos, PDF, Bing search results, web pages, images, audio, DOCX, XLSX, PPTX) to Markdown format and retrieve existing Markdown files", "tools": [{"name": "youtube-to-markdown", "description": "Convert YouTube videos to Markdown", "parameter": {}}, {"name": "pdf-to-markdown", "description": "Convert PDF files to Markdown", "parameter": {}}, {"name": "bing-search-to-markdown", "description": "Convert Bing search results to Markdown", "parameter": {}}, {"name": "webpage-to-markdown", "description": "Convert web pages to Markdown", "parameter": {}}, {"name": "image-to-markdown", "description": "Convert images to Markdown with metadata", "parameter": {}}, {"name": "audio-to-markdown", "description": "Convert audio files to Markdown with transcription", "parameter": {}}, {"name": "docx-to-markdown", "description": "Convert DOCX files to Markdown", "parameter": {}}, {"name": "xlsx-to-markdown", "description": "Convert XLSX files to Markdown", "parameter": {}}, {"name": "pptx-to-markdown", "description": "Convert PPTX files to Markdown", "parameter": {}}, {"name": "get-markdown-file", "description": "Retrieve an existing Markdown file. File extension must end with: *.md, *.markdown.", "parameter": {"MD_SHARE_DIR": "(Optional, string) Restrict the directory from which files can be retrieved."}}], "domains": [{"name": "Document Format Conversion", "description": "文档格式转换,实现不同文档类型（如 PDF/Word/Markdown）的兼容性转换"}]}
{"name": "MongoDB Lens", "description": "MongoDB数据库操作,包括:连接管理、数据聚合、查询优化、模式分析、批量操作、缓存清理、文档计数、集合/数据库/索引/用户创建与删除、查询执行计划分析、数据导出、地理空间查询、统计获取、GridFS文件管理、文档插入/更新/删除、实时变更监控等", "tools": [{"name": "add-connection-alias", "description": "Add a new MongoDB connection alias", "parameter": {}}, {"name": "aggregate-data", "description": "Execute aggregation pipelines", "parameter": {}}, {"name": "analyze-query-patterns", "description": "Analyze live queries and suggest optimizations", "parameter": {}}, {"name": "analyze-schema", "description": "Automatically infer collection schemas", "parameter": {}}, {"name": "bulk-operations", "description": "Perform multiple operations efficiently (requires confirmation for destructive operations)", "parameter": {}}, {"name": "clear-cache", "description": "Clear memory caches to ensure fresh data", "parameter": {}}, {"name": "collation-query", "description": "Find documents with language-specific collation rules", "parameter": {}}, {"name": "compare-schemas", "description": "Compare schemas between two collections", "parameter": {}}, {"name": "connect-mongodb", "description": "Connect to a different MongoDB URI", "parameter": {}}, {"name": "connect-original", "description": "Connect back to the original MongoDB URI used at startup", "parameter": {}}, {"name": "count-documents", "description": "Count documents matching specified criteria", "parameter": {}}, {"name": "create-collection", "description": "Create new collections with custom options", "parameter": {}}, {"name": "create-database", "description": "Create a new database with option to switch to it", "parameter": {}}, {"name": "create-index", "description": "Create new indexes for performance optimization", "parameter": {}}, {"name": "create-timeseries", "description": "Create time series collections for temporal data", "parameter": {}}, {"name": "create-user", "description": "Create new database users with specific roles", "parameter": {}}, {"name": "current-database", "description": "Show the current database context", "parameter": {}}, {"name": "delete-document", "description": "Delete documents matching specified criteria (requires confirmation)", "parameter": {}}, {"name": "distinct-values", "description": "Extract unique values for any field", "parameter": {}}, {"name": "drop-collection", "description": "Remove collections from the database (requires confirmation)", "parameter": {}}, {"name": "drop-database", "description": "Drop a database (requires confirmation)", "parameter": {}}, {"name": "drop-index", "description": "Remove indexes from collections (requires confirmation)", "parameter": {}}, {"name": "drop-user", "description": "Remove database users (requires confirmation)", "parameter": {}}, {"name": "explain-query", "description": "Analyze query execution plans", "parameter": {}}, {"name": "export-data", "description": "Export query results in JSON or CSV format", "parameter": {}}, {"name": "find-documents", "description": "Run queries with filters, projections, and sorting", "parameter": {}}, {"name": "generate-schema-validator", "description": "Generate JSON Schema validators", "parameter": {}}, {"name": "geo-query", "description": "Perform geospatial queries with various operators", "parameter": {}}, {"name": "get-stats", "description": "Retrieve database or collection statistics", "parameter": {}}, {"name": "gridfs-operation", "description": "Manage large files with GridFS buckets", "parameter": {}}, {"name": "insert-document", "description": "Insert one or more documents into collections", "parameter": {}}, {"name": "list-collections", "description": "Explore collections in the current database", "parameter": {}}, {"name": "list-connections", "description": "View all available MongoDB connection aliases", "parameter": {}}, {"name": "list-databases", "description": "View all accessible databases", "parameter": {}}, {"name": "rename-collection", "description": "Rename existing collections (requires confirmation when dropping targets)", "parameter": {}}, {"name": "shard-status", "description": "View sharding configuration for databases and collections", "parameter": {}}, {"name": "text-search", "description": "Perform full-text search across text-indexed fields", "parameter": {}}, {"name": "transaction", "description": "Execute multiple operations in a single ACID transaction", "parameter": {}}, {"name": "update-document", "description": "Update documents matching specified criteria", "parameter": {}}, {"name": "use-database", "description": "Switch to a specific database context", "parameter": {}}, {"name": "validate-collection", "description": "Check for data inconsistencies", "parameter": {}}, {"name": "watch-changes", "description": "Monitor real-time changes to collections", "parameter": {}}], "domains": [{"name": "DataBase Management", "description": "数据库管理，涵盖数据库创建、查询、优化、备份及数据结构设计"}]}
{"name": "Monday.com", "description": "Monday.com平台操作，包括：创建/删除/归档项目、创建/移动项目到组、获取板组/项目/子项目列表、创建/获取文档内容、添加文档块、创建/获取更新评论", "tools": [{"name": "monday-create-item", "description": "Creates a new item or sub-item in a Monday.com board", "parameter": {}}, {"name": "monday-get-board-groups", "description": "Retrieves all groups from a specified Monday.com board", "parameter": {}}, {"name": "monday-create-update", "description": "Creates a comment/update on a Monday.com item", "parameter": {}}, {"name": "monday-list-boards", "description": "Lists all available Monday.com boards", "parameter": {}}, {"name": "monday-list-items-in-groups", "description": "Lists all items in specified groups of a Monday.com board", "parameter": {}}, {"name": "monday-list-subitems-in-items", "description": "Lists all sub-items for given Monday.com items", "parameter": {}}, {"name": "monday-create-board", "description": "Creates a new Monday.com board", "parameter": {}}, {"name": "monday-create-board-group", "description": "Creates a new group in a Monday.com board", "parameter": {}}, {"name": "monday-move-item-to-group", "description": "Moves a Monday.com item to a different group", "parameter": {}}, {"name": "monday-delete-item", "description": "Deletes a Monday.com item", "parameter": {}}, {"name": "monday-archive-item", "description": "Archives a Monday.com item", "parameter": {}}, {"name": "monday-get-item-updates", "description": "Retrieves updates/comments for a specific item", "parameter": {}}, {"name": "monday-get-docs", "description": "Lists documents in Monday.com, optionally filtered by folder", "parameter": {}}, {"name": "monday-get-doc-content", "description": "Retrieves the content of a specific document", "parameter": {}}, {"name": "monday-create-doc", "description": "Creates a new document in Monday.com", "parameter": {}}, {"name": "monday-add-doc-block", "description": "Adds a block to an existing document", "parameter": {}}], "domains": [{"name": "Business Management", "description": "业务管理，包括业务信息获取、位置管理、营业时间更新及媒体内容管理"}]}
{"name": "Multicluster-MCP-Sever", "description": "1.从中心集群检索资源 2.从托管集群检索资源 3.使用指定ClusterRole连接到托管集群 4.通过Open Cluster Management跨多个Kubernetes集群访问资源", "tools": [{"name": "Retrieve resources from the hub cluster", "description": "Retrieves resources from the current context (hub cluster).", "parameter": {}}, {"name": "Retrieve resources from the managed clusters", "description": "Retrieves resources from managed clusters.", "parameter": {}}, {"name": "Connect to a managed cluster", "description": "Connects to a managed cluster using a specified ClusterRole.", "parameter": {"ClusterRole": "(string) The name of the ClusterRole to use for connecting to the managed cluster."}}, {"name": "Access resources across multiple Kubernetes clusters", "description": "Accesses resources across multiple Kubernetes clusters via Open Cluster Management.", "parameter": {}}], "domains": [{"name": "DevOps Pipeline Management", "description": "DevOps流水线管理，包括持续集成(CI)构建(如Jenkins/GitLab CI)、工作流定义及持续部署(CD)自动化，支持跨平台应用交付(如Kubernetes集群部署、云平台发布)等"}]}
{"name": "n8n", "description": "1.通过webhook触发工作流 2.工作流管理（创建、更新、删除、激活/停用） 3.工作流执行管理（执行、获取详情、列表查询、停止）", "tools": [{"name": "run_webhook", "description": "Triggers a workflow via a webhook, passing the workflow name and optional data.", "parameter": {"workflowName": "(string) The name of the workflow to trigger", "data": "(Optional, object) Additional data to pass to the webhook"}}, {"name": "workflow_list", "description": "Lists all workflows.", "parameter": {}}, {"name": "workflow_get", "description": "Gets details of a specific workflow.", "parameter": {"id": "(string) The ID of the workflow"}}, {"name": "workflow_create", "description": "Creates a new workflow.", "parameter": {"name": "(string) The name of the new workflow", "data": "(object) The workflow data"}}, {"name": "workflow_update", "description": "Updates an existing workflow.", "parameter": {"id": "(string) The ID of the workflow to update", "data": "(object) The updated workflow data"}}, {"name": "workflow_delete", "description": "Deletes a workflow.", "parameter": {"id": "(string) The ID of the workflow to delete"}}, {"name": "workflow_activate", "description": "Activates a workflow.", "parameter": {"id": "(string) The ID of the workflow to activate"}}, {"name": "workflow_deactivate", "description": "Deactivates a workflow.", "parameter": {"id": "(string) The ID of the workflow to deactivate"}}, {"name": "execution_run", "description": "Executes a workflow via the API.", "parameter": {"id": "(string) The ID of the workflow to execute"}}, {"name": "execution_get", "description": "Gets details of a specific execution.", "parameter": {"id": "(string) The ID of the execution"}}, {"name": "execution_list", "description": "Lists executions for a workflow.", "parameter": {"workflowId": "(string) The ID of the workflow"}}, {"name": "execution_stop", "description": "Stops a running execution.", "parameter": {"id": "(string) The ID of the execution to stop"}}], "domains": [{"name": "DevOps Pipeline Management", "description": "DevOps流水线管理，包括持续集成(CI)构建(如Jenkins/GitLab CI)、工作流定义及持续部署(CD)自动化，支持跨平台应用交付(如Kubernetes集群部署、云平台发布)等"}]}
{"name": "National Parks", "description": "1. Search for national parks based on various criteria 2. Get comprehensive information about a specific national park 3. Get current alerts for national parks including closures, hazards, and important information 4. Get information about visitor centers and their operating hours 5. Get information about available campgrounds and their amenities 6. Find upcoming events at parks", "tools": [{"name": "findParks", "description": "Search for national parks based on various criteria", "parameter": {"stateCode": "(optional string) Filter parks by state code (e.g., 'CA' for California). Multiple states can be comma-separated (e.g., 'CA,OR,WA')", "q": "(optional string) Search term to filter parks by name or description", "limit": "(optional number) Maximum number of parks to return (default: 10, max: 50)", "start": "(optional number) Start position for results (useful for pagination)", "activities": "(optional string) Filter by available activities (e.g., 'hiking,camping')"}}, {"name": "getParkDetails", "description": "Get comprehensive information about a specific national park", "parameter": {"parkCode": "(string) The park code of the national park (e.g., 'yose' for Yosemite, 'grca' for Grand Canyon)"}}, {"name": "getAlerts", "description": "Get current alerts for national parks including closures, hazards, and important information", "parameter": {"parkCode": "(optional string) Filter alerts by park code (e.g., 'yose' for Yosemite). Multiple parks can be comma-separated (e.g., 'yose,grca')", "limit": "(optional number) Maximum number of alerts to return (default: 10, max: 50)", "start": "(optional number) Start position for results (useful for pagination)", "q": "(optional string) Search term to filter alerts by title or description"}}, {"name": "getVisitorCenters", "description": "Get information about visitor centers and their operating hours", "parameter": {"parkCode": "(optional string) Filter visitor centers by park code (e.g., 'yose' for Yosemite). Multiple parks can be comma-separated (e.g., 'yose,grca')", "limit": "(optional number) Maximum number of visitor centers to return (default: 10, max: 50)", "start": "(optional number) Start position for results (useful for pagination)", "q": "(optional string) Search term to filter visitor centers by name or description"}}, {"name": "getCampgrounds", "description": "Get information about available campgrounds and their amenities", "parameter": {"parkCode": "(optional string) Filter campgrounds by park code (e.g., 'yose' for Yosemite). Multiple parks can be comma-separated (e.g., 'yose,grca')", "limit": "(optional number) Maximum number of campgrounds to return (default: 10, max: 50)", "start": "(optional number) Start position for results (useful for pagination)", "q": "(optional string) Search term to filter campgrounds by name or description"}}, {"name": "getEvents", "description": "Find upcoming events at parks", "parameter": {"parkCode": "(optional string) Filter events by park code (e.g., 'yose' for Yosemite). Multiple parks can be comma-separated (e.g., 'yose,grca')", "limit": "(optional number) Maximum number of events to return (default: 10, max: 50)", "start": "(optional number) Start position for results (useful for pagination)", "dateStart": "(optional string) Start date for filtering events (format: YYYY-MM-DD)", "dateEnd": "(optional string) End date for filtering events (format: YYYY-MM-DD)", "q": "(optional string) Search term to filter events by title or description"}}], "domains": [{"name": "Location & Environmental Service", "description": "位置与环境服务，包括地理信息查询、导航、路线规划、酒店、机票、天气数据获取等"}]}
{"name": "NS Travel Information", "description": "1.提供实时列车信息，包括出发和到达时间、站台号、延误和旅行笔记 2.规划最优旅行路线，包括换乘和实时更新 3.检查服务中断、维护工作和工程活动 4.获取单程和往返旅程的准确票价，包括旅行等级和团体票价 5.访问全面的车站信息，如设施、无障碍功能、站台布局、OV-fiets可用性和位置详情", "tools": [{"name": "Real-time Train Information", "description": "Provides real-time information about train departures and arrivals, including platform numbers, delays, and travel notes.", "parameter": {}}, {"name": "Journey Planning", "description": "Finds optimal travel routes with transfers and real-time updates.", "parameter": {}}, {"name": "Service Updates", "description": "Checks for disruptions, maintenance work, and engineering activities.", "parameter": {}}, {"name": "Ticket Prices", "description": "Gets accurate pricing for single and return journeys, including travel classes and group pricing.", "parameter": {}}, {"name": "Station Details", "description": "Accesses comprehensive station information such as facilities, accessibility features, platform layouts, OV-fiets availability, and location details.", "parameter": {}}], "domains": [{"name": "Location & Environmental Service", "description": "位置与环境服务，包括地理信息查询、导航、路线规划、酒店、机票、天气数据获取等"}]}
{"name": "Neovim", "description": "VIM编辑器操作，包括：缓冲区内容获取、命令发送、状态查询、行编辑、窗口操作、标记设置、寄存器设置和视觉选择", "tools": [{"name": "vim_buffer", "description": "Returns the current active buffer content with line numbers shown. The filename parameter is ignored.", "parameter": {"filename": "(string) Ignored, returns a string of numbered lines with the current active buffer content"}}, {"name": "vim_command", "description": "Sends a command to VIM for navigation, spot editing, and line deletion. Multiple commands can be separated by newlines.", "parameter": {"command": "(string) Vim command to execute"}}, {"name": "vim_status", "description": "Gets the status of the VIM editor, including cursor position, mode, filename, visual selection, window layout, current tab, marks, registers, and working directory.", "parameter": {}}, {"name": "vim_edit", "description": "Edits lines in the VIM editor using insert, replace, or replaceAll modes.", "parameter": {"startLine": "(number) Line number where the edit starts", "mode": "(\"insert\" | \"replace\" | \"replaceAll\") Mode of editing", "lines": "(string) Lines to insert or replace"}}, {"name": "vim_window", "description": "Manipulates Neovim windows, such as splitting, vertical splitting, closing, navigating, and making the current window the only one.", "parameter": {"command": "(string: \"split\", \"vsplit\", \"only\", \"close\", \"wincmd h/j/k/l\") Window management operation"}}, {"name": "vim_mark", "description": "Sets a mark at a specific position in the VIM editor.", "parameter": {"mark": "(string: a-z) Mark name", "line": "(number) Line number", "column": "(number) Column number"}}, {"name": "vim_register", "description": "Sets the content of a register in the VIM editor.", "parameter": {"register": "(string: a-z or \") Register name", "content": "(string) Content to set in the register"}}, {"name": "vim_visual", "description": "Creates a visual selection in the VIM editor.", "parameter": {"startLine": "(number) Start line of the selection", "startColumn": "(number) Start column of the selection", "endLine": "(number) End line of the selection", "endColumn": "(number) End column of the selection"}}], "domains": [{"name": "Code Toolkit", "description": "代码工具集,版本控制(如git命令执行)、代码生成、代码执行、测试等"}]}
{"name": "nomad-mcp", "description": "1. List variables with filtering and pagination 2. Get details of a specific variable 3. Create a new variable with namespace support 4. Delete a variable with CAS support", "tools": [{"name": "list_variables", "description": "Lists variables with optional filtering and pagination.", "parameter": {"namespace": "(string) The namespace to filter variables by.", "prefix": "(string) The prefix to filter variables by.", "per_page": "(int) The number of results per page."}}, {"name": "get_variable", "description": "Gets details of a specific variable.", "parameter": {"path": "(string) The path of the variable.", "namespace": "(string) The namespace of the variable."}}, {"name": "create_variable", "description": "Creates a new variable with namespace support.", "parameter": {"path": "(string) The path of the variable.", "key": "(string) The key of the variable.", "value": "(string) The value of the variable.", "namespace": "(string) The namespace of the variable."}}, {"name": "delete_variable", "description": "Deletes a variable with CAS support.", "parameter": {"path": "(string) The path of the variable.", "namespace": "(string) The namespace of the variable."}}], "domains": [{"name": "Data Management", "description": "数据管理，包括数据查询、提取、传输和配置管理"}]}
{"name": "oatpp-mcp", "description": "A tool for logging purposes", "tools": [{"name": "Logger", "description": "A tool for logging purposes.", "parameter": {}}], "domains": [{"name": "Application Monitoring & Management", "description": "Application performance monitoring and management, including error tracking, deployment management, performance metrics analysis, and team collaboration"}]}
{"name": "obsidian-mcp", "description": "1.笔记内容管理，包括读取、创建、编辑、删除和移动笔记 2.目录创建 3.笔记搜索 4.标签管理，包括添加、删除、重命名和组织标签 5.多库管理，列出所有可用库", "tools": [{"name": "read-note", "description": "Read the contents of a note", "parameter": {}}, {"name": "create-note", "description": "Create a new note", "parameter": {}}, {"name": "edit-note", "description": "Edit an existing note", "parameter": {}}, {"name": "delete-note", "description": "Delete a note", "parameter": {}}, {"name": "move-note", "description": "Move a note to a different location", "parameter": {}}, {"name": "create-directory", "description": "Create a new directory", "parameter": {}}, {"name": "search-vault", "description": "Search notes in the vault", "parameter": {}}, {"name": "add-tags", "description": "Add tags to a note", "parameter": {}}, {"name": "remove-tags", "description": "Remove tags from a note", "parameter": {}}, {"name": "rename-tag", "description": "Rename a tag across all notes", "parameter": {}}, {"name": "manage-tags", "description": "List and organize tags", "parameter": {}}, {"name": "list-available-vaults", "description": "List all available vaults (helps with multi-vault setups)", "parameter": {}}], "domains": [{"name": "Content Management", "description": "内容管理，包括博客文章的创建、更新、检索及媒体上传"}, {"name": "File System", "description": "文件系统管理,包括本地 / 云端文件的存储、读取、修改、权限控制及分类检索"}]}
{"name": "Okta", "description": "Okta用户与组管理,包括:用户信息检索、激活/停用/删除用户、用户组管理、批量用户导入、应用访问配置及入职工作流执行", "tools": [{"name": "get_user", "description": "Retrieves detailed user information from Okta, including user details, account dates, personal information, employment details, contact information, address, and preferences.", "parameter": {}}, {"name": "list_users", "description": "Lists users from Okta with optional filtering and pagination, supporting SCIM filter expressions, free-form text search, sorting options, and pagination.", "parameter": {}}, {"name": "activate_user", "description": "Activates a user in Okta, with an option to send an activation email and update the user's status to active.", "parameter": {}}, {"name": "suspend_user", "description": "Suspends a user in Okta.", "parameter": {}}, {"name": "unsuspend_user", "description": "Unsuspends a previously suspended user in Okta.", "parameter": {}}, {"name": "delete_user", "description": "Deletes a user from Okta, noting that the user must be deactivated first.", "parameter": {}}, {"name": "get_user_last_location", "description": "Retrieves the last known location and login information for a user from Okta system logs.", "parameter": {}}, {"name": "list_groups", "description": "Lists user groups from Okta with optional filtering and pagination, supporting filter expressions, free-form text search, sorting options, and pagination.", "parameter": {}}, {"name": "create_group", "description": "Creates a new group in Okta with a name and optional description.", "parameter": {}}, {"name": "get_group", "description": "Retrieves detailed information about a specific group.", "parameter": {}}, {"name": "delete_group", "description": "Deletes a group from Okta.", "parameter": {}}, {"name": "assign_user_to_group", "description": "Assigns a user to a group in Okta.", "parameter": {}}, {"name": "remove_user_from_group", "description": "Removes a user from a group in Okta.", "parameter": {}}, {"name": "list_group_users", "description": "Lists all users in a specific group with pagination support.", "parameter": {}}, {"name": "bulk_user_import", "description": "Imports multiple users from a CSV string, creating user accounts based on CSV data, with optional activation of users, email notifications, and assignment to default groups.", "parameter": {}}, {"name": "assign_users_to_groups", "description": "Assigns multiple users to groups based on attribute mappings, mapping user attributes (department, title, etc.) to specific groups and performing bulk assignment of users based on attributes.", "parameter": {}}, {"name": "provision_applications", "description": "Provisions application access for multiple users, assigning users to applications and supporting bulk provisioning.", "parameter": {}}, {"name": "run_onboarding_workflow", "description": "Runs a complete onboarding workflow for multiple users from CSV data, including user import from CSV, automatic activation, group assignment based on attributes, application provisioning, and welcome email configuration.", "parameter": {}}], "domains": [{"name": "Server Management", "description": "Server operations and user management, including server lifecycle control and user administration"}]}
{"name": "OpenAI WebSearch MCP", "description": "Call OpenAI websearch as a tool", "tools": [{"name": "web_search", "description": "Call OpenAI websearch as a tool.", "parameter": {"type": "(string) web_search_preview", "search_context_size": "(string) High level guidance for the amount of context window space to use for the search. One of low, medium, or high. medium is the default.", "user_location": "(object or null) User location details, including type, city, country, region, and timezone."}}], "domains": [{"name": "Web Search", "description": "网页信息检索,通过关键词查询公开网页内容,支持多类型信息主动获取"}]}
{"name": "OpenAPI AnyApi", "description": "1.获取API端点模式 2.向指定URL发送HTTP请求", "tools": [{"name": "{prefix}_api_request_schema", "description": "Get API endpoint schemas that match your intent. Returns endpoint details including path, method, parameters, and response formats.", "parameter": {"query": "(string) Describe what you want to do with the API (e.g., 'Get user profile information', 'Create a new job posting')"}}, {"name": "{prefix}_make_request", "description": "Essential for reliable execution with complex APIs where simplified implementations fail. Provides the ability to make HTTP requests to specified URLs with detailed options.", "parameter": {"method": "(string) HTTP method (GET, POST, PUT, DELETE, PATCH) (Enum: GET, POST, PUT, DELETE, PATCH)", "url": "(string) Fully qualified API URL (e.g., https://api.example.com/users/123)", "headers": "(Optional, object) Request headers", "query_params": "(Optional, object) Query parameters", "body": "(Optional, object) Request body for POST, PUT, PATCH"}}], "domains": [{"name": "API Development & Testing", "description": "API开发与测试，包括API规范验证、接口测试、文档生成及SDK生成"}]}
{"name": "OpenAPI Schema", "description": "API开发与测试工具集，包括API路径列表、端点详情、请求/响应模式、参数获取、组件列表与详情、安全方案列表及模式搜索", "tools": [{"name": "list-endpoints", "description": "Lists all API paths and their HTTP methods with summaries in a nested object structure", "parameter": {}}, {"name": "get-endpoint", "description": "Gets detailed information about a specific endpoint including parameters and responses", "parameter": {}}, {"name": "get-request-body", "description": "Gets the request body schema for a specific endpoint and method", "parameter": {}}, {"name": "get-response-schema", "description": "Gets the response schema for a specific endpoint, method, and status code", "parameter": {}}, {"name": "get-path-parameters", "description": "Gets the parameters for a specific path", "parameter": {}}, {"name": "list-components", "description": "Lists all schema components (schemas, responses, parameters, etc.)", "parameter": {}}, {"name": "get-component", "description": "Gets detailed definition for a specific component", "parameter": {}}, {"name": "list-security-schemes", "description": "Lists all available security schemes", "parameter": {}}, {"name": "get-examples", "description": "Gets examples for a specific component or endpoint", "parameter": {}}, {"name": "search-schema", "description": "Searches across paths, operations, and schemas", "parameter": {}}], "domains": [{"name": "API Development & Testing", "description": "API开发与测试，包括API规范验证、接口测试、文档生成及SDK生成"}]}
{"name": "OpenCTI", "description": "1.威胁情报报告检索 2.恶意软件、威胁指标、威胁行为者信息搜索 3.用户、群组、攻击模式、活动、连接器、状态模板、文件、标记定义和标签列表检索", "tools": [{"name": "get_latest_reports", "description": "Retrieves the most recent threat intelligence reports.", "parameter": {"first": "(Optional, number) Number of reports to retrieve, defaults to 10"}}, {"name": "get_report_by_id", "description": "Retrieves a specific report by its ID.", "parameter": {"id": "(string) Report ID"}}, {"name": "search_malware", "description": "Searches for malware information in the OpenCTI database.", "parameter": {"query": "(string) Search query", "first": "(Optional, number) Number of results to retrieve, defaults to 10"}}, {"name": "search_indicators", "description": "Searches for indicators of compromise.", "parameter": {"query": "(string) Search query", "first": "(Optional, number) Number of results to retrieve, defaults to 10"}}, {"name": "search_threat_actors", "description": "Searches for threat actor information.", "parameter": {"query": "(string) Search query", "first": "(Optional, number) Number of results to retrieve, defaults to 10"}}, {"name": "get_user_by_id", "description": "Retrieves user information by ID.", "parameter": {"id": "(string) User ID"}}, {"name": "list_users", "description": "Lists all users in the system.", "parameter": {}}, {"name": "list_groups", "description": "Lists all groups with their members.", "parameter": {"first": "(Optional, number) Number of groups to retrieve, defaults to 10"}}, {"name": "list_attack_patterns", "description": "Lists all attack patterns in the system.", "parameter": {"first": "(Optional, number) Number of attack patterns to retrieve, defaults to 10"}}, {"name": "get_campaign_by_name", "description": "Retrieves campaign information by name.", "parameter": {"name": "(string) Campaign name"}}, {"name": "list_connectors", "description": "Lists all system connectors.", "parameter": {}}, {"name": "list_status_templates", "description": "Lists all status templates.", "parameter": {}}, {"name": "get_file_by_id", "description": "Retrieves file information by ID.", "parameter": {"id": "(string) File ID"}}, {"name": "list_files", "description": "Lists all files in the system.", "parameter": {}}, {"name": "list_marking_definitions", "description": "Lists all marking definitions.", "parameter": {}}, {"name": "list_labels", "description": "Lists all available labels.", "parameter": {}}], "domains": [{"name": "Threat Intelligence", "description": "威胁情报管理，包括威胁报告检索、恶意软件分析、威胁指标搜索、威胁行为者识别及系统安全信息管理"}, {"name": "User & Access Management", "description": "用户与访问管理，包括用户信息检索、群组成员列表及权限定义管理"}, {"name": "Security Information Management", "description": "安全信息管理，包括攻击模式、活动、连接器、状态模板、文件、标记定义和标签的检索与列表管理"}]}
{"name": "OpenDota", "description": "Dota 2 player and match data retrieval, including player information, recent matches, win/loss statistics, hero stats, professional players/matches, team information, and public matches", "tools": [{"name": "get_player_by_id", "description": "Retrieve player information by account ID", "parameter": {}}, {"name": "get_player_recent_matches", "description": "Get recent matches for a player", "parameter": {}}, {"name": "get_match_data", "description": "Get detailed data for a specific match", "parameter": {}}, {"name": "get_player_win_loss", "description": "Get win/loss statistics for a player", "parameter": {}}, {"name": "get_player_heroes", "description": "Get a player's most played heroes", "parameter": {}}, {"name": "get_hero_stats", "description": "Get statistics for heroes", "parameter": {}}, {"name": "search_player", "description": "Search for players by name", "parameter": {}}, {"name": "get_pro_players", "description": "Get list of professional players", "parameter": {}}, {"name": "get_pro_matches", "description": "Get recent professional matches", "parameter": {}}, {"name": "get_player_peers", "description": "Get players who have played with a specified player", "parameter": {}}, {"name": "get_heroes", "description": "Get list of all Dota 2 heroes", "parameter": {}}, {"name": "get_player_totals", "description": "Get player's overall stats totals", "parameter": {}}, {"name": "get_player_rankings", "description": "Get player hero rankings", "parameter": {}}, {"name": "get_player_wordcloud", "description": "Get most common words used by player in chat", "parameter": {}}, {"name": "get_team_info", "description": "Get information about a team", "parameter": {}}, {"name": "get_public_matches", "description": "Get recent public matches", "parameter": {}}, {"name": "get_match_heroes", "description": "Get heroes played in a specific match", "parameter": {}}], "domains": [{"name": "Sports Data Analysis", "description": "Sports data retrieval and analysis, including game statistics, team records, play-by-play data, and advanced analytics"}]}
{"name": "OpenRPC", "description": "1.调用任意JSON-RPC方法 2.发现可用的JSON-RPC方法", "tools": [{"name": "rpc_call", "description": "Call arbitrary JSON-RPC methods", "parameter": {"server_url": "(string) URL of the JSON-RPC server", "method_name": "(string) Name of the method to call", "parameters": "(object) Parameters to pass to the method"}}, {"name": "rpc_discover", "description": "Discover available JSON-RPC methods", "parameter": {"server_url": "(string) URL of the JSON-RPC server"}}], "domains": [{"name": "API Development & Testing", "description": "API开发与测试，包括API规范验证、接口测试、文档生成及SDK生成"}]}
{"name": "Open Strategy Partners Marketing Tools", "description": "1. Generate OSP product value maps 2. Create optimized metadata for web content 3. Apply OSP semantic editing codes for content review 4. Provide systematic approach to technical content creation", "tools": [{"name": "OSP Product Value Map Generator", "description": "Generates structured OSP product value maps that effectively communicate a product's worth and positioning.", "parameter": {"Product Name": "(string) The name of the product", "Target Audience": "(string) The target audience for the product", "Key Features": "(list of strings) Key features of the product"}}, {"name": "OSP Meta Information Generator", "description": "Creates optimized metadata for web content including article titles, meta titles, meta descriptions, SEO-friendly URL slugs, and more.", "parameter": {"Topic": "(string) The topic of the article", "Primary Keyword": "(string) The primary keyword for SEO", "Audience": "(string) The target audience", "Content Type": "(string) The type of content (e.g., technical guide, tutorial)"}}, {"name": "OSP Content Editing Codes", "description": "Applies OSP's semantic editing codes for comprehensive content review, including scope, flow, style, and technical accuracy.", "parameter": {"Content": "(string) The content to be reviewed"}}, {"name": "OSP Technical Writing Guide", "description": "Provides a systematic approach to creating high-quality technical content, including narrative structure, flow, style, and technical accuracy.", "parameter": {"Document Type": "(string) The type of document (e.g., tutorial, reference doc)", "Topic": "(string) The topic of the document", "Audience": "(string) The target audience"}}], "domains": [{"name": "Content Management", "description": "内容管理，包括博客文章的创建、更新、检索及媒体上传"}, {"name": "Document Format Conversion", "description": "文档格式转换,实现不同文档类型（如 PDF/Word/Markdown）的兼容性转换"}]}
{"name": "Outline", "description": "1. Search for documents by keywords 2. List all available collections 3. Get document content by ID 4. Create new document in specified collection 5. Add comment to document 6. Move document to different collection", "tools": [{"name": "Search for Documents", "description": "Search for documents by keywords.", "parameter": {}}, {"name": "List Collections", "description": "List all available collections.", "parameter": {}}, {"name": "Read a Document", "description": "Get the content of a document by its ID.", "parameter": {"docId": "(string) The ID of the document to read."}}, {"name": "Create a New Document", "description": "Create a new document in a specified collection with given content.", "parameter": {"title": "(string) The title of the new document.", "collectionId": "(string) The ID of the collection where the document will be created.", "content": "(string) The content of the new document."}}, {"name": "Add a Comment", "description": "Add a comment to a document.", "parameter": {"docId": "(string) The ID of the document to comment on.", "comment": "(string) The text of the comment."}}, {"name": "Move a Document", "description": "Move a document to a different collection.", "parameter": {"docId": "(string) The ID of the document to move.", "newCollectionId": "(string) The ID of the target collection."}}], "domains": [{"name": "Content Management", "description": "内容管理，包括博客文章的创建、更新、检索及媒体上传"}]}
{"name": "Pandoc", "description": "Transform content between supported formats", "tools": [{"name": "convert-contents", "description": "Transforms content between supported formats", "parameter": {"contents": "(string) Source content to convert (required if input_file not provided)", "input_file": "(string) Complete path to input file (required if contents not provided)", "input_format": "(string) Source format of the content (defaults to markdown)", "output_format": "(string) Target format (defaults to markdown)", "output_file": "(string) Complete path for output file (required for pdf, docx, rst, latex, epub formats)"}}], "domains": [{"name": "Document Format Conversion", "description": "文档格式转换,实现不同文档类型（如 PDF/Word/Markdown）的兼容性转换"}]}
{"name": "Phone MCP", "description": "1.执行屏幕交互操作（点击、滑动、按键、输入文本、查找元素等） 2.分析屏幕UI元素 3.通过UI自动化创建联系人 4.通过包名和活动名启动应用 5.通过Android intent系统启动活动", "tools": [{"name": "interact_with_screen", "description": "Executes various screen interaction actions such as tapping, swiping, pressing keys, inputting text, finding elements, waiting for elements, and scrolling.", "parameter": {"action": "(str) Type of action ('tap', 'swipe', 'key', 'text', 'find', 'wait', 'scroll')", "params": "(Optional, Dict[str, Any]) Dictionary with parameters specific to each action type"}}, {"name": "analyze_screen", "description": "Analyzes the current screen and provides structured information about UI elements.", "parameter": {"include_screenshot": "(Optional, bool) Whether to include base64-encoded screenshot in result", "max_elements": "(Optional, int) Maximum number of UI elements to process"}}, {"name": "create_contact", "description": "Creates a new contact with the given name and phone number using UI automation.", "parameter": {"name": "(str) The contact's full name", "phone": "(str) The phone number for the contact"}}, {"name": "launch_app_activity", "description": "Launches an app using the package name and optionally an activity name.", "parameter": {"package_name": "(str) The package name of the app to launch", "activity_name": "(Optional, str) The specific activity to launch"}}, {"name": "launch_intent", "description": "Launches an activity using the Android intent system.", "parameter": {"intent_action": "(str) The action to perform", "intent_type": "(Optional, str) The MIME type for the intent", "extras": "(Optional, Dict[str, str]) Extra data to pass with the intent"}}], "domains": [{"name": "Remote Desktop Control", "description": "远程桌面控制，包括屏幕捕获、输入模拟（键盘/鼠标）、应用程序控制及自动化操作"}]}
{"name": "PIF", "description": "1.工作区上下文导航与管理 2.开发连接见解 3.创建临时思考空间 4.记录发展并探索日志条目模式", "tools": [{"name": "pwd", "description": "Navigate and manage workspace context", "parameter": {}}, {"name": "cd", "description": "Navigate and manage workspace context", "parameter": {}}, {"name": "read", "description": "Navigate and manage workspace context", "parameter": {}}, {"name": "write", "description": "Navigate and manage workspace context", "parameter": {}}, {"name": "mkdir", "description": "Navigate and manage workspace context", "parameter": {}}, {"name": "delete", "description": "Navigate and manage workspace context", "parameter": {}}, {"name": "move", "description": "Navigate and manage workspace context", "parameter": {}}, {"name": "rename", "description": "Navigate and manage workspace context", "parameter": {}}, {"name": "reason", "description": "Develop connected insights", "parameter": {"thoughts": "(array) An array of thought objects with content and optional relations"}}, {"name": "think", "description": "Create temporal spaces for contemplation", "parameter": {}}, {"name": "journal_create", "description": "Document developments", "parameter": {"title": "(string) Title of the journal entry", "content": "(string) Content of the journal entry", "tags": "(array) Array of tags for the journal entry"}}, {"name": "journal_read", "description": "Explore patterns in journal entries", "parameter": {}}], "domains": [{"name": "Workspace Management", "description": "Workspace operations and management, including workspace creation, SQL execution, and job scheduling"}, {"name": "Content Management", "description": "内容管理，包括博客文章的创建、更新、检索及媒体上传"}, {"name": "Time & Task Management", "description": "时间与任务管理,涵盖日历日程、待办事项、项目进度跟踪及会议调度"}]}
{"name": "Placid.app", "description": "1.列出可用的Placid模板 2.使用Placid模板生成视频 3.使用Placid模板生成静态图像", "tools": [{"name": "placid_list_templates", "description": "Lists available Placid templates with filtering options. Each template includes its title, ID, preview image URL, available layers, and tags.", "parameter": {"collection_id": "(Optional, string) Filter templates by collection ID", "custom_data": "(Optional, string) Filter by custom reference data", "tags": "(Optional, array) Array of tags to filter templates by"}}, {"name": "placid_generate_video", "description": "Generate videos by combining Placid templates with dynamic content like videos, images, and text. For longer videos, a job ID is provided to check status.", "parameter": {"template_id": "(string) UUID of the template to use", "layers": "(object) Object containing dynamic content for template layers", "audio": "(Optional, string) URL to an mp3 audio file", "audio_duration": "(Optional, string) Set to 'auto' to trim audio to video length", "audio_trim_start": "(Optional, string) Timestamp of trim start point", "audio_trim_end": "(Optional, string) Timestamp of trim end point"}}, {"name": "placid_generate_image", "description": "Generate static images by combining Placid templates with dynamic content like text and images.", "parameter": {"template_id": "(string) UUID of the template to use", "layers": "(object) Object containing dynamic content for template layers"}}], "domains": [{"name": "Image Processing", "description": "图像处理与生成,包括传统图片编辑、AI 图像生成、图表绘制与可视化"}, {"name": "Audio-Video Creation", "description": "音视频创作,包括录制、剪辑、特效添加、配音及格式转换"}]}
{"name": "Postman", "description": "Run a Postman collection and return test results", "tools": [{"name": "run-collection", "description": "Runs a Postman collection and returns the test results.", "parameter": {"collection": "(required) Path or URL to the Postman collection", "environment": "(optional) Path or URL to environment file", "globals": "(optional) Path or URL to globals file", "iterationCount": "(optional) Number of iterations to run"}}], "domains": [{"name": "API Development & Testing", "description": "API开发与测试，包括API规范验证、接口测试、文档生成及SDK生成"}]}
{"name": "Productboard", "description": "Productboard数据检索,包括:公司列表与详情、组件列表与详情、功能列表与详情及状态、笔记、产品列表与详情", "tools": [{"name": "get_companies", "description": "Retrieves a list of companies from Productboard.", "parameter": {}}, {"name": "get_company_detail", "description": "Retrieves detailed information about a specific company.", "parameter": {}}, {"name": "get_components", "description": "Retrieves a list of components from Productboard.", "parameter": {}}, {"name": "get_component_detail", "description": "Retrieves detailed information about a specific component.", "parameter": {}}, {"name": "get_features", "description": "Retrieves a list of features from Productboard.", "parameter": {}}, {"name": "get_feature_detail", "description": "Retrieves detailed information about a specific feature.", "parameter": {}}, {"name": "get_feature_statuses", "description": "Retrieves the statuses of features from Productboard.", "parameter": {}}, {"name": "get_notes", "description": "Retrieves notes from Productboard.", "parameter": {}}, {"name": "get_products", "description": "Retrieves a list of products from Productboard.", "parameter": {}}, {"name": "get_product_detail", "description": "Retrieves detailed information about a specific product.", "parameter": {}}], "domains": [{"name": "Business Management", "description": "业务管理，包括业务信息获取、位置管理、营业时间更新及媒体内容管理"}]}
{"name": "Prometheus", "description": "1. Execute PromQL instant and range queries against Prometheus 2. List all available metrics in Prometheus 3. Get metadata for a specific metric 4. Get information about all scrape targets", "tools": [{"name": "execute_query", "description": "Execute a PromQL instant query against Prometheus", "parameter": {"query": "(string) The PromQL query to execute"}}, {"name": "execute_range_query", "description": "Execute a PromQL range query with start time, end time, and step interval", "parameter": {"query": "(string) The PromQL query to execute", "start_time": "(string) The start time of the range query", "end_time": "(string) The end time of the range query", "step_interval": "(string) The step interval for the range query"}}, {"name": "list_metrics", "description": "List all available metrics in Prometheus", "parameter": {}}, {"name": "get_metric_metadata", "description": "Get metadata for a specific metric", "parameter": {"metric_name": "(string) The name of the metric to get metadata for"}}, {"name": "get_targets", "description": "Get information about all scrape targets", "parameter": {}}], "domains": [{"name": "Application Monitoring & Management", "description": "Application performance monitoring and management, including error tracking, deployment management, performance metrics analysis, and team collaboration"}]}
{"name": "Pushover", "description": "Send notifications via Pushover", "tools": [{"name": "send", "description": "Sends a notification via Pushover.", "parameter": {"message": "(string) The message to send", "title": "(Optional, string) Message title", "priority": "(Optional, number) -2 to 2 (-2: lowest, 2: emergency)", "sound": "(Optional, string) Notification sound", "url": "(Optional, string) URL to include", "url_title": "(Optional, string) Title for the URL", "device": "(Optional, string) Target specific device"}}], "domains": [{"name": "Social Media Management", "description": "社交媒体账号运营,涵盖内容发布、粉丝互动、多平台批量管理与舆情分析"}]}
{"name": "Quarkus", "description": "1.通过JDBC URL存储和检索数据库数据 2.检查运行中的JVM进程 3.从文件系统提供文件服务 4.使用JavaFX创建绘图画布 5.与Kubernetes集群交互 6.使用Docker/Podman/OCI兼容容器引擎 7.通过Wolfram Alpha LLM API进行优化的网络搜索", "tools": [{"name": "jdbc", "description": "A server for storing and retrieving data from a database via a JDBC URL.", "parameter": {}}, {"name": "jvminsight", "description": "A server for inspecting a running JVM process.", "parameter": {}}, {"name": "filesystem", "description": "A server for serving files from a file system.", "parameter": {"path1": "(Optional, string) Path to serve files from", "path2": "(Optional, string) Additional path to serve files from"}}, {"name": "jfx", "description": "A server that exposes a canvas for making drawings using JavaFX.", "parameter": {}}, {"name": "kubernetes", "description": "A server for interacting with a Kubernetes cluster.", "parameter": {}}, {"name": "containers", "description": "A server for working with Docker/Podman/OCI compatible container engines.", "parameter": {}}, {"name": "wolfram", "description": "A server for performing web searches optimized for use by a large language model through the Wolfram Alpha LLM API.", "parameter": {}}], "domains": [{"name": "Data Management", "description": "数据管理，包括数据查询、提取、传输和配置管理"}, {"name": "Server Management", "description": "Server operations and user management, including server lifecycle control and user administration"}, {"name": "File System", "description": "文件系统管理,包括本地 / 云端文件的存储、读取、修改、权限控制及分类检索"}, {"name": "Game Development", "description": "游戏开发工具集，包括游戏引擎操作、场景管理、资源加载与调试功能"}, {"name": "Cloud Service Integration", "description": "云服务集成，调用与管理云平台 API(如 AWS/Azure)，支持云资源对接与 AI 服务整合"}, {"name": "Virtual Environment & Container Manager", "description": "虚拟与容器环境管理，支持开发环境如（如Python虚拟环境、Node.js运行时）、容器化环境构建（Docker）"}, {"name": "Web Search", "description": "网页信息检索,通过关键词查询公开网页内容,支持多类型信息主动获取"}]}
{"name": "QGIS", "description": "1.执行简单的ping命令检查服务器连接性 2.QGIS项目操作,包括:项目创建/加载/保存、图层管理(矢量/栅格)、地图渲染、处理算法执行及PyQGIS代码执行", "tools": [{"name": "ping", "description": "Simple ping command to check server connectivity", "parameter": {}}, {"name": "get_qgis_info", "description": "Get QGIS information about the current installation", "parameter": {}}, {"name": "load_project", "description": "Load a QGIS project from the specified path", "parameter": {"path": "(string) Path to the QGIS project file"}}, {"name": "create_new_project", "description": "Create a new project and save it", "parameter": {"path": "(string) Path to save the new project file"}}, {"name": "get_project_info", "description": "Get current project information", "parameter": {}}, {"name": "add_vector_layer", "description": "Add a vector layer to the project", "parameter": {"path": "(string) Path to the vector layer file", "name": "(string) Name to assign to the layer"}}, {"name": "add_raster_layer", "description": "Add a raster layer to the project", "parameter": {"path": "(string) Path to the raster layer file", "name": "(string) Name to assign to the layer"}}, {"name": "get_layers", "description": "Retrieve all layers in the current project", "parameter": {}}, {"name": "remove_layer", "description": "Remove a layer from the project by its ID", "parameter": {"layer_id": "(string) ID of the layer to remove"}}, {"name": "zoom_to_layer", "description": "Zoom to the extent of a specified layer", "parameter": {"layer_id": "(string) ID of the layer to zoom to"}}, {"name": "get_layer_features", "description": "Retrieve features from a vector layer with an optional limit", "parameter": {"layer_id": "(string) ID of the vector layer", "limit": "(Optional, integer) Maximum number of features to retrieve"}}, {"name": "execute_processing", "description": "Execute a processing algorithm with the given parameters", "parameter": {"algorithm": "(string) Name of the processing algorithm", "parameters": "(dictionary) Parameters for the algorithm"}}, {"name": "save_project", "description": "Save the current project to the given path", "parameter": {"path": "(string) Path to save the project file"}}, {"name": "render_map", "description": "Render the current map view to an image file", "parameter": {"output_path": "(string) Path to save the rendered image"}}, {"name": "execute_code", "description": "Execute arbitrary PyQGIS code provided as a string", "parameter": {"code": "(string) PyQGIS code to execute"}}], "domains": [{"name": "Terminal Execution", "description": "终端命令行执行,用于系统命令操作、脚本运行及服务器资源管理"}, {"name": "Geographic Information System", "description": "地理信息系统操作,包括项目创建/加载/保存、图层管理(矢量/栅格)、地图渲染、处理算法执行及代码执行"}]}
{"name": "QuickChart", "description": "1. Generate chart URLs using QuickChart.io 2. Download chart images to local files", "tools": [{"name": "generate_chart", "description": "Generate a chart URL using QuickChart.io", "parameter": {"type": "(string) The type of chart to generate (e.g., 'bar', 'line', 'pie')", "data": "(object) The data configuration for the chart", "options": "(object, optional) Additional options for the chart"}}, {"name": "download_chart", "description": "Download a chart image to a local file", "parameter": {"config": "(object) The chart configuration", "outputPath": "(string) The path where the chart image will be saved"}}], "domains": [{"name": "Image Processing", "description": "图像处理与生成,包括传统图片编辑、AI 图像生成、图表绘制与可视化"}]}
{"name": "Qwen_Max", "description": "Generate text using the Qwen Max language model", "tools": [{"name": "qwen_max", "description": "Generates text using the Qwen Max language model.", "parameter": {"prompt": "(string) The input prompt for the model.", "max_tokens": "(number) The maximum number of tokens to generate in the output.", "temperature": "(number) Controls the randomness of the model's output."}}], "domains": [{"name": "AI Model Lifecycle Management", "description": "人工智能模型训练与推理，涵盖深度学习与传统机器学习框架建模、模型优化与部署、实验跟踪、数据预处理及全流程生命周期管理"}]}
{"name": "Raindrop.io", "description": "1.创建书签 2.搜索书签", "tools": [{"name": "create-bookmark", "description": "Creates a new bookmark.", "parameter": {"url": "(string) URL to bookmark (required)", "title": "(Optional, string) Title for the bookmark", "tags": "(Optional, array) Array of tags", "collection": "(Optional, string) Collection ID"}}, {"name": "search-bookmarks", "description": "Searches through bookmarks.", "parameter": {"query": "(string) Search query (required)", "tags": "(Optional, array) Array of tags to filter by"}}], "domains": [{"name": "File System", "description": "文件系统管理,包括本地 / 云端文件的存储、读取、修改、权限控制及分类检索"}]}
{"name": "Reaper", "description": "1.查找Reaper项目 2.解析Reaper项目并返回JSON对象", "tools": [{"name": "find_reaper_projects", "description": "Finds all Reaper projects in the directory specified in the config.", "parameter": {}}, {"name": "parse_reaper_project", "description": "Parses a Reaper project and returns a JSON object.", "parameter": {}}], "domains": [{"name": "Audio-Video Creation", "description": "音视频创作,包括录制、剪辑、特效添加、配音及格式转换"}]}
{"name": "Rememberizer AI", "description": "1.从Rememberizer个人/团队内部知识库中检索语义相似的匹配项 2.使用简单查询搜索Rememberizer内部知识库中的文档 3.列出个人/团队内部知识库的来源 4.获取Rememberizer.ai知识库账户信息 5.检索个人/团队知识系统中所有文档的分页列表 6.在Rememberizer.ai知识系统中保存文本信息以便未来召回", "tools": [{"name": "retrieve_semantically_similar_internal_knowledge", "description": "Retrieves semantically similar matches from the connected Rememberizer personal/team internal knowledge and memory repository.", "parameter": {"match_this": "(string) Up to a 400-word sentence for which you wish to find semantically similar chunks of knowledge", "n_results": "(Optional, integer) Number of semantically similar chunks of text to return. Use 'n_results=3' for up to 5, and 'n_results=10' for more information", "from_datetime_ISO8601": "(Optional, string) Start date in ISO 8601 format with timezone (e.g., 2023-01-01T00:00:00Z). Use this to filter results from a specific date", "to_datetime_ISO8601": "(Optional, string) End date in ISO 8601 format with timezone (e.g., 2024-01-01T00:00:00Z). Use this to filter results until a specific date"}}, {"name": "smart_search_internal_knowledge", "description": "Searches for documents in Rememberizer's personal/team internal knowledge and memory repository using a simple query. The search may include sources such as Slack discussions, Gmail, Dropbox documents, Google Drive documents, and uploaded files.", "parameter": {"query": "(string) Up to a 400-word sentence for which you wish to find semantically similar chunks of knowledge", "user_context": "(Optional, string) Additional context for the query. Summarize the conversation up to this point for better context-aware results", "n_results": "(Optional, integer) Number of semantically similar chunks of text to return. Use 'n_results=3' for up to 5, and 'n_results=10' for more information", "from_datetime_ISO8601": "(Optional, string) Start date in ISO 8601 format with timezone (e.g., 2023-01-01T00:00:00Z). Use this to filter results from a specific date", "to_datetime_ISO8601": "(Optional, string) End date in ISO 8601 format with timezone (e.g., 2024-01-01T00:00:00Z). Use this to filter results until a specific date"}}, {"name": "list_internal_knowledge_systems", "description": "Lists the sources of personal/team internal knowledge. These may include Slack discussions, Gmail, Dropbox documents, Google Drive documents, and uploaded files.", "parameter": {}}, {"name": "rememberizer_account_information", "description": "Gets information about the Rememberizer.ai personal/team knowledge repository account, including account holder name and email address.", "parameter": {}}, {"name": "list_personal_team_knowledge_documents", "description": "Retrieves a paginated list of all documents in the personal/team knowledge system. Sources could include Slack discussions, Gmail, Dropbox documents, Google Drive documents, and uploaded files.", "parameter": {"page": "(Optional, integer) Page number for pagination, starts at 1 (default: 1)", "page_size": "(Optional, integer) Number of documents per page, range 1-1000 (default: 100)"}}, {"name": "remember_this", "description": "Saves a piece of text information in the Rememberizer.ai knowledge system so that it may be recalled in the future through other tools.", "parameter": {"name": "(string) Name of the information. Used to identify the information in the future", "content": "(string) The information you wish to memorize"}}], "domains": [{"name": "Knowledge Visualization", "description": "知识可视化，包括知识图谱导航、知识可视化生成及知识库搜索"}, {"name": "Content Management", "description": "内容管理，包括博客文章的创建、更新、检索及媒体上传"}]}
{"name": "Replicate", "description": "1.模型搜索与浏览 2.模型集合管理 3.预测任务执行与状态监控 4.图像缓存管理", "tools": [{"name": "search_models", "description": "Find models using semantic search", "parameter": {}}, {"name": "list_models", "description": "Browse available models", "parameter": {}}, {"name": "get_model", "description": "Get details about a specific model", "parameter": {}}, {"name": "list_collections", "description": "Browse model collections", "parameter": {}}, {"name": "get_collection", "description": "Get details about a specific collection", "parameter": {}}, {"name": "create_prediction", "description": "Run a model with your inputs", "parameter": {}}, {"name": "get_prediction", "description": "Check a prediction's status", "parameter": {}}, {"name": "cancel_prediction", "description": "Stop a running prediction", "parameter": {}}, {"name": "list_predictions", "description": "See your recent predictions", "parameter": {}}, {"name": "view_image", "description": "Open an image in your browser", "parameter": {}}, {"name": "clear_image_cache", "description": "Clean up cached images", "parameter": {}}, {"name": "get_image_cache_stats", "description": "Check cache usage", "parameter": {}}], "domains": [{"name": "AI Model Lifecycle Management", "description": "人工智能模型训练与推理，涵盖深度学习与传统机器学习框架建模、模型优化与部署、实验跟踪、数据预处理及全流程生命周期管理"}, {"name": "Image Processing", "description": "图像处理与生成,包括传统图片编辑、AI 图像生成、图表绘制与可视化"}]}
{"name": "Rquest", "description": "HTTP请求操作,包括:GET/POST/PUT/DELETE/PATCH/HEAD/OPTIONS/TRACE请求,存储响应检索,HTML/PDF转Markdown,PDF模型状态获取与重启加载", "tools": [{"name": "http_get", "description": "Perform GET requests with optional parameters", "parameter": {"url": "(string) The URL to send the GET request to", "headers": "(Optional, dict) Additional headers to include in the request", "cookies": "(Optional, dict) Cookies to include in the request", "params": "(Optional, dict) Query parameters to include in the request"}}, {"name": "http_post", "description": "Submit data via POST requests", "parameter": {"url": "(string) The URL to send the POST request to", "data": "(Optional, dict or string) Data to send in the body of the request", "json": "(Optional, dict) JSON data to send in the body of the request", "headers": "(Optional, dict) Additional headers to include in the request", "cookies": "(Optional, dict) Cookies to include in the request", "files": "(Optional, dict) Files to send in the body of the request"}}, {"name": "http_put", "description": "Update resources with PUT requests", "parameter": {"url": "(string) The URL to send the PUT request to", "data": "(Optional, dict or string) Data to send in the body of the request", "json": "(Optional, dict) JSON data to send in the body of the request", "headers": "(Optional, dict) Additional headers to include in the request", "cookies": "(Optional, dict) Cookies to include in the request", "files": "(Optional, dict) Files to send in the body of the request"}}, {"name": "http_delete", "description": "Remove resources with DELETE requests", "parameter": {"url": "(string) The URL to send the DELETE request to", "headers": "(Optional, dict) Additional headers to include in the request", "cookies": "(Optional, dict) Cookies to include in the request"}}, {"name": "http_patch", "description": "Partially update resources", "parameter": {"url": "(string) The URL to send the PATCH request to", "data": "(Optional, dict or string) Data to send in the body of the request", "json": "(Optional, dict) JSON data to send in the body of the request", "headers": "(Optional, dict) Additional headers to include in the request", "cookies": "(Optional, dict) Cookies to include in the request", "files": "(Optional, dict) Files to send in the body of the request"}}, {"name": "http_head", "description": "Retrieve only headers from a resource", "parameter": {"url": "(string) The URL to send the HEAD request to", "headers": "(Optional, dict) Additional headers to include in the request", "cookies": "(Optional, dict) Cookies to include in the request"}}, {"name": "http_options", "description": "Retrieve options for a resource", "parameter": {"url": "(string) The URL to send the OPTIONS request to", "headers": "(Optional, dict) Additional headers to include in the request", "cookies": "(Optional, dict) Cookies to include in the request"}}, {"name": "http_trace", "description": "Diagnostic request tracing", "parameter": {"url": "(string) The URL to send the TRACE request to", "headers": "(Optional, dict) Additional headers to include in the request", "cookies": "(Optional, dict) Cookies to include in the request"}}, {"name": "get_stored_response", "description": "Retrieve stored large responses, optionally by line range", "parameter": {"response_id": "(string) The ID of the stored response", "start_line": "(Optional, int) The starting line number to retrieve", "end_line": "(Optional, int) The ending line number to retrieve"}}, {"name": "get_stored_response_with_markdown", "description": "Convert HTML or PDF responses to Markdown format for better LLM processing", "parameter": {"response_id": "(string) The ID of the stored response", "start_line": "(Optional, int) The starting line number to retrieve", "end_line": "(Optional, int) The ending line number to retrieve"}}, {"name": "get_model_state", "description": "Get the current state of the PDF models loading process", "parameter": {}}, {"name": "restart_model_loading", "description": "Restart the PDF models loading process if it failed or got stuck", "parameter": {}}], "domains": [{"name": "API Development & Testing", "description": "API开发与测试，包括API规范验证、接口测试、文档生成及SDK生成"}, {"name": "Document Format Conversion", "description": "文档格式转换,实现不同文档类型（如 PDF/Word/Markdown）的兼容性转换"}]}
{"name": "Rijksmuseum", "description": "1.使用多种条件搜索和筛选艺术品 2.检索艺术品的详细信息 3.访问高分辨率图像数据 4.浏览用户创建的收藏集 5.访问特定用户收藏集的详细信息 6.在浏览器中直接查看艺术品图像 7.生成艺术家作品的时间线", "tools": [{"name": "search_artwork", "description": "Search and filter artworks using various criteria including text-based search, artist name, artwork type, materials and techniques, time periods, colors, and more.", "parameter": {}}, {"name": "get_artwork_details", "description": "Retrieve comprehensive information about specific artworks, including basic details, physical properties, historical context, visual information, curatorial information, and exhibition history.", "parameter": {}}, {"name": "get_artwork_image", "description": "Access high-resolution image data with deep zoom capabilities, including multiple zoom levels, tile-based image loading, full resolution support, and position information.", "parameter": {}}, {"name": "get_user_sets", "description": "Explore user-created collections, allowing users to browse curated sets, view thematic groupings, and analyze collection patterns.", "parameter": {}}, {"name": "get_user_set_details", "description": "Access detailed information about specific user-created collections.", "parameter": {}}, {"name": "open_image_in_browser", "description": "Open artwork images directly in the browser for detailed viewing.", "parameter": {}}, {"name": "get_artist_timeline", "description": "Generate chronological timelines of artists' works, tracking artistic development, analyzing periods and styles, and studying career progression.", "parameter": {}}], "domains": [{"name": "Art Collection Management", "description": "艺术品收藏管理，包括艺术品搜索、详细信息检索、高分辨率图像访问、用户收藏集浏览及艺术家作品时间线生成"}]}
{"name": "Riot Games", "description": "1. Summarize player level, rank, top champions, and recent matches 2. Return top champions by mastery points 3. Return mastery details for a specific champion 4. Return recent matches for a summoner 5. Return match performance stats for a given match ID and puuid", "tools": [{"name": "get_player_summary", "description": "Summarizes level, rank, top champions, and recent matches.", "parameter": {}}, {"name": "get_top_champions_tool", "description": "Returns top champions by mastery points.", "parameter": {}}, {"name": "get_champion_mastery_tool", "description": "Returns mastery details for a specific champion.", "parameter": {}}, {"name": "get_recent_matches_tool", "description": "Returns recent matches for the given summoner.", "parameter": {}}, {"name": "get_match_summary", "description": "Returns match performance stats for a given match ID and puuid.", "parameter": {}}], "domains": [{"name": "Sports Data Analysis", "description": "Sports data retrieval and analysis, including game statistics, team records, play-by-play data, and advanced analytics"}]}
{"name": "Scholarly", "description": "Search arXiv for articles related to the given keyword", "tools": [{"name": "search-arxiv", "description": "Search arXiv for articles related to the given keyword.", "parameter": {"keyword": "(string) The keyword to search for."}}], "domains": [{"name": "Web Search", "description": "网页信息检索,通过关键词查询公开网页内容,支持多类型信息主动获取"}]}
{"name": "scrapling-fetch", "description": "1. Retrieve complete web pages with pagination support 2. Extract content matching regex patterns with surrounding context", "tools": [{"name": "s-fetch-page", "description": "Retrieves complete web pages with pagination support.", "parameter": {"url": "(string) The URL of the web page to fetch.", "mode": "(string) The protection level to use ('basic', 'stealth', 'max-stealth').", "start_index": "(Optional, integer) The starting index for pagination.", "max_length": "(Optional, integer) The maximum length of content to retrieve."}}, {"name": "s-fetch-pattern", "description": "Extracts content matching regex patterns with surrounding context.", "parameter": {"url": "(string) The URL of the web page to fetch.", "mode": "(string) The protection level to use ('basic', 'stealth', 'max-stealth').", "search_pattern": "(string) The regex pattern to search for.", "context_chars": "(integer) The number of characters of context to include around matches."}}], "domains": [{"name": "Web Data Acquisition", "description": "网络数据采集,包含网页爬虫、内容提取、反爬处理及代码仓库索引分析"}]}
{"name": "SearXNG", "description": "1. Execute web searches with pagination using SearxNG 2. Read and convert URL content to markdown", "tools": [{"name": "searxng_web_search", "description": "Execute web searches with pagination", "parameter": {"query": "(string) The search query. This string is passed to external search services.", "pageno": "(Optional, number) Search page number, starts at 1 (default 1)", "time_range": "(Optional, string) Filter results by time range - one of: 'day', 'month', 'year' (default: none)", "language": "(Optional, string) Language code for results (e.g., 'en', 'fr', 'de') or 'all' (default: 'all')", "safesearch": "(Optional, number) Safe search filter level (0: None, 1: Moderate, 2: Strict) (default: instance setting)"}}, {"name": "web_url_read", "description": "Read and convert the content from a URL to markdown", "parameter": {"url": "(string) The URL to fetch and process"}}], "domains": [{"name": "Web Search", "description": "网页信息检索,通过关键词查询公开网页内容,支持多类型信息主动获取"}, {"name": "Document Format Conversion", "description": "文档格式转换,实现不同文档类型（如 PDF/Word/Markdown）的兼容性转换"}]}
{"name": "SEC EDGAR", "description": "1. Fetch a company's submissions (filings history) by CIK 2. Get a specific reported concept for a company by CIK, taxonomy, and tag 3. Retrieve all facts for a company (full XBRL fact set) by CIK 4. Query XBRL frames (data across entities or time) by taxonomy, tag, unit, year, and quarter", "tools": [{"name": "get_submissions", "description": "Fetch a company's submissions (filings history) by CIK.", "parameter": {"cik": "(string) The Central Index Key (CIK) of the company."}}, {"name": "get_company_concepts", "description": "Get a specific reported concept for a company by CIK, taxonomy, and tag.", "parameter": {"cik": "(string) The Central Index Key (CIK) of the company.", "taxonomy": "(string) The accounting taxonomy (e.g., us-gaap).", "tag": "(string) The specific financial concept tag (e.g., AccountsPayableCurrent)."}}, {"name": "get_company_facts", "description": "Retrieve all facts for a company (full XBRL fact set) by CIK.", "parameter": {"cik": "(string) The Central Index Key (CIK) of the company."}}, {"name": "get_xbrl_frames", "description": "Query XBRL frames (data across entities or time) by taxonomy, tag, unit, year, and quarter.", "parameter": {"taxonomy": "(string) The accounting taxonomy (e.g., us-gaap).", "tag": "(string) The specific financial concept tag (e.g., AccountsPayableCurrent).", "unit": "(string) The unit of measurement (e.g., USD).", "year": "(integer) The year of the data.", "quarter": "(integer) The quarter of the data (1-4)."}}], "domains": [{"name": "Financial Service", "description": "金融服务,包括支付处理、理财管理、云成本分析及财务报表生成"}]}
{"name": "ServiceNow", "description": "ServiceNow平台操作，包括：事件管理、服务目录管理、变更请求管理、工作流管理、脚本管理、变更集管理、知识库管理、用户与群组管理、UI策略管理及工具包管理", "tools": [{"name": "create_incident", "description": "Create a new incident in ServiceNow", "parameter": {}}, {"name": "update_incident", "description": "Update an existing incident in ServiceNow", "parameter": {}}, {"name": "add_comment", "description": "Add a comment to an incident in ServiceNow", "parameter": {}}, {"name": "resolve_incident", "description": "Resolve an incident in ServiceNow", "parameter": {}}, {"name": "list_incidents", "description": "List incidents from ServiceNow", "parameter": {}}, {"name": "list_catalog_items", "description": "List service catalog items from ServiceNow", "parameter": {}}, {"name": "get_catalog_item", "description": "Get a specific service catalog item from ServiceNow", "parameter": {}}, {"name": "list_catalog_categories", "description": "List service catalog categories from ServiceNow", "parameter": {}}, {"name": "create_catalog_category", "description": "Create a new service catalog category in ServiceNow", "parameter": {}}, {"name": "update_catalog_category", "description": "Update an existing service catalog category in ServiceNow", "parameter": {}}, {"name": "move_catalog_items", "description": "Move catalog items between categories in ServiceNow", "parameter": {}}, {"name": "create_catalog_item_variable", "description": "Create a new variable (form field) for a catalog item", "parameter": {}}, {"name": "list_catalog_item_variables", "description": "List all variables for a catalog item", "parameter": {}}, {"name": "update_catalog_item_variable", "description": "Update an existing variable for a catalog item", "parameter": {}}, {"name": "list_catalogs", "description": "List service catalogs from ServiceNow", "parameter": {}}, {"name": "get_optimization_recommendations", "description": "Get recommendations for optimizing the service catalog", "parameter": {}}, {"name": "update_catalog_item", "description": "Update a service catalog item", "parameter": {}}, {"name": "create_change_request", "description": "Create a new change request in ServiceNow", "parameter": {}}, {"name": "update_change_request", "description": "Update an existing change request", "parameter": {}}, {"name": "list_change_requests", "description": "List change requests with filtering options", "parameter": {}}, {"name": "get_change_request_details", "description": "Get detailed information about a specific change request", "parameter": {}}, {"name": "add_change_task", "description": "Add a task to a change request", "parameter": {}}, {"name": "submit_change_for_approval", "description": "Submit a change request for approval", "parameter": {}}, {"name": "approve_change", "description": "Approve a change request", "parameter": {}}, {"name": "reject_change", "description": "Reject a change request", "parameter": {}}, {"name": "list_workflows", "description": "List workflows from ServiceNow", "parameter": {}}, {"name": "get_workflow", "description": "Get a specific workflow from ServiceNow", "parameter": {}}, {"name": "create_workflow", "description": "Create a new workflow in ServiceNow", "parameter": {}}, {"name": "update_workflow", "description": "Update an existing workflow in ServiceNow", "parameter": {}}, {"name": "delete_workflow", "description": "Delete a workflow from ServiceNow", "parameter": {}}, {"name": "list_script_includes", "description": "List script includes from ServiceNow", "parameter": {}}, {"name": "get_script_include", "description": "Get a specific script include from ServiceNow", "parameter": {}}, {"name": "create_script_include", "description": "Create a new script include in ServiceNow", "parameter": {}}, {"name": "update_script_include", "description": "Update an existing script include in ServiceNow", "parameter": {}}, {"name": "delete_script_include", "description": "Delete a script include from ServiceNow", "parameter": {}}, {"name": "list_changesets", "description": "List changesets from ServiceNow with filtering options", "parameter": {}}, {"name": "get_changeset_details", "description": "Get detailed information about a specific changeset", "parameter": {}}, {"name": "create_changeset", "description": "Create a new changeset in ServiceNow", "parameter": {}}, {"name": "update_changeset", "description": "Update an existing changeset", "parameter": {}}, {"name": "commit_changeset", "description": "Commit a changeset", "parameter": {}}, {"name": "publish_changeset", "description": "Publish a changeset", "parameter": {}}, {"name": "add_file_to_changeset", "description": "Add a file to a changeset", "parameter": {}}, {"name": "create_knowledge_base", "description": "Create a new knowledge base in ServiceNow", "parameter": {}}, {"name": "list_knowledge_bases", "description": "List knowledge bases with filtering options", "parameter": {}}, {"name": "create_category", "description": "Create a new category in a knowledge base", "parameter": {}}, {"name": "create_article", "description": "Create a new knowledge article in ServiceNow", "parameter": {}}, {"name": "update_article", "description": "Update an existing knowledge article in ServiceNow", "parameter": {}}, {"name": "publish_article", "description": "Publish a knowledge article in ServiceNow", "parameter": {}}, {"name": "list_articles", "description": "List knowledge articles with filtering options", "parameter": {}}, {"name": "get_article", "description": "Get a specific knowledge article by ID", "parameter": {}}, {"name": "create_user", "description": "Create a new user in ServiceNow", "parameter": {}}, {"name": "update_user", "description": "Update an existing user in ServiceNow", "parameter": {}}, {"name": "get_user", "description": "Get a specific user by ID, username, or email", "parameter": {}}, {"name": "list_users", "description": "List users with filtering options", "parameter": {}}, {"name": "create_group", "description": "Create a new group in ServiceNow", "parameter": {}}, {"name": "update_group", "description": "Update an existing group in ServiceNow", "parameter": {}}, {"name": "add_group_members", "description": "Add members to a group in ServiceNow", "parameter": {}}, {"name": "remove_group_members", "description": "Remove members from a group in ServiceNow", "parameter": {}}, {"name": "list_groups", "description": "List groups with filtering options", "parameter": {}}, {"name": "create_ui_policy", "description": "Creates a ServiceNow UI Policy, typically for a Catalog Item", "parameter": {}}, {"name": "create_ui_policy_action", "description": "Creates an action associated with a UI Policy to control variable states (visibility, mandatory, etc.)", "parameter": {}}, {"name": "list_tool_packages", "description": "Lists all available tool package names defined in the configuration and shows the currently loaded package", "parameter": {}}], "domains": [{"name": "Business Management", "description": "业务管理，包括业务信息获取、位置管理、营业时间更新及媒体内容管理"}, {"name": "User & Access Management", "description": "用户与访问管理，包括用户信息检索、群组成员列表及权限定义管理"}, {"name": "Content Management", "description": "内容管理，包括博客文章的创建、更新、检索及媒体上传"}]}
{"name": "Shopify", "description": "1.获取所有产品或按标题搜索 2.通过ID获取特定产品 3.获取客户或按名称/电子邮件搜索 4.更新客户信息 5.获取特定客户的订单 6.获取订单并可选过滤 7.通过ID获取特定订单 8.更新现有订单信息", "tools": [{"name": "get-products", "description": "Get all products or search by title", "parameter": {"searchTitle": "(optional string) Filter products by title", "limit": "(number) Maximum number of products to return"}}, {"name": "get-product-by-id", "description": "Get a specific product by ID", "parameter": {"productId": "(string) ID of the product to retrieve"}}, {"name": "get-customers", "description": "Get customers or search by name/email", "parameter": {"searchQuery": "(optional string) Filter customers by name or email", "limit": "(optional number, default: 10) Maximum number of customers to return"}}, {"name": "update-customer", "description": "Update a customer's information", "parameter": {"id": "(string, required) Shopify customer ID (numeric ID only, like \"6276879810626\")", "firstName": "(string, optional) Customer's first name", "lastName": "(string, optional) Customer's last name", "email": "(string, optional) Customer's email address", "phone": "(string, optional) Customer's phone number", "tags": "(array of strings, optional) Tags to apply to the customer", "note": "(string, optional) Note about the customer", "taxExempt": "(boolean, optional) Whether the customer is exempt from taxes", "metafields": "(array of objects, optional) Customer metafields for storing additional data"}}, {"name": "get-customer-orders", "description": "Get orders for a specific customer", "parameter": {"customerId": "(string, required) Shopify customer ID (numeric ID only, like \"6276879810626\")", "limit": "(optional number, default: 10) Maximum number of orders to return"}}, {"name": "get-orders", "description": "Get orders with optional filtering", "parameter": {"status": "(optional string) Filter by order status", "limit": "(optional number, default: 10) Maximum number of orders to return"}}, {"name": "get-order-by-id", "description": "Get a specific order by ID", "parameter": {"orderId": "(string, required) Full Shopify order ID (e.g., \"gid://shopify/Order/6090960994370\")"}}, {"name": "update-order", "description": "Update an existing order with new information", "parameter": {"id": "(string, required) Shopify order ID", "tags": "(array of strings, optional) New tags for the order", "email": "(string, optional) Update customer email", "note": "(string, optional) Order notes", "customAttributes": "(array of objects, optional) Custom attributes for the order", "metafields": "(array of objects, optional) Order metafields", "shippingAddress": "(object, optional) Shipping address information"}}], "domains": [{"name": "Business Management", "description": "业务管理，包括业务信息获取、位置管理、营业时间更新及媒体内容管理"}]}
{"name": "Siri Shortcuts", "description": "1.列出系统上所有可用的Siri快捷方式 2.在快捷方式应用中打开快捷方式 3.运行带有可选输入的快捷方式", "tools": [{"name": "list_shortcuts", "description": "Lists all available Siri shortcuts on the system", "parameter": {}}, {"name": "open_shortcut", "description": "Opens a shortcut in the Shortcuts app", "parameter": {"name": "(string) Name of the shortcut to open"}}, {"name": "run_shortcut", "description": "Runs a shortcut with optional input", "parameter": {"name": "(string) Name of the shortcut to run", "input": "(Optional, string) Text input or filepath to pass to the shortcut"}}], "domains": [{"name": "Home Automation", "description": "智能家居自动化控制，包括设备控制、插件管理、自动化配置及批量操作执行"}]}
{"name": "Slack", "description": "1.通过channelID获取频道消息 2.获取频道列表", "tools": [{"name": "conversations_history", "description": "Get messages from the channel by channelID", "parameter": {"channel_id": "(string) ID of the channel in format Cxxxxxxxxxx.", "cursor": "(string) Cursor for pagination. Use the value of the last row and column in the response as next_cursor field returned from the previous request.", "limit": "(number, default: 28) Limit of messages to fetch."}}, {"name": "channels_list", "description": "Get list of channels", "parameter": {"channel_types": "(array) Possible channel types. Allowed values: 'mpim', 'im', 'public_channel', 'private_channel'.", "sort": "(string) Type of sorting. Allowed values: 'popularity' - sort by number of members/participants in each channel."}}], "domains": [{"name": "Social Media Management", "description": "社交媒体账号运营,涵盖内容发布、粉丝互动、多平台批量管理与舆情分析"}]}
{"name": "Snowflake", "description": "Snowflake数据库操作,包括:数据查询(SELECT)、数据写入(INSERT/UPDATE/DELETE)、表创建、数据库/模式/表列表查询、表结构描述、数据洞察添加", "tools": [{"name": "read_query", "description": "Execute SELECT queries to read data from the database.", "parameter": {"query": "(string) The SELECT SQL query to execute"}}, {"name": "write_query", "description": "Execute INSERT, UPDATE, or DELETE queries.", "parameter": {"query": "(string) The SQL modification query"}}, {"name": "create_table", "description": "Create new tables in the database.", "parameter": {"query": "(string) CREATE TABLE SQL statement"}}, {"name": "list_databases", "description": "List all databases in the Snowflake instance.", "parameter": {}}, {"name": "list_schemas", "description": "List all schemas within a specific database.", "parameter": {"database": "(string) Name of the database"}}, {"name": "list_tables", "description": "List all tables within a specific database and schema.", "parameter": {"database": "(string) Name of the database", "schema": "(string) Name of the schema"}}, {"name": "describe_table", "description": "View column information for a specific table.", "parameter": {"table_name": "(string) Fully qualified table name (database.schema.table)"}}, {"name": "append_insight", "description": "Add new data insights to the memo resource.", "parameter": {"insight": "(string) Data insight discovered from analysis"}}], "domains": [{"name": "DataBase Management", "description": "数据库管理，涵盖数据库创建、查询、优化、备份及数据结构设计"}]}
{"name": "Solver", "description": "1. Remove all items from the model 2. Add new item at a specific index 3. Delete item at index 4. Replace item at index 5. Get current model content with numbered items 6. Solve the model with timeout parameter", "tools": [{"name": "clear_model", "description": "Remove all items from the model", "parameter": {}}, {"name": "add_item", "description": "Add new item at a specific index", "parameter": {}}, {"name": "delete_item", "description": "Delete item at index", "parameter": {}}, {"name": "replace_item", "description": "Replace item at index", "parameter": {}}, {"name": "get_model", "description": "Get current model content with numbered items", "parameter": {}}, {"name": "solve_model", "description": "Solve the model (with timeout parameter)", "parameter": {"timeout": "(Optional, int) Maximum time allowed for solving the model in seconds"}}], "domains": [{"name": "Data Management", "description": "数据管理，包括数据查询、提取、传输和配置管理"}]}
{"name": "SoccerDataAPI", "description": "获取全球实时足球比赛信息", "tools": [{"name": "get_livescores", "description": "Returns real-time information about ongoing football matches around the world.", "parameter": {}}], "domains": [{"name": "Sports Data Analysis", "description": "Sports data retrieval and analysis, including game statistics, team records, play-by-play data, and advanced analytics"}]}
{"name": "Solana Agent Kit", "description": "1.部署和管理SPL代币 2.使用Wormhole进行跨链代币转移和包装 3.创建和管理NFT集合 4.使用DEX进行代币交换 5.资产借贷和质押 6.使用ZK压缩发送空投 7.获取Pyth价格数据 8.进行永续合约交易 9.管理Drift账户和保险库 10.Voltr策略存款和提款 11.获取Solana资产信息和价格推断 12.使用deBridge进行跨链订单创建和执行 13.获取代币价格数据和趋势信息 14.在OKX DEX上执行代币交换", "tools": [{"name": "deployToken", "description": "Deploys a new SPL token.", "parameter": {"name": "(string) Name of the token", "uri": "(string) URI for the token metadata", "symbol": "(string) Symbol of the token", "decimals": "(number) Number of decimal places", "mintAuthority": "(Optional, PublicKey) Mint authority (defaults to deployer account)", "freezeAuthority": "(Optional, PublicKey) Freeze authority (defaults to deployer account)", "updateAuthority": "(Optional, PublicKey) Update authority (defaults to deployer account)", "isMutable": "(Optional, boolean) Whether the metadata is mutable (defaults to true)", "initialSupply": "(number) Initial supply of the token"}}, {"name": "getWormholeSupportedChains", "description": "Gets the list of supported chains using Wormhole.", "parameter": {}}, {"name": "createWrappedToken", "description": "Creates a wrapped token on a target chain using Wormhole.", "parameter": {"destinationChain": "(string) Target chain", "tokenAddress": "(string) Original token address", "network": "(string) Network type (Testnet or Mainnet)"}}, {"name": "cctpTransfer", "description": "Performs a CCTP transfer using Wormhole.", "parameter": {"destinationChain": "(string) Target chain", "transferAmount": "(string) Amount to transfer", "network": "(string) Network type (Testnet or Mainnet)"}}, {"name": "tokenTransfer", "description": "Transfers an SPL token using Wormhole.", "parameter": {"destinationChain": "(string) Target chain", "tokenAddress": "(string) Original token address or leave it empty to transfer Native SOL", "network": "(string) Network type (Testnet or Mainnet)"}}, {"name": "create3LandCollection", "description": "Creates a new NFT collection on 3Land.", "parameter": {"collectionOpts": "(CreateCollectionOptions) Options for the collection", "isDevnet": "(Optional, boolean) Whether to use devnet (defaults to false)", "priorityFeeParam": "(Optional, number) Priority fee (defaults to 50000)"}}, {"name": "create3LandNft", "description": "Creates a new NFT on 3Land.", "parameter": {"collectionAccount": "(string) Hash for the collection", "createItemOptions": "(CreateSingleOptions) Options for the NFT", "isDevnet": "(Optional, boolean) Whether to use devnet (defaults to false)", "withPool": "(Optional, boolean) Whether to create with a liquidity pool", "priorityFeeParam": "(Optional, number) Priority fee (defaults to 50000)"}}, {"name": "deployCollection", "description": "Deploys a new NFT collection.", "parameter": {"name": "(string) Name of the collection", "uri": "(string) URI for the collection metadata", "royaltyBasisPoints": "(number) Royalty basis points", "creators": "(Creator[]) Array of creator objects"}}, {"name": "trade", "description": "Swaps tokens using a DEX.", "parameter": {"targetTokenMint": "(PublicKey) Target token mint", "amount": "(number) Amount to trade", "sourceTokenMint": "(PublicKey) Source token mint", "slippage": "(number) Slippage tolerance"}}, {"name": "lendAssets", "description": "Lends assets to a lending protocol.", "parameter": {"amount": "(number) Amount of USDC to lend"}}, {"name": "stake", "description": "Stakes SOL.", "parameter": {"amount": "(number) Amount in SOL to stake"}}, {"name": "restake", "description": "Restakes SOL on Solayer.", "parameter": {"amount": "(number) Amount in SOL to stake"}}, {"name": "sendCompressedAirdrop", "description": "Sends a compressed airdrop using ZK compression.", "parameter": {"mint": "(PublicKey) Token mint", "amountPerRecipient": "(number) Amount per recipient", "recipients": "(PublicKey[]) Array of recipient public keys", "priorityFee": "(number) Priority fee in lamports"}}, {"name": "getPythPriceFeedID", "description": "Gets the Pyth price feed ID for a given asset.", "parameter": {"asset": "(string) Asset symbol"}}, {"name": "getPythPrice", "description": "Fetches the price from a Pyth price feed.", "parameter": {"priceFeedID": "(string) Pyth price feed ID"}}, {"name": "openPerpTradeLong", "description": "Opens a long perpetual trade.", "parameter": {"price": "(number) Maximum price", "collateralAmount": "(number) Collateral amount", "collateralMint": "(PublicKey) Collateral mint", "leverage": "(number) Leverage", "tradeMint": "(PublicKey) Trade mint", "slippage": "(number) Slippage tolerance"}}, {"name": "closePerpTradeLong", "description": "Closes a long perpetual trade.", "parameter": {"price": "(number) Price", "tradeMint": "(PublicKey) Trade mint"}}, {"name": "closeEmptyTokenAccounts", "description": "Closes empty token accounts.", "parameter": {}}, {"name": "createDriftUserAccount", "description": "Creates a new Drift user account.", "parameter": {}}, {"name": "createDriftVault", "description": "Creates a new Drift vault.", "parameter": {"name": "(string) Name of the vault", "marketName": "(string) Market name", "redeemPeriod": "(number) Redemption period in days", "maxTokens": "(number) Maximum tokens", "minDepositAmount": "(number) Minimum deposit amount", "managementFee": "(number) Management fee in percentage", "profitShare": "(number) Profit share in percentage", "hurdleRate": "(number) Hurdle rate in percentage", "permissioned": "(boolean) Whether the vault is permissioned"}}, {"name": "depositIntoDriftVault", "description": "Deposits tokens into a Drift vault.", "parameter": {"amount": "(number) Amount to deposit", "vaultAddress": "(string) Vault address"}}, {"name": "depositToDriftUserAccount", "description": "Deposits tokens into a Drift user account.", "parameter": {"amount": "(number) Amount to deposit", "token": "(string) Token symbol", "isLoan": "(Optional, boolean) Whether the deposit is a loan (defaults to false)"}}, {"name": "deriveDriftVaultAddress", "description": "Derives the address of a Drift vault.", "parameter": {"name": "(string) Name of the vault"}}, {"name": "doesUserHaveDriftAccount", "description": "Checks if the user has a Drift account.", "parameter": {}}, {"name": "driftUserAccountInfo", "description": "Gets information about the Drift user account.", "parameter": {}}, {"name": "requestWithdrawalFromDriftVault", "description": "Requests a withdrawal from a Drift vault.", "parameter": {"amount": "(number) Amount to withdraw", "vaultAddress": "(string) Vault address"}}, {"name": "tradeUsingDelegatedDriftVault", "description": "Executes a trade using a delegated Drift vault.", "parameter": {"vault": "(string) Vault address", "amount": "(number) Trade amount", "symbol": "(string) Trade symbol", "action": "(string) Action (long or short)", "type": "(string) Order type (limit or market)", "price": "(number) Price"}}, {"name": "tradeUsingDriftPerpAccount", "description": "Executes a trade using the user's Drift perpetual account.", "parameter": {"amount": "(number) Trade amount", "symbol": "(string) Trade symbol", "action": "(string) Action (long or short)", "type": "(string) Order type (limit or market)", "price": "(number) Price"}}, {"name": "updateDriftVault", "description": "Updates the parameters of a Drift vault.", "parameter": {"name": "(string) Name of the vault", "marketName": "(string) Market name", "redeemPeriod": "(number) Redemption period in days", "maxTokens": "(number) Maximum tokens", "minDepositAmount": "(number) Minimum deposit amount", "managementFee": "(number) Management fee in percentage", "profitShare": "(number) Profit share in percentage", "hurdleRate": "(number) Hurdle rate in percentage", "permissioned": "(boolean) Whether the vault is permissioned"}}, {"name": "withdrawFromDriftAccount", "description": "Withdraws tokens from the Drift user account.", "parameter": {"amount": "(number) Amount to withdraw", "token": "(string) Token symbol"}}, {"name": "withdrawFromDriftAccount", "description": "Withdraws tokens from the Drift user account.", "parameter": {"amount": "(number) Amount to withdraw", "token": "(string) Token symbol", "isLoan": "(Optional, boolean) Whether the withdrawal is a loan repayment (defaults to false)"}}, {"name": "withdrawFromDriftVault", "description": "Withdraws tokens from a Drift vault.", "parameter": {"vaultAddress": "(string) Vault address"}}, {"name": "updateDriftVaultDelegate", "description": "Updates the delegate address for a Drift vault.", "parameter": {"vaultAddress": "(string) Vault address", "newDelegate": "(string) New delegate address"}}, {"name": "voltrGetPositionValues", "description": "Gets the current position values and total value of assets in a Voltr vault.", "parameter": {"vaultAddress": "(string) Vault address"}}, {"name": "voltrDepositStrategy", "description": "Deposits assets into a specific strategy within a Voltr vault.", "parameter": {"amount": "(BN) Amount in base units", "vault": "(string) Vault address", "strategy": "(string) Strategy address"}}, {"name": "voltrWithdrawStrategy", "description": "Withdraws assets from a specific strategy within a Voltr vault.", "parameter": {"amount": "(BN) Amount in base units", "vault": "(string) Vault address", "strategy": "(string) Strategy address"}}, {"name": "getAsset", "description": "Gets a Solana asset by its ID.", "parameter": {"assetId": "(string) Asset ID"}}, {"name": "getPriceInference", "description": "Gets the price inference for a given token and timeframe from Allora.", "parameter": {"token": "(string) Token symbol", "timeframe": "(string) Timeframe (e.g., 5m, 1h)"}}, {"name": "getAllTopics", "description": "Lists all topics from Allora.", "parameter": {}}, {"name": "getInferenceByTopicId", "description": "Gets an inference for a specific topic from Allora.", "parameter": {"topicId": "(number) Topic ID"}}, {"name": "simulateSwitchboardFeed", "description": "Simulates a given Switchboard feed.", "parameter": {"feed": "(string) Feed ID", "oracleUrl": "(string) Oracle URL"}}, {"name": "swap", "description": "Executes a cross-chain token swap.", "parameter": {"amount": "(string) Amount to swap", "fromChain": "(string) Source chain", "fromToken": "(string) Source token address", "toChain": "(string) Destination chain", "toToken": "(string) Destination token address", "dstAddr": "(string) Destination address"}}, {"name": "getDebridgeSupportedChains", "description": "Gets the list of supported chains using deBridge.", "parameter": {}}, {"name": "getDebridgeTokensInfo", "description": "Gets information about tokens on a specific chain using deBridge.", "parameter": {"chainId": "(string) Chain ID", "token": "(string) Token symbol"}}, {"name": "createDebridgeOrder", "description": "Creates a deBridge order.", "parameter": {"srcChainId": "(string) Source chain ID", "srcChainTokenIn": "(string) Source token mint", "srcChainTokenInAmount": "(string) Amount of source token", "dstChainId": "(string) Destination chain ID", "dstChainTokenOut": "(string) Destination token mint", "dstChainTokenOutRecipient": "(string) Recipient address on destination chain"}}, {"name": "executeDebridgeOrder", "description": "Executes a deBridge order.", "parameter": {"txData": "(string) Transaction data"}}, {"name": "checkDebridgeTransactionStatus", "description": "Checks the status of a deBridge transaction.", "parameter": {"signature": "(string) Transaction signature"}}, {"name": "getTokenPriceData", "description": "Gets the price data for a list of tokens from CoinGecko.", "parameter": {"tokens": "(string[]) Array of token addresses"}}, {"name": "getTrendingTokens", "description": "Gets the list of trending tokens.", "parameter": {}}, {"name": "getLatestPools", "description": "Gets the list of latest pools.", "parameter": {}}, {"name": "getTokenInfo", "description": "Gets information about a specific token.", "parameter": {"tokenAddress": "(string) Token address"}}, {"name": "getTopGainers", "description": "Gets the list of top gainers for a given timeframe.", "parameter": {"timeframe": "(string) Timeframe (e.g., 24h, 7d)", "category": "(string) Category (e.g., all, stablecoins)"}}, {"name": "getTrendingPools", "description": "Gets the list of trending pools for a given timeframe.", "parameter": {"timeframe": "(string) Timeframe (e.g., 24h, 7d)"}}, {"name": "getTokens", "description": "Gets the list of supported tokens on OKX DEX.", "parameter": {}}, {"name": "getQuote", "description": "Gets a quote for a token swap on OKX DEX.", "parameter": {"fromTokenAddress": "(string) Source token address", "toTokenAddress": "(string) Destination token address", "amount": "(string) Amount to swap", "slippage": "(Optional, string) Slippage tolerance (defaults to 0.5%)"}}, {"name": "executeSwap", "description": "Executes a token swap on OKX DEX.", "parameter": {"fromTokenAddress": "(string) Source token address", "toTokenAddress": "(string) Destination token address", "amount": "(string) Amount to swap", "autoSlippage": "(Optional, boolean) Use auto slippage (defaults to false)", "slippage": "(Optional, string) Custom slippage (defaults to 0.1%)", "maxAutoSlippageBps": "(Optional, string) Maximum auto slippage in basis points (defaults to 100)", "userAddress": "(Optional, string) User wallet address"}}], "domains": [{"name": "Blockchain Service", "description": "区块链服务，包括智能合约状态读取、代理合约地址检索、事件日志获取及事件主题签名生成"}, {"name": "Financial Service", "description": "金融服务,包括支付处理、理财管理、云成本分析及财务报表生成"}]}
{"name": "Starwind UI", "description": "1.初始化Starwind UI项目 2.生成Starwind UI组件安装命令 3.生成Starwind UI组件更新命令 4.获取Starwind UI组件文档链接 5.从starwind.dev获取LLM数据 6.检测并返回当前包管理器信息", "tools": [{"name": "init_project", "description": "Initializes a new Starwind UI project", "parameter": {}}, {"name": "install_component", "description": "Generates installation commands for Starwind UI components", "parameter": {}}, {"name": "update_component", "description": "Generates update commands for Starwind UI components", "parameter": {}}, {"name": "get_documentation", "description": "Returns documentation links for Starwind UI components and guides", "parameter": {}}, {"name": "fetch_llm_data", "description": "Fetches LLM data from starwind.dev (rate limited, with caching)", "parameter": {}}, {"name": "get_package_manager", "description": "Detects and returns the current package manager information", "parameter": {}}], "domains": [{"name": "Tool Management", "description": "工具管理，包括工具信息的检索、搜索、添加和移除"}, {"name": "Web Data Acquisition", "description": "网络数据采集,包含网页爬虫、内容提取、反爬处理及代码仓库索引分析"}]}
{"name": "Strava", "description": "Strava API operations, including: fetching athlete profiles and activities, retrieving segment details, managing starred segments, exporting routes in GPX/TCX formats, and accessing activity streams and zones", "tools": [{"name": "get-recent-activities", "description": "Fetches the authenticated user's recent activities.", "parameter": {"perPage": "(Optional, number) Number of activities to retrieve. Default: 30"}}, {"name": "get-athlete-profile", "description": "Fetches the profile information for the authenticated athlete.", "parameter": {}}, {"name": "get-athlete-stats", "description": "Fetches activity statistics (recent, YTD, all-time) for the authenticated athlete.", "parameter": {}}, {"name": "get-activity-details", "description": "Fetches detailed information about a specific activity using its ID.", "parameter": {"activityId": "(Required, number) The unique identifier of the activity."}}, {"name": "list-athlete-clubs", "description": "Lists the clubs the authenticated athlete is a member of.", "parameter": {}}, {"name": "list-starred-segments", "description": "Lists the segments starred by the authenticated athlete.", "parameter": {}}, {"name": "get-segment", "description": "Fetches detailed information about a specific segment using its ID.", "parameter": {"segmentId": "(Required, number) The unique identifier of the segment."}}, {"name": "explore-segments", "description": "Searches for popular segments within a given geographical area (bounding box).", "parameter": {"bounds": "(Required, string) Comma-separated: south_west_lat,south_west_lng,north_east_lat,north_east_lng.", "activityType": "(Optional, string) Filter by activity type ('running' or 'riding').", "minCat": "(Optional, number) Minimum climb category. Requires activityType: 'riding'.", "maxCat": "(Optional, number) Maximum climb category. Requires activityType: 'riding'."}}, {"name": "star-segment", "description": "Stars or unstars a specific segment for the authenticated athlete.", "parameter": {"segmentId": "(Required, number) The unique identifier of the segment.", "starred": "(Required, boolean) true to star, false to unstar."}}, {"name": "get-segment-effort", "description": "Fetches detailed information about a specific segment effort using its ID.", "parameter": {"effortId": "(Required, number) The unique identifier of the segment effort."}}, {"name": "list-segment-efforts", "description": "Lists the authenticated athlete's efforts on a given segment, optionally filtered by date.", "parameter": {"segmentId": "(Required, number) The ID of the segment.", "startDateLocal": "(Optional, string) Filter efforts starting after this date-time (ISO 8601 format).", "endDateLocal": "(Optional, string) Filter efforts ending before this date-time (ISO 8601 format).", "perPage": "(Optional, number) Number of results per page. Default: 30"}}, {"name": "list-athlete-routes", "description": "Lists the routes created by the authenticated athlete.", "parameter": {"page": "(Optional, number) Page number for pagination.", "perPage": "(Optional, number) Number of routes per page. Default: 30"}}, {"name": "get-route", "description": "Fetches detailed information for a specific route using its ID.", "parameter": {"routeId": "(Required, number) The unique identifier of the route."}}, {"name": "export-route-gpx", "description": "Exports a specific route in GPX format and saves it locally.", "parameter": {"routeId": "(Required, number) The unique identifier of the route."}}, {"name": "export-route-tcx", "description": "Exports a specific route in TCX format and saves it locally.", "parameter": {"routeId": "(Required, number) The unique identifier of the route."}}, {"name": "get-activity-streams", "description": "Retrieves detailed time-series data streams from a Strava activity.", "parameter": {"id": "(Required, number | string) The Strava activity identifier to fetch streams for.", "types": "(Optional, array) Types of streams to fetch. Default: ['time', 'distance', 'heartrate', 'cadence', 'watts'].", "resolution": "(Optional, string) Data resolution/density. Values: 'low', 'medium', 'high'.", "series_type": "(Optional, string) Base series type for data point indexing. Default: 'distance'.", "page": "(Optional, number) Page number for paginated results. Default: 1.", "points_per_page": "(Optional, number) Number of data points per page. Default: 100. Special value: -1 returns ALL data points split into multiple messages."}}, {"name": "get-activity-laps", "description": "Retrieves the laps recorded for a specific Strava activity.", "parameter": {"id": "(Required, number | string) The unique identifier of the Strava activity."}}, {"name": "get-athlete-zones", "description": "Retrieves the authenticated athlete's configured heart rate and power zones.", "parameter": {}}], "domains": [{"name": "Sports Data Analysis", "description": "Sports data retrieval and analysis, including game statistics, team records, play-by-play data, and advanced analytics"}]}
{"name": "ShaderToy", "description": "1. Retrieve shader information from ShaderToy 2. Search for shaders on ShaderToy", "tools": [{"name": "get_shader_info", "description": "Retrieves information on any shader on ShaderToy.", "parameter": {}}, {"name": "search_shader", "description": "Searches for shaders available on ShaderToy through a search prompt.", "parameter": {}}], "domains": [{"name": "Game Development", "description": "游戏开发工具集，包括游戏引擎操作、场景管理、资源加载与调试功能"}]}
{"name": "Talk To Figma", "description": "Figma文档操作，包括：获取文档信息、节点操作（创建/修改/删除）、文本处理、布局设置、颜色与样式管理、组件实例操作、图像导出及通信通道管理", "tools": [{"name": "get_document_info", "description": "Get information about the current Figma document", "parameter": {}}, {"name": "get_selection", "description": "Get information about the current selection", "parameter": {}}, {"name": "read_my_design", "description": "Get detailed node information about the current selection without parameters", "parameter": {}}, {"name": "get_node_info", "description": "Get detailed information about a specific node", "parameter": {}}, {"name": "get_nodes_info", "description": "Get detailed information about multiple nodes by providing an array of node IDs", "parameter": {}}, {"name": "get_annotations", "description": "Get all annotations in the current document or specific node", "parameter": {}}, {"name": "set_annotation", "description": "Create or update an annotation with markdown support", "parameter": {}}, {"name": "set_multiple_annotations", "description": "Batch create/update multiple annotations efficiently", "parameter": {}}, {"name": "scan_nodes_by_types", "description": "Scan for nodes with specific types (useful for finding annotation targets)", "parameter": {}}, {"name": "get_reactions", "description": "Get all prototype reactions from nodes with visual highlight animation", "parameter": {}}, {"name": "set_default_connector", "description": "Set a copied FigJam connector as the default connector style for creating connections (must be set before creating connections)", "parameter": {}}, {"name": "create_connections", "description": "Create FigJam connector lines between nodes, based on prototype flows or custom mapping", "parameter": {}}, {"name": "create_rectangle", "description": "Create a new rectangle with position, size, and optional name", "parameter": {}}, {"name": "create_frame", "description": "Create a new frame with position, size, and optional name", "parameter": {}}, {"name": "create_text", "description": "Create a new text node with customizable font properties", "parameter": {}}, {"name": "scan_text_nodes", "description": "Scan text nodes with intelligent chunking for large designs", "parameter": {}}, {"name": "set_text_content", "description": "Set the text content of a single text node", "parameter": {}}, {"name": "set_multiple_text_contents", "description": "Batch update multiple text nodes efficiently", "parameter": {}}, {"name": "set_layout_mode", "description": "Set the layout mode and wrap behavior of a frame (NONE, HORIZONTAL, VERTICAL)", "parameter": {}}, {"name": "set_padding", "description": "Set padding values for an auto-layout frame (top, right, bottom, left)", "parameter": {}}, {"name": "set_axis_align", "description": "Set primary and counter axis alignment for auto-layout frames", "parameter": {}}, {"name": "set_layout_sizing", "description": "Set horizontal and vertical sizing modes for auto-layout frames (FIXED, HUG, FILL)", "parameter": {}}, {"name": "set_item_spacing", "description": "Set distance between children in an auto-layout frame", "parameter": {}}, {"name": "set_fill_color", "description": "Set the fill color of a node (RGBA)", "parameter": {}}, {"name": "set_stroke_color", "description": "Set the stroke color and weight of a node", "parameter": {}}, {"name": "set_corner_radius", "description": "Set the corner radius of a node with optional per-corner control", "parameter": {}}, {"name": "move_node", "description": "Move a node to a new position", "parameter": {}}, {"name": "resize_node", "description": "Resize a node with new dimensions", "parameter": {}}, {"name": "delete_node", "description": "Delete a node", "parameter": {}}, {"name": "delete_multiple_nodes", "description": "Delete multiple nodes at once efficiently", "parameter": {}}, {"name": "clone_node", "description": "Create a copy of an existing node with optional position offset", "parameter": {}}, {"name": "get_styles", "description": "Get information about local styles", "parameter": {}}, {"name": "get_local_components", "description": "Get information about local components", "parameter": {}}, {"name": "create_component_instance", "description": "Create an instance of a component", "parameter": {}}, {"name": "get_instance_overrides", "description": "Extract override properties from a selected component instance", "parameter": {}}, {"name": "set_instance_overrides", "description": "Apply extracted overrides to target instances", "parameter": {}}, {"name": "export_node_as_image", "description": "Export a node as an image (PNG, JPG, SVG, or PDF) - limited support on image currently returning base64 as text", "parameter": {}}, {"name": "join_channel", "description": "Join a specific channel to communicate with Figma", "parameter": {}}], "domains": [{"name": "Design Tool Integration", "description": "设计工具集成，包括文档信息获取、节点操作、文本处理、布局设置、颜色与样式管理、组件实例操作及图像导出"}]}
{"name": "TMDB", "description": "1.按标题或关键词搜索电影 2.根据电影ID获取推荐 3.获取指定时间窗口的热门电影", "tools": [{"name": "search_movies", "description": "Search for movies by title or keywords", "parameter": {"query": "(string) Search query"}}, {"name": "get_recommendations", "description": "Get movie recommendations based on a movie ID", "parameter": {"movieId": "(string) TMDB movie ID"}}, {"name": "get_trending", "description": "Get trending movies for a specified time window", "parameter": {"timeWindow": "(string) Either 'day' or 'week'"}}], "domains": [{"name": "Content Management", "description": "内容管理，包括博客文章的创建、更新、检索及媒体上传"}]}
{"name": "Tavily search", "description": "1.使用AI进行全面的网页搜索和内容提取 2.生成带有证据的直接答案 3.搜索最近的新闻文章", "tools": [{"name": "tavily_web_search", "description": "Performs comprehensive web searches with AI-powered content extraction.", "parameter": {"query": "(string, required) Search query", "max_results": "(integer, optional) Maximum number of results to return (default: 5, max: 20)", "search_depth": "(string, optional) Either 'basic' or 'advanced' search depth (default: 'basic')", "include_domains": "(list or string, optional) List of domains to specifically include in results", "exclude_domains": "(list or string, optional) List of domains to exclude from results"}}, {"name": "tavily_answer_search", "description": "Performs web searches and generates direct answers with supporting evidence.", "parameter": {"query": "(string, required) Search query", "max_results": "(integer, optional) Maximum number of results to return (default: 5, max: 20)", "search_depth": "(string, optional) Either 'basic' or 'advanced' search depth (default: 'advanced')", "include_domains": "(list or string, optional) List of domains to specifically include in results", "exclude_domains": "(list or string, optional) List of domains to exclude from results"}}, {"name": "tavily_news_search", "description": "Searches recent news articles with publication dates.", "parameter": {"query": "(string, required) Search query", "max_results": "(integer, optional) Maximum number of results to return (default: 5, max: 20)", "days": "(integer, optional) Number of days back to search (default: 3)", "include_domains": "(list or string, optional) List of domains to specifically include in results", "exclude_domains": "(list or string, optional) List of domains to exclude from results"}}], "domains": [{"name": "Web Search", "description": "网页信息检索,通过关键词查询公开网页内容,支持多类型信息主动获取"}, {"name": "News & Content Services", "description": "新闻与内容服务,提供资讯聚合、热点推送、主题订阅及媒体品牌内容"}]}
{"name": "Telegram", "description": "Telegram chat and user management, including chat operations (create/edit/delete), message handling (send/edit/delete), contact management (add/block/import), profile updates, and privacy settings", "tools": [{"name": "get_chats", "description": "Get a paginated list of chats.", "parameter": {"page": "(int) Page number (1-indexed)", "page_size": "(int) Number of chats per page"}}, {"name": "list_chats", "description": "List chats with metadata and filtering.", "parameter": {"chat_type": "(str) Type of chat (e.g., 'private', 'group', 'channel')", "limit": "(int) Maximum number of chats to return"}}, {"name": "get_chat", "description": "Get detailed info about a chat.", "parameter": {"chat_id": "(int) ID of the chat"}}, {"name": "create_group", "description": "Create a new group.", "parameter": {"title": "(str) Title of the group", "user_ids": "(list of int) List of user IDs to add to the group"}}, {"name": "create_channel", "description": "Create a channel or supergroup.", "parameter": {"title": "(str) Title of the channel/supergroup", "about": "(str) Description of the channel/supergroup", "megagroup": "(bool) Whether to create a supergroup"}}, {"name": "edit_chat_title", "description": "Change chat/group/channel title.", "parameter": {"chat_id": "(int) ID of the chat", "title": "(str) New title"}}, {"name": "delete_chat_photo", "description": "Remove chat/group/channel photo.", "parameter": {"chat_id": "(int) ID of the chat"}}, {"name": "leave_chat", "description": "Leave a group or channel.", "parameter": {"chat_id": "(int) ID of the chat"}}, {"name": "get_participants", "description": "List all participants in a chat.", "parameter": {"chat_id": "(int) ID of the chat"}}, {"name": "get_admins", "description": "List all admins in a chat.", "parameter": {"chat_id": "(int) ID of the chat"}}, {"name": "get_banned_users", "description": "List all banned users in a chat.", "parameter": {"chat_id": "(int) ID of the chat"}}, {"name": "promote_admin", "description": "Promote user to admin.", "parameter": {"chat_id": "(int) ID of the chat", "user_id": "(int) ID of the user to promote"}}, {"name": "demote_admin", "description": "Demote admin to user.", "parameter": {"chat_id": "(int) ID of the chat", "user_id": "(int) ID of the user to demote"}}, {"name": "ban_user", "description": "Ban user from a chat.", "parameter": {"chat_id": "(int) ID of the chat", "user_id": "(int) ID of the user to ban"}}, {"name": "unban_user", "description": "Unban user from a chat.", "parameter": {"chat_id": "(int) ID of the chat", "user_id": "(int) ID of the user to unban"}}, {"name": "get_invite_link", "description": "Get invite link for a group or channel.", "parameter": {"chat_id": "(int) ID of the chat"}}, {"name": "export_chat_invite", "description": "Export invite link for a chat.", "parameter": {"chat_id": "(int) ID of the chat"}}, {"name": "import_chat_invite", "description": "Join chat by invite hash.", "parameter": {"hash": "(str) Invite hash"}}, {"name": "join_chat_by_link", "description": "Join chat by invite link.", "parameter": {"link": "(str) Invite link"}}, {"name": "get_messages", "description": "Get paginated messages.", "parameter": {"chat_id": "(int) ID of the chat", "page": "(int) Page number (1-indexed)", "page_size": "(int) Number of messages per page"}}, {"name": "list_messages", "description": "List filtered messages.", "parameter": {"chat_id": "(int) ID of the chat", "limit": "(int) Maximum number of messages to return", "search_query": "(Optional, str) Search query", "from_date": "(Optional, datetime) Start date", "to_date": "(Optional, datetime) End date"}}, {"name": "send_message", "description": "Send a message to a specific chat.", "parameter": {"chat_id": "(int) ID of the chat", "message": "(str) Message content to send"}}, {"name": "reply_to_message", "description": "Reply to a message.", "parameter": {"chat_id": "(int) ID of the chat", "message_id": "(int) ID of the message to reply to", "text": "(str) Reply text"}}, {"name": "edit_message", "description": "Edit a message.", "parameter": {"chat_id": "(int) ID of the chat", "message_id": "(int) ID of the message to edit", "new_text": "(str) New message text"}}, {"name": "delete_message", "description": "Delete a message.", "parameter": {"chat_id": "(int) ID of the chat", "message_id": "(int) ID of the message to delete"}}, {"name": "forward_message", "description": "Forward a message.", "parameter": {"from_chat_id": "(int) ID of the chat to forward from", "message_id": "(int) ID of the message to forward", "to_chat_id": "(int) ID of the chat to forward to"}}, {"name": "pin_message", "description": "Pin a message.", "parameter": {"chat_id": "(int) ID of the chat", "message_id": "(int) ID of the message to pin"}}, {"name": "unpin_message", "description": "Unpin a message.", "parameter": {"chat_id": "(int) ID of the chat", "message_id": "(int) ID of the message to unpin"}}, {"name": "mark_as_read", "description": "Mark all messages as read in a chat.", "parameter": {"chat_id": "(int) ID of the chat"}}, {"name": "get_message_context", "description": "Get context around a message.", "parameter": {"chat_id": "(int) ID of the chat", "message_id": "(int) ID of the message", "context_size": "(int) Number of messages before and after the message"}}, {"name": "get_history", "description": "Get full chat history.", "parameter": {"chat_id": "(int) ID of the chat", "limit": "(int) Maximum number of messages to return"}}, {"name": "get_pinned_messages", "description": "List pinned messages in a chat.", "parameter": {"chat_id": "(int) ID of the chat"}}, {"name": "get_last_interaction", "description": "Get the most recent message with a contact.", "parameter": {"contact_id": "(int) ID of the contact"}}, {"name": "list_contacts", "description": "List all contacts.", "parameter": {}}, {"name": "search_contacts", "description": "Search contacts.", "parameter": {"query": "(str) Search query"}}, {"name": "add_contact", "description": "Add a contact.", "parameter": {"phone": "(str) Phone number of the contact", "first_name": "(str) First name of the contact", "last_name": "(Optional, str) Last name of the contact"}}, {"name": "delete_contact", "description": "Delete a contact.", "parameter": {"user_id": "(int) ID of the contact"}}, {"name": "block_user", "description": "Block a user.", "parameter": {"user_id": "(int) ID of the user to block"}}, {"name": "unblock_user", "description": "Unblock a user.", "parameter": {"user_id": "(int) ID of the user to unblock"}}, {"name": "import_contacts", "description": "Bulk import contacts.", "parameter": {"contacts": "(list of dict) List of contact dictionaries"}}, {"name": "export_contacts", "description": "Export all contacts as JSON.", "parameter": {}}, {"name": "get_blocked_users", "description": "List blocked users.", "parameter": {}}, {"name": "get_contact_ids", "description": "List all contact IDs.", "parameter": {}}, {"name": "get_direct_chat_by_contact", "description": "Find direct chat with a contact.", "parameter": {"contact_query": "(str) Name, username, or phone number to search for"}}, {"name": "get_contact_chats", "description": "List all chats with a contact.", "parameter": {"contact_id": "(int) ID of the contact"}}, {"name": "get_me", "description": "Get your user info.", "parameter": {}}, {"name": "update_profile", "description": "Update your profile.", "parameter": {"first_name": "(str) New first name", "last_name": "(Optional, str) New last name", "about": "(Optional, str) New about text"}}, {"name": "delete_profile_photo", "description": "Remove your profile photo.", "parameter": {}}, {"name": "get_user_photos", "description": "Get a user's profile photos.", "parameter": {"user_id": "(int) ID of the user", "limit": "(int) Maximum number of photos to return"}}, {"name": "get_user_status", "description": "Get a user's online status.", "parameter": {"user_id": "(int) ID of the user"}}, {"name": "get_media_info", "description": "Get info about media in a message.", "parameter": {"chat_id": "(int) ID of the chat", "message_id": "(int) ID of the message"}}, {"name": "search_public_chats", "description": "Search public chats, channels, or bots by username or title.", "parameter": {"query": "(str) Search query"}}, {"name": "search_messages", "description": "Search messages in a chat.", "parameter": {"chat_id": "(int) ID of the chat", "query": "(str) Search query", "limit": "(int) Maximum number of messages to return"}}, {"name": "resolve_username", "description": "Resolve a username to ID.", "parameter": {"username": "(str) Username to resolve"}}, {"name": "get_sticker_sets", "description": "List sticker sets.", "parameter": {}}, {"name": "get_bot_info", "description": "Get info about a bot.", "parameter": {"bot_username": "(str) Username of the bot"}}, {"name": "set_bot_commands", "description": "Set bot commands (bot accounts only).", "parameter": {"bot_username": "(str) Username of the bot", "commands": "(list of dict) List of command dictionaries"}}, {"name": "get_privacy_settings", "description": "Get privacy settings.", "parameter": {}}, {"name": "set_privacy_settings", "description": "Set privacy settings.", "parameter": {"key": "(str) Setting key", "allow_users": "(list of int) List of user IDs to allow", "disallow_users": "(list of int) List of user IDs to disallow"}}, {"name": "mute_chat", "description": "Mute notifications for a chat.", "parameter": {"chat_id": "(int) ID of the chat"}}, {"name": "unmute_chat", "description": "Unmute notifications for a chat.", "parameter": {"chat_id": "(int) ID of the chat"}}, {"name": "archive_chat", "description": "Archive a chat.", "parameter": {"chat_id": "(int) ID of the chat"}}, {"name": "unarchive_chat", "description": "Unarchive a chat.", "parameter": {"chat_id": "(int) ID of the chat"}}, {"name": "get_recent_actions", "description": "Get recent admin actions in a chat.", "parameter": {"chat_id": "(int) ID of the chat"}}], "domains": [{"name": "Social Media Management", "description": "社交媒体账号运营,涵盖内容发布、粉丝互动、多平台批量管理与舆情分析"}, {"name": "User & Access Management", "description": "用户与访问管理，包括用户信息检索、群组成员列表及权限定义管理"}]}
{"name": "Telegram-Client", "description": "Telegram account operations, including: account information retrieval, dialog listing and filtering, message marking as read, dialog message retrieval, and message sending", "tools": [{"name": "tg_me", "description": "Get current account information.", "parameter": {}}, {"name": "tg_dialogs", "description": "List dialogs with optional unread filter.", "parameter": {}}, {"name": "tg_read", "description": "Mark dialog as read.", "parameter": {}}, {"name": "tg_dialog", "description": "Retrieve messages from specific dialog.", "parameter": {}}, {"name": "tg_send", "description": "Send draft messages to any dialog.", "parameter": {}}], "domains": [{"name": "Social Media Management", "description": "社交媒体账号运营,涵盖内容发布、粉丝互动、多平台批量管理与舆情分析"}]}
{"name": "Terminal-Control", "description": "1.执行终端命令并返回结果 2.获取命令执行历史 3.获取和更改当前工作目录 4.列出目录内容 5.文件内容操作（写入、读取、插入、删除、更新）", "tools": [{"name": "execute_command", "description": "Execute a terminal command and return its results.", "parameter": {"command": "(string) The command line command to execute", "timeout": "(Optional, int) Command timeout in seconds (default: 30)"}}, {"name": "get_command_history", "description": "Get recent command execution history.", "parameter": {"count": "(Optional, int) Number of recent commands to return (default: 10)"}}, {"name": "get_current_directory", "description": "Get the current working directory.", "parameter": {}}, {"name": "change_directory", "description": "Change the current working directory.", "parameter": {"path": "(string) Directory path to switch to"}}, {"name": "list_directory", "description": "List files and subdirectories in the specified directory.", "parameter": {"path": "(Optional, string) Directory path to list contents (default: current directory)"}}, {"name": "write_file", "description": "Write content to a file with overwrite or append options.", "parameter": {"path": "(string) Path to the file", "content": "(string) Content to write", "mode": "(Optional, string) Write mode ('overwrite' or 'append', default: 'overwrite')"}}, {"name": "read_file", "description": "Read content from a file with optional row selection.", "parameter": {"path": "(string) Path to the file", "start_row": "(Optional, int) Starting row to read from (0-based)", "end_row": "(Optional, int) Ending row to read to (0-based, inclusive)"}}, {"name": "insert_file_content", "description": "Insert content at specific row(s) in a file.", "parameter": {"path": "(string) Path to the file", "content": "(string) Content to insert", "row": "(Optional, int) Row number to insert at (0-based)", "rows": "(Optional, list) List of row numbers to insert at (0-based)"}}, {"name": "delete_file_content", "description": "Delete content at specific row(s) from a file.", "parameter": {"path": "(string) Path to the file", "row": "(Optional, int) Row number to delete (0-based)", "rows": "(Optional, list) List of row numbers to delete (0-based)"}}, {"name": "update_file_content", "description": "Update content at specific row(s) in a file.", "parameter": {"path": "(string) Path to the file", "content": "(string) New content to place at the specified row(s)", "row": "(Optional, int) Row number to update (0-based)", "rows": "(Optional, list) List of row numbers to update (0-based)"}}], "domains": [{"name": "Terminal Execution", "description": "终端命令行执行,用于系统命令操作、脚本运行及服务器资源管理"}, {"name": "File System", "description": "文件系统管理,包括本地 / 云端文件的存储、读取、修改、权限控制及分类检索"}]}
{"name": "TFT-Match-Analyzer", "description": "1. Get TFT match history for the current player 2. Get detailed information about a specific TFT match", "tools": [{"name": "tft_match_history", "description": "Get TFT match history for the current player.", "parameter": {"count": "(Optional, number) Number of matches to retrieve. Defaults to 20", "start": "(Optional, number) Start index for pagination. Defaults to 0"}}, {"name": "tft_match_details", "description": "Get detailed information about a specific TFT match.", "parameter": {"matchId": "(required, string) The match ID to get details for"}}], "domains": [{"name": "Sports Data Analysis", "description": "Sports data retrieval and analysis, including game statistics, team records, play-by-play data, and advanced analytics"}]}
{"name": "Ticketmaster", "description": "Search for events, venues, or attractions on Ticketmaster using various filters", "tools": [{"name": "search_ticketmaster", "description": "Searches for events, venues, or attractions using various filters.", "parameter": {"type": "(string) Type of search ('event', 'venue', or 'attraction')", "keyword": "(Optional, string) Search term", "startDate": "(Optional, string) Start date in YYYY-MM-DD format (for events)", "endDate": "(Optional, string) End date in YYYY-MM-DD format (for events)", "city": "(Optional, string) City name", "stateCode": "(Optional, string) State code (e.g., 'NY')", "countryCode": "(Optional, string) Country code (e.g., 'US')", "venueId": "(Optional, string) Specific venue ID", "attractionId": "(Optional, string) Specific attraction ID", "classificationName": "(Optional, string) Event category (e.g., 'Sports', 'Music')", "format": "(Optional, string) Output format ('json' or 'text', defaults to 'json')"}}], "domains": [{"name": "Location & Environmental Service", "description": "位置与环境服务，包括地理信息查询、导航、路线规划、酒店、机票、天气数据获取等"}]}
{"name": "TickTick", "description": "1.任务管理,包括:创建、更新、完成和删除任务 2.项目管理,包括:创建、更新、删除项目及获取项目详情", "tools": [{"name": "get_task_by_ids", "description": "Get a specific task by project ID and task ID", "parameter": {"projectId": "(string) Project identifier", "taskId": "(string) Task identifier"}}, {"name": "create_task", "description": "Create a new task in a project", "parameter": {"title": "(string) Task title", "projectId": "(string) Project id", "content": "(optional string) Task content", "desc": "(optional string) Task description", "isAllDay": "(optional boolean) Is all day task", "startDate": "(optional string) Task start date in 'yyyy-MM-dd'T'HH:mm:ssZ' format", "dueDate": "(optional string) Task due date in 'yyyy-MM-dd'T'HH:mm:ssZ' format", "timeZone": "(optional string) Task time zone (e.g., 'America/Los_Angeles')", "reminders": "(optional string[]) List of reminder triggers in iCalendar format", "repeatFlag": "(optional string) Task repeat flag in iCalendar format", "priority": "(optional number) Task priority (None: 0, Low: 1, Medium: 3, High: 5)", "sortOrder": "(optional string) Task sort order", "items": "(optional array) List of subtasks with:"}}, {"name": "update_task", "description": "Update an existing task", "parameter": {"taskId": "(string) Task identifier - Path", "id": "(string) Task identifier - Body", "projectId": "(string) Project id"}}, {"name": "complete_task", "description": "Mark a task as completed", "parameter": {"taskId": "(string) Task identifier", "projectId": "(string) Project identifier"}}, {"name": "delete_task", "description": "Delete a task from a project", "parameter": {"taskId": "(string) Task identifier", "projectId": "(string) Project identifier"}}, {"name": "get_user_projects", "description": "Get all projects for the authenticated user", "parameter": {}}, {"name": "get_project_by_id", "description": "Get a specific project by ID", "parameter": {"projectId": "(string) Project identifier"}}, {"name": "get_project_with_data", "description": "Get project details along with tasks and columns", "parameter": {"projectId": "(string) Project identifier"}}, {"name": "create_project", "description": "Create a new project", "parameter": {"name": "(string) Project name", "color": "(optional string) Project color (default: '#4772FA')", "viewMode": "(optional string) View mode ('list', 'kanban', 'timeline') (default: 'list')", "kind": "(optional string) Project kind ('TASK', 'NOTE') (default: 'TASK')"}}, {"name": "update_project", "description": "Update an existing project", "parameter": {"projectId": "(string) Project identifier", "name": "(optional string) Project name", "color": "(optional string) Project color", "sortOrder": "(optional number) Project sort order", "viewMode": "(optional string) View mode ('list', 'kanban', 'timeline')", "kind": "(optional string) Project kind ('TASK', 'NOTE')"}}, {"name": "delete_project", "description": "Delete a project", "parameter": {"projectId": "(string) Project identifier"}}], "domains": [{"name": "Time & Task Management", "description": "时间与任务管理,涵盖日历日程、待办事项、项目进度跟踪及会议调度"}]}
{"name": "Todoist", "description": "Todoist任务管理,包括:任务创建、检索、更新、完成和删除", "tools": [{"name": "todoist_create_task", "description": "Create new tasks with various attributes.", "parameter": {"content": "(string) task title", "description": "(Optional, string) task description", "due date": "(Optional, string) due date", "priority level": "(Optional, number) priority level (1-4)"}}, {"name": "todoist_get_tasks", "description": "Retrieve and filter tasks.", "parameter": {"due date": "(Optional, string) filter by due date", "priority": "(Optional, number) filter by priority", "project": "(Optional, string) filter by project", "result limit": "(Optional, number) limit the number of results"}}, {"name": "todoist_update_task", "description": "Update existing tasks using natural language search.", "parameter": {"task name": "(string) partial name match to find the task", "content": "(Optional, string) new task title", "description": "(Optional, string) new task description", "due date": "(Optional, string) new due date", "priority": "(Optional, number) new priority level (1-4)"}}, {"name": "todoist_complete_task", "description": "Mark tasks as complete using natural language search.", "parameter": {"task name": "(string) partial name match to find the task"}}, {"name": "todoist_delete_task", "description": "Remove tasks using natural language search.", "parameter": {"task name": "(string) partial name match to find the task"}}], "domains": [{"name": "Time & Task Management", "description": "时间与任务管理,涵盖日历日程、待办事项、项目进度跟踪及会议调度"}]}
{"name": "Typesense", "description": "1.在Typesense集合中搜索文档 2.通过ID从集合中检索特定文档 3.获取Typesense集合的统计信息 4.分析集合结构和内容 5.获取集合的有效搜索查询建议", "tools": [{"name": "typesense_query", "description": "Search for documents in Typesense collections with powerful filtering", "parameter": {"query_text": "(string) The query text to search for", "collection_name": "(string) The name of the collection to search", "search_fields": "(array) Fields to search within", "filters": "(object, optional) Filters to apply to the search", "sort_options": "(object, optional) Options for sorting results", "limit": "(number, optional) Maximum number of results to return"}}, {"name": "typesense_get_document", "description": "Retrieve specific documents by ID from collections", "parameter": {"collection_name": "(string) The name of the collection", "document_id": "(string) The ID of the document to retrieve"}}, {"name": "typesense_collection_stats", "description": "Get statistics about a Typesense collection", "parameter": {"collection_name": "(string) The name of the collection"}}, {"name": "analyze_collection", "description": "Analyze collection structure and contents", "parameter": {"collection_name": "(string) The name of the collection"}}, {"name": "search_suggestions", "description": "Get suggestions for effective search queries for a collection", "parameter": {"collection_name": "(string) The name of the collection"}}], "domains": [{"name": "Data Management", "description": "数据管理，包括数据查询、提取、传输和配置管理"}]}
{"name": "Travel Planner", "description": "1.使用Google Places API搜索地点 2.获取特定地点的详细信息 3.计算两个位置之间的路线 4.获取位置时区信息", "tools": [{"name": "searchPlaces", "description": "Search for places using Google Places API", "parameter": {"query": "(string) Search query for places", "location": "(optional) Latitude and longitude to bias results", "radius": "(optional) Search radius in meters"}}, {"name": "getPlaceDetails", "description": "Get detailed information about a specific place", "parameter": {"placeId": "(string) Google Place ID to retrieve details for"}}, {"name": "calculateRoute", "description": "Calculate route between two locations", "parameter": {"origin": "(string) Starting location", "destination": "(string) Ending location", "mode": "(optional) Travel mode (driving, walking, bicycling, transit)"}}, {"name": "getTimeZone", "description": "Get timezone information for a location", "parameter": {"location": "(string) Latitude and longitude coordinates", "timestamp": "(optional) Timestamp for time zone calculation"}}], "domains": [{"name": "Location & Environmental Service", "description": "位置与环境服务，包括地理信息查询、导航、路线规划、酒店、机票、天气数据获取等"}]}
{"name": "Unity Catalog", "description": "1.列出指定目录和模式中的函数 2.获取指定目录和模式中的函数 3.在指定目录和模式中创建函数 4.删除指定目录和模式中的函数", "tools": [{"name": "uc_list_functions", "description": "Lists functions within the specified parent catalog and schema.", "parameter": {}}, {"name": "uc_get_function", "description": "Gets a function within a parent catalog and schema.", "parameter": {"name": "(string) The name of the function (not fully-qualified)."}}, {"name": "uc_create_function", "description": "Creates a function within a parent catalog and schema. WARNING: This API is experimental and will change in future versions.", "parameter": {"name": "(string) The name of the function (not fully-qualified).", "script": "(string) The Python script including the function to be registered."}}, {"name": "uc_delete_function", "description": "Deletes a function within a parent catalog and schema.", "parameter": {"name": "(string) The name of the function (not fully-qualified)."}}], "domains": [{"name": "Data Management", "description": "数据管理，包括数据查询、提取、传输和配置管理"}]}
{"name": "Unity3d Game Engine", "description": "Unity游戏开发工具集，包括：执行菜单项、选择游戏对象、更新组件、安装包、运行测试、发送控制台日志、添加资源到场景", "tools": [{"name": "execute_menu_item", "description": "Executes Unity menu items (functions tagged with the MenuItem attribute)", "parameter": {"menuItemName": "(string) The name of the menu item to execute"}}, {"name": "select_gameobject", "description": "Selects game objects in the Unity hierarchy by path or instance ID", "parameter": {"pathOrId": "(string) The path or instance ID of the game object to select"}}, {"name": "update_component", "description": "Updates component fields on a GameObject or adds it to the GameObject if it does not contain the component", "parameter": {"gameObjectPath": "(string) The path of the GameObject", "componentType": "(string) The type of the component to update or add", "fields": "(object) A dictionary of field names and values to update"}}, {"name": "add_package", "description": "Installs new packages in the Unity Package Manager", "parameter": {"packageName": "(string) The name of the package to install"}}, {"name": "run_tests", "description": "Runs tests using the Unity Test Runner", "parameter": {"testMode": "(string) The test mode to run (e.g., 'EditMode', 'PlayMode')"}}, {"name": "send_console_log", "description": "Sends a console log to Unity", "parameter": {"message": "(string) The message to send to the Unity console"}}, {"name": "add_asset_to_scene", "description": "Adds an asset from the AssetDatabase to the Unity scene", "parameter": {"assetPath": "(string) The path of the asset to add"}}], "domains": [{"name": "Game Development", "description": "游戏开发工具集，包括游戏引擎操作、场景管理、资源加载与调试功能"}]}
{"name": "Unity Integration (Advanced)", "description": "Unity Editor operations, including: project and editor state information retrieval, scene and GameObject information retrieval, C# code execution, log retrieval and filtering, file operations (read/write/edit), directory listing and searching, asset type filtering", "tools": [{"name": "get_editor_state", "description": "Get comprehensive information about the Unity project and editor state", "parameter": {}}, {"name": "get_current_scene_info", "description": "Get detailed information about the current scene", "parameter": {}}, {"name": "get_game_objects_info", "description": "Get information about specific GameObjects in the scene", "parameter": {}}, {"name": "execute_editor_command", "description": "Execute C# code directly in the Unity Editor", "parameter": {}}, {"name": "get_logs", "description": "Retrieve and filter Unity console logs", "parameter": {}}, {"name": "verify_connection", "description": "Check if there's an active connection to Unity Editor", "parameter": {}}, {"name": "read_file", "description": "Read contents of a file in your Unity project", "parameter": {"path": "(string) Path to the file, can be absolute or relative to the Unity project's Assets folder"}}, {"name": "read_multiple_files", "description": "Read multiple files at once", "parameter": {}}, {"name": "write_file", "description": "Create or overwrite a file with new content", "parameter": {"path": "(string) Path to the file, can be absolute or relative to the Unity project's Assets folder", "content": "(string) Content to write to the file"}}, {"name": "edit_file", "description": "Make targeted edits to existing files with diff preview", "parameter": {"path": "(string) Path to the file, can be absolute or relative to the Unity project's Assets folder", "edits": "(array) Array of edit objects, each containing oldText and newText", "dryRun": "(Optional, boolean) Whether to perform a dry run without applying changes"}}, {"name": "list_directory", "description": "Get a listing of files and folders in a directory", "parameter": {"path": "(string) Path to the directory, can be absolute or relative to the Unity project's Assets folder"}}, {"name": "directory_tree", "description": "Get a hierarchical view of directories and files", "parameter": {}}, {"name": "search_files", "description": "Find files matching a search pattern", "parameter": {"pattern": "(string) Search pattern to match file names"}}, {"name": "get_file_info", "description": "Get metadata about a specific file or directory", "parameter": {"path": "(string) Path to the file or directory, can be absolute or relative to the Unity project's Assets folder"}}, {"name": "find_assets_by_type", "description": "Find all assets of a specific type (e.g., Material, Prefab)", "parameter": {"assetType": "(string) Type of asset to find"}}, {"name": "list_scripts", "description": "Get a listing of all C# scripts in the project", "parameter": {}}], "domains": [{"name": "Game Development", "description": "游戏开发工具集，包括游戏引擎操作、场景管理、资源加载与调试功能"}, {"name": "File System", "description": "文件系统管理,包括本地 / 云端文件的存储、读取、修改、权限控制及分类检索"}]}
{"name": "Vega-Lite", "description": "1. Save data aggregations for visualization 2. Visualize data using Vega-Lite syntax", "tools": [{"name": "save_data", "description": "Save a table of data aggregations to the server for later visualization.", "parameter": {"name": "(string) Name of the data table to be saved", "data": "(array) Array of objects representing the data table"}}, {"name": "visualize_data", "description": "Visualize a table of data using Vega-Lite syntax.", "parameter": {"data_name": "(string) Name of the data table to be visualized", "vegalite_specification": "(string) JSON string representing the Vega-Lite specification"}}], "domains": [{"name": "Data Analysis", "description": "数据分析，包括数据收集、查询、追踪和分析"}, {"name": "Knowledge Visualization", "description": "知识可视化，包括知识图谱导航、知识可视化生成及知识库搜索"}]}
{"name": "Video Editor", "description": "1.从URL添加视频到用户库并分析 2.使用嵌入和关键词搜索视频 3.根据指定条件从一组视频文件生成渲染视频编辑 4.根据指定条件从单个输入视频文件生成编辑", "tools": [{"name": "add-video", "description": "Adds a video from a URL to the user's library and analyzes it for retrieval.", "parameter": {"url": "(string) The URL of the video to add", "name": "(Optional, string) The name to assign to the video"}}, {"name": "search-videos", "description": "Searches videos using embeddings and keywords to find relevant matches.", "parameter": {"query": "(string) The search query to use"}}, {"name": "generate-edit-from-videos", "description": "Generates a rendered video edit from a set of video files based on specified criteria.", "parameter": {}}, {"name": "generate-edit-from-single-video", "description": "Generates an edit from a single input video file based on specified criteria.", "parameter": {}}], "domains": [{"name": "Audio-Video Creation", "description": "音视频创作,包括录制、剪辑、特效添加、配音及格式转换"}]}
{"name": "Virtual location (Google Street View,etc.)", "description": "1.获取和设置旅行虚拟角色的位置、目的地和属性 2.控制旅行虚拟角色的旅程 3.在Bluesky SNS上发布、回复和点赞文章 4.获取和设置环境及图像设置", "tools": [{"name": "get_traveler_view_info", "description": "Gets information about the current travel avatar's location, optionally including nearby Google Street View photos and information about nearby facilities.", "parameter": {"includePhoto": "(boolean) Gets nearby Google Street View photos. If you have set up an image generation AI, it will synthesize the avatar.", "includeNearbyFacilities": "(boolean) Gets information about nearby facilities."}}, {"name": "get_traveler_location", "description": "Gets information about the current travel avatar's address and nearby facilities.", "parameter": {}}, {"name": "reach_a_percentage_of_destination", "description": "Reaches a specified percentage of the destination (moveMode=skip only).", "parameter": {"timeElapsedPercentage": "(number) Percent progress towards destination (0~100)."}}, {"name": "set_traveler_location", "description": "Sets the current travel avatar's location.", "parameter": {"address": "(string) Address information (exact address, or general name that Google Maps or Claude can recognize, etc.)."}}, {"name": "get_traveler_destination_address", "description": "Gets the destination of the travel avatar you set.", "parameter": {}}, {"name": "set_traveler_destination_address", "description": "Sets the destination of the travel avatar.", "parameter": {"address": "(string) Address information (exact address, or general name that Google Maps or Claude can recognize, etc.)."}}, {"name": "start_traveler_journey", "description": "Starts the journey at the destination (moveMode=realtime only).", "parameter": {}}, {"name": "stop_traveler_journey", "description": "Stops the journey (moveMode=realtime only).", "parameter": {}}, {"name": "set_traveler_info", "description": "Sets the traveler's attributes, such as name and personality.", "parameter": {"settings": "(string) Setting information such as name and personality."}}, {"name": "get_traveler_info", "description": "Gets the traveler's attributes, such as name and personality.", "parameter": {}}, {"name": "set_avatar_prompt", "description": "Sets the prompt when generating the travel avatar image. The default is an anime-style woman.", "parameter": {"prompt": "(string) Prompt for avatar generation."}}, {"name": "reset_avatar_prompt", "description": "Resets avatar generation prompts to default.", "parameter": {}}, {"name": "get_sns_feeds", "description": "Gets Bluesky SNS articles for the specified custom feed (feeds containing a specific tag).", "parameter": {}}, {"name": "get_sns_mentions", "description": "Gets recent mentions (likes, replies) to Bluesky SNS posts that you made yourself.", "parameter": {}}, {"name": "post_sns_writer", "description": "Posts an article to Bluesky SNS with the specified custom feed. Sets a specific tag so that it can be determined that the post was generated by the travel bot.", "parameter": {"message": "(string) Article to post."}}, {"name": "reply_sns_writer", "description": "Replies to the article with the specified id. Sets a specific tag so that it can be determined that the post was generated by the travel bot.", "parameter": {"message": "(string) Reply to post.", "id": "(string) The ID of the post to reply to."}}, {"name": "add_like", "description": "Adds a like to the specified post.", "parameter": {"id": "(string) The ID of the post to like."}}, {"name": "tips", "description": "Guides you on how to set up features that have not yet been set.", "parameter": {}}, {"name": "get_setting", "description": "Gets environment and image settings.", "parameter": {}}], "domains": [{"name": "Location & Environmental Service", "description": "位置与环境服务，包括地理信息查询、导航、路线规划、酒店、机票、天气数据获取等"}, {"name": "Social Media Management", "description": "社交媒体账号运营,涵盖内容发布、粉丝互动、多平台批量管理与舆情分析"}, {"name": "Virtual Environment & Container Manager", "description": "虚拟与容器环境管理，支持开发环境如（如Python虚拟环境、Node.js运行时）、容器化环境构建（Docker）"}]}
{"name": "VolcEngine TOS", "description": "Volcengine TOS operations, including: listing buckets, listing objects in a bucket, and retrieving objects from TOS", "tools": [{"name": "list_buckets", "description": "Returns a list of all buckets owned by the authenticated sender of the request", "parameter": {}}, {"name": "list_objects", "description": "Returns some or all (up to 1,000) of the objects in a bucket with each request", "parameter": {}}, {"name": "get_object", "description": "Retrieves an object from volcengine TOS. In the GetObject request, specify the full key name for the object. General purpose buckets - Both the virtual-hosted-style requests and the path-style requests are supported", "parameter": {}}], "domains": [{"name": "Cloud Service Integration", "description": "云服务集成，调用与管理云平台 API(如 AWS/Azure)，支持云资源对接与 AI 服务整合"}]}
{"name": "Webflow", "description": "1. Retrieve list of Webflow sites with details 2. Retrieve detailed information of a specific Webflow site by ID", "tools": [{"name": "get_sites", "description": "Retrieves a list of all Webflow sites accessible to the authenticated user, returning detailed information such as display name, site ID, creation date, and more.", "parameter": {}}, {"name": "get_site", "description": "Retrieves detailed information about a specific Webflow site by ID, returning the same detailed information as get_sites for a single site.", "parameter": {"siteId": "(string) The ID of the Webflow site to retrieve."}}], "domains": [{"name": "Content Management", "description": "内容管理，包括博客文章的创建、更新、检索及媒体上传"}]}
{"name": "whale-tracker-mcp", "description": "1. Fetch recent whale transactions with filters 2. Retrieve detailed transaction information by ID", "tools": [{"name": "get_recent_transactions", "description": "Fetch recent whale transactions with optional filters for blockchain, minimum value, and limit.", "parameter": {"blockchain": "(string) The blockchain to filter transactions by.", "min_value": "(Optional, float) The minimum value of the transactions to fetch.", "limit": "(Optional, int) The maximum number of transactions to return."}}, {"name": "get_transaction_details", "description": "Retrieve detailed information about a specific transaction by its ID.", "parameter": {"transaction_id": "(string) The ID of the transaction to retrieve details for."}}], "domains": [{"name": "Blockchain Service", "description": "区块链服务，包括智能合约状态读取、代理合约地址检索、事件日志获取及事件主题签名生成"}]}
{"name": "Whois MCP", "description": "WHOIS信息查询，包括域名、顶级域名(TLD)、IP地址和自治系统号(ASN)的WHOIS信息检索", "tools": [{"name": "whois_domain", "description": "Looks up WHOIS information about the specified domain.", "parameter": {}}, {"name": "whois_tld", "description": "Looks up WHOIS information about the specified Top Level Domain (TLD).", "parameter": {}}, {"name": "whois_ip", "description": "Looks up WHOIS information about the specified IP address.", "parameter": {}}, {"name": "whois_as", "description": "Looks up WHOIS information about the specified Autonomous System Number (ASN).", "parameter": {}}], "domains": [{"name": "Web Data Acquisition", "description": "网络数据采集,包含网页爬虫、内容提取、反爬处理及代码仓库索引分析"}]}
{"name": "Wikidata MCP", "description": "1. Search for Wikidata entity and property IDs 2. Retrieve properties associated with a Wikidata entity ID 3. Execute SPARQL queries on Wikidata 4. Retrieve labels and descriptions for Wikidata entity IDs", "tools": [{"name": "search_entity", "description": "Search for a Wikidata entity ID by its query.", "parameter": {"query": "(str) The query to search for the entity."}}, {"name": "search_property", "description": "Search for a Wikidata property ID by its query.", "parameter": {"query": "(str) The query to search for the property."}}, {"name": "get_properties", "description": "Get the properties associated with a given Wikidata entity ID.", "parameter": {"entity_id": "(str) The ID of the entity to get properties for."}}, {"name": "execute_sparql", "description": "Execute a SPARQL query on Wikidata.", "parameter": {"sparql_query": "(str) The SPARQL query to execute."}}, {"name": "get_metadata", "description": "Retrieve the label and description for a given Wikidata entity ID in a specified language.", "parameter": {"entity_id": "(str) The ID of the entity to retrieve metadata for.", "language": "(Optional, str) The language for the metadata, default is 'en'."}}], "domains": [{"name": "Data Management", "description": "数据管理，包括数据查询、提取、传输和配置管理"}]}
{"name": "Windows CLI", "description": "1.在指定shell中执行命令 2.获取执行命令的历史记录 3.通过SSH在远程系统上执行命令 4.SSH连接管理（创建/读取/更新/删除） 5.获取服务器当前工作目录", "tools": [{"name": "execute_command", "description": "Execute a command in the specified shell", "parameter": {"shell": "(string) Shell to use ('powershell', 'cmd', or 'gitbash')", "command": "(string) Command to execute", "workingDir": "(Optional, string) Working directory"}}, {"name": "get_command_history", "description": "Get the history of executed commands", "parameter": {"limit": "(Optional, number)"}}, {"name": "ssh_execute", "description": "Execute a command on a remote system via SSH", "parameter": {"connectionId": "(string) ID of the SSH connection to use", "command": "(string) Command to execute"}}, {"name": "ssh_disconnect", "description": "Disconnect from an SSH server", "parameter": {"connectionId": "(string) ID of the SSH connection to disconnect"}}, {"name": "create_ssh_connection", "description": "Create a new SSH connection", "parameter": {"connectionId": "(string) ID for the new SSH connection", "connectionConfig": "(object) Connection configuration details including host, port, username, and either password or privateKeyPath"}}, {"name": "read_ssh_connections", "description": "Read all configured SSH connections", "parameter": {}}, {"name": "update_ssh_connection", "description": "Update an existing SSH connection", "parameter": {"connectionId": "(string) ID of the SSH connection to update", "connectionConfig": "(object) New connection configuration details"}}, {"name": "delete_ssh_connection", "description": "Delete an SSH connection", "parameter": {"connectionId": "(string) ID of the SSH connection to delete"}}, {"name": "get_current_directory", "description": "Get the current working directory of the server", "parameter": {}}], "domains": [{"name": "Terminal Execution", "description": "终端命令行执行,用于系统命令操作、脚本运行及服务器资源管理"}, {"name": "Server Management", "description": "Server operations and user management, including server lifecycle control and user administration"}]}
{"name": "World Bank data API", "description": "1.列出世界银行开放数据API中的可用国家 2.列出世界银行开放数据API中的可用指标 3.分析国家指标，如人口分段、贫困数字等", "tools": [{"name": "list_countries", "description": "Lists available countries in the World Bank open data API", "parameter": {}}, {"name": "list_indicators", "description": "Lists available indicators in the World Bank open data API", "parameter": {}}, {"name": "analyse_indicators", "description": "Analyses indicators, such as population segments, poverty numbers, etc., for countries", "parameter": {}}], "domains": [{"name": "Data Analysis", "description": "数据分析，包括数据收集、查询、追踪和分析"}]}
{"name": "xcodebuild", "description": "1. Build iOS Xcode workspace/project 2. Run test for iOS Xcode workspace/project", "tools": [{"name": "build", "description": "Build iOS Xcode workspace/project", "parameter": {"folder": "(string, required) The full path of the current folder that the iOS Xcode workspace/project sits"}}, {"name": "test", "description": "Run test for iOS Xcode workspace/project", "parameter": {"folder": "(string, required) The full path of the current folder that the iOS Xcode workspace/project sits"}}], "domains": [{"name": "Code Toolkit", "description": "代码工具集,版本控制(如git命令执行)、代码生成、代码执行、测试等"}]}
{"name": "Xero-mcp-server", "description": "Xero accounting operations, including: OAuth2 authentication, bank transactions creation, contacts management, balance sheet retrieval, accounts listing, invoices management, journals listing, organizations details retrieval, payments management, and quotes listing", "tools": [{"name": "authenticate", "description": "Authenticate with Xero using OAuth2", "parameter": {}}, {"name": "create_bank_transactions", "description": "Creates one or more spent or received money transactions", "parameter": {}}, {"name": "create_contacts", "description": "Creates one or multiple contacts in a Xero organisation", "parameter": {}}, {"name": "get_balance_sheet", "description": "Retrieves report for balance sheet", "parameter": {}}, {"name": "list_accounts", "description": "Retrieves the full chart of accounts", "parameter": {}}, {"name": "list_bank_transactions", "description": "Retrieves any spent or received money transactions", "parameter": {}}, {"name": "list_contacts", "description": "Retrieves all contacts in a Xero organisation", "parameter": {}}, {"name": "list_invoices", "description": "Retrieves sales invoices or purchase bills", "parameter": {}}, {"name": "list_journals", "description": "Retrieves journals", "parameter": {}}, {"name": "list_organisations", "description": "Retrieves Xero organisation details", "parameter": {}}, {"name": "list_payments", "description": "Retrieves payments for invoices and credit notes", "parameter": {}}, {"name": "list_quotes", "description": "Retrieves sales quotes", "parameter": {}}], "domains": [{"name": "Financial Service", "description": "金融服务,包括支付处理、理财管理、云成本分析及财务报表生成"}]}
{"name": "XiYan", "description": "Provide a natural language interface for retrieving data from a database by converting natural language to SQL and executing queries", "tools": [{"name": "get_data", "description": "Provides a natural language interface for retrieving data from a database. Converts the input natural language into SQL using a built-in model and calls the database to return the query results.", "parameter": {}}], "domains": [{"name": "DataBase Management", "description": "数据库管理，涵盖数据库创建、查询、优化、备份及数据结构设计"}]}
{"name": "XMind", "description": "XMind文件处理工具集,包括:解析分析思维导图结构、提取TODO任务、递归扫描XMind文件、多文件对比分析、文件名模式搜索、智能模糊路径匹配、节点ID精确检索、多条件内容搜索", "tools": [{"name": "read_xmind", "description": "Parse and analyze XMind files, extracting the complete mind map structure.", "parameter": {}}, {"name": "get_todo_tasks", "description": "Extract and analyze TODO tasks, including task context and hierarchy.", "parameter": {}}, {"name": "list_xmind_directory", "description": "Recursively scan for XMind files, filtering and organizing results.", "parameter": {}}, {"name": "read_multiple_xmind_files", "description": "Process multiple files simultaneously, comparing and analyzing across files.", "parameter": {}}, {"name": "search_xmind_files", "description": "Search files by name patterns, with recursive directory scanning.", "parameter": {}}, {"name": "extract_node", "description": "Perform smart fuzzy path matching, returning ranked search results and complete subtree extraction.", "parameter": {"path": "(string) Path to the XMind file.", "searchQuery": "(string) Fuzzy path query to match nodes."}}, {"name": "extract_node_by_id", "description": "Directly access a node by its ID for fast and precise retrieval.", "parameter": {"path": "(string) Path to the XMind file.", "nodeId": "(string) ID of the node to extract."}}, {"name": "search_nodes", "description": "Perform multi-criteria content search with configurable search fields.", "parameter": {"path": "(string) Path to the XMind file.", "query": "(string) Search query.", "searchIn": "(array) Fields to search in (e.g., ['title', 'notes']).", "caseSensitive": "(boolean, optional) Whether the search should be case-sensitive."}}], "domains": [{"name": "Design Tool Integration", "description": "设计工具集成，包括文档信息获取、节点操作、文本处理、布局设置、颜色与样式管理、组件实例操作及图像导出"}]}
{"name": "YouTube", "description": "YouTube视频与频道管理,包括:视频详情获取、多语言字幕检索、视频搜索、频道详情获取、频道视频列表获取、播放列表详情获取、播放列表内容获取", "tools": [{"name": "videos.getVideo", "description": "Get video details such as title, description, and duration.", "parameter": {"videoId": "(string) The ID of the video."}}, {"name": "transcripts.getTranscript", "description": "Retrieve the transcript of a video, supporting multiple languages.", "parameter": {"videoId": "(string) The ID of the video.", "language": "(string) The language of the transcript (default is 'en')."}}, {"name": "videos.searchVideos", "description": "Search for videos across YouTube.", "parameter": {"query": "(string) The search term.", "maxResults": "(number) The maximum number of results to return."}}, {"name": "channels.getChannel", "description": "Get details of a YouTube channel.", "parameter": {"channelId": "(string) The ID of the channel."}}, {"name": "channels.listVideos", "description": "List videos from a specific channel.", "parameter": {"channelId": "(string) The ID of the channel.", "maxResults": "(number) The maximum number of results to return."}}, {"name": "playlists.getPlaylistItems", "description": "Get items from a playlist.", "parameter": {"playlistId": "(string) The ID of the playlist.", "maxResults": "(number) The maximum number of results to return."}}, {"name": "playlists.getPlaylist", "description": "Get details of a playlist.", "parameter": {"playlistId": "(string) The ID of the playlist."}}], "domains": [{"name": "Social Media Management", "description": "社交媒体账号运营,涵盖内容发布、粉丝互动、多平台批量管理与舆情分析"}]}
{"name": "mcp_weather", "description": "1.获取指定城市的当前天气信息 2.获取指定城市在特定日期范围内的天气信息 3.获取指定时区的当前时间", "tools": [{"name": "get_weather", "description": "Retrieves the current weather information for a given city.", "parameter": {"city": "(string, required) The name of the city."}}, {"name": "get_weather_by_datetime_range", "description": "Retrieves weather information for a specified city between start and end dates.", "parameter": {"city": "(string, required) The name of the city.", "start_date": "(string, required) Start date in format YYYY-MM-DD (ISO 8601).", "end_date": "(string, required) End date in format YYYY-MM-DD (ISO 8601)."}}, {"name": "get_current_datetime", "description": "Retrieves the current time in a specified timezone.", "parameter": {"timezone_name": "(string, required) IANA timezone name (e.g., 'America/New_York', 'Europe/London'). Use UTC timezone if no timezone provided by the user."}}], "domains": [{"name": "Location & Environmental Service", "description": "位置与环境服务，包括地理信息查询、导航、路线规划、酒店、机票、天气数据获取等"}, {"name": "Time & Task Management", "description": "时间与任务管理,涵盖日历日程、待办事项、项目进度跟踪及会议调度"}]}
{"name": "AWS KB Retrieval", "description": "Perform retrieval operations using the AWS Knowledge Base", "tools": [{"name": "retrieve_from_aws_kb", "description": "Perform retrieval operations using the AWS Knowledge Base.", "parameter": {"query": "(string) The search query for retrieval.", "knowledgeBaseId": "(string) The ID of the AWS Knowledge Base.", "n": "(number, optional) Number of results to retrieve (default: 3)."}}], "domains": [{"name": "Cloud Service Integration", "description": "云服务集成，调用与管理云平台 API(如 AWS/Azure)，支持云资源对接与 AI 服务整合"}]}
{"name": "Brave Search", "description": "1. Execute web searches with pagination and filtering 2. Search for local businesses and services", "tools": [{"name": "brave_web_search", "description": "Execute web searches with pagination and filtering", "parameter": {"query": "(string) Search terms", "count": "(Optional, number) Results per page (max 20)", "offset": "(Optional, number) Pagination offset (max 9)"}}, {"name": "brave_local_search", "description": "Search for local businesses and services", "parameter": {"query": "(string) Local search terms", "count": "(Optional, number) Number of results (max 20)"}}], "domains": [{"name": "Web Search", "description": "网页信息检索,通过关键词查询公开网页内容,支持多类型信息主动获取"}, {"name": "Location & Environmental Service", "description": "位置与环境服务，包括地理信息查询、导航、路线规划、酒店、机票、天气数据获取等"}]}
{"name": "EverArt", "description": "Generate images with multiple model options and return URL", "tools": [{"name": "generate_image", "description": "Generates images with multiple model options. Opens result in browser and returns URL.", "parameter": {"prompt": "(string) Image description", "model": "(Optional, string) Model ID (default: \"207910310772879360\")", "image_count": "(Optional, number) Number of images (default: 1)"}}], "domains": [{"name": "Image Processing", "description": "图像处理与生成,包括传统图片编辑、AI 图像生成、图表绘制与可视化"}]}
{"name": "Everything", "description": "1.回显输入消息 2.数字相加 3.长时间操作进度通知 4.使用MCP采样功能演示LLM采样能力 5.返回小型测试图像 6.打印所有环境变量 7.演示如何使用注释提供内容元数据 8.返回MCP客户端可使用的资源引用", "tools": [{"name": "echo", "description": "Simple tool to echo back input messages", "parameter": {"message": "(string) Message to echo back"}}, {"name": "add", "description": "Adds two numbers together", "parameter": {"a": "(number) First number", "b": "(number) Second number"}}, {"name": "longRunningOperation", "description": "Demonstrates progress notifications for long operations", "parameter": {"duration": "(number, default: 10) Duration in seconds", "steps": "(number, default: 5) Number of progress steps"}}, {"name": "sampleLLM", "description": "Demonstrates LLM sampling capability using MCP sampling feature", "parameter": {"prompt": "(string) The prompt to send to the LLM", "maxTokens": "(number, default: 100) Maximum tokens to generate"}}, {"name": "getTinyImage", "description": "Returns a small test image", "parameter": {}}, {"name": "printEnv", "description": "Prints all environment variables", "parameter": {}}, {"name": "annotatedMessage", "description": "Demonstrates how annotations can be used to provide metadata about content", "parameter": {"messageType": "(enum: 'error' | 'success' | 'debug') Type of message to demonstrate different annotation patterns", "includeImage": "(boolean, default: false) Whether to include an example image"}}, {"name": "getResourceReference", "description": "Returns a resource reference that can be used by MCP clients", "parameter": {"resourceId": "(number, 1-100) ID of the resource to reference"}}], "domains": [{"name": "Tool Management", "description": "工具管理，包括工具信息的检索、搜索、添加和移除"}, {"name": "Data Analysis", "description": "数据分析，包括数据收集、查询、追踪和分析"}, {"name": "Image Processing", "description": "图像处理与生成,包括传统图片编辑、AI 图像生成、图表绘制与可视化"}, {"name": "AI Model Lifecycle Management", "description": "人工智能模型训练与推理，涵盖深度学习与传统机器学习框架建模、模型优化与部署、实验跟踪、数据预处理及全流程生命周期管理"}]}
{"name": "Filesystem", "description": "File system operations including: reading single/multiple files, writing/editing files, creating directories, listing directory contents, moving/renaming files, searching files/directories, retrieving file metadata, and listing accessible directories", "tools": [{"name": "read_file", "description": "Read complete contents of a file", "parameter": {"path": "(string) File path"}}, {"name": "read_multiple_files", "description": "Read multiple files simultaneously", "parameter": {"paths": "(string[]) Array of file paths"}}, {"name": "write_file", "description": "Create new file or overwrite existing", "parameter": {"path": "(string) File location", "content": "(string) File content"}}, {"name": "edit_file", "description": "Make selective edits using advanced pattern matching and formatting", "parameter": {"path": "(string) File to edit", "edits": "(array) List of edit operations", "dryRun": "(boolean) Preview changes without applying (default: false)"}}, {"name": "create_directory", "description": "Create new directory or ensure it exists", "parameter": {"path": "(string) Directory path"}}, {"name": "list_directory", "description": "List directory contents with [FILE] or [DIR] prefixes", "parameter": {"path": "(string) Directory path"}}, {"name": "move_file", "description": "Move or rename files and directories", "parameter": {"source": "(string) Source path", "destination": "(string) Destination path"}}, {"name": "search_files", "description": "Recursively search for files/directories", "parameter": {"path": "(string) Starting directory", "pattern": "(string) Search pattern", "excludePatterns": "(string[]) Array of exclude patterns"}}, {"name": "get_file_info", "description": "Get detailed file/directory metadata", "parameter": {"path": "(string) File or directory path"}}, {"name": "list_allowed_directories", "description": "List all directories the server is allowed to access", "parameter": {}}], "domains": [{"name": "File System", "description": "文件系统管理,包括本地 / 云端文件的存储、读取、修改、权限控制及分类检索"}]}
{"name": "GitHub", "description": "GitHub仓库管理,包括:文件操作、仓库搜索与创建、问题管理、拉取请求管理、分支管理、代码搜索、用户搜索、提交管理", "tools": [{"name": "create_or_update_file", "description": "Create or update a single file in a repository", "parameter": {"owner": "(string) Repository owner (username or organization)", "repo": "(string) Repository name", "path": "(string) Path where to create/update the file", "content": "(string) Content of the file", "message": "(string) Commit message", "branch": "(string) Branch to create/update the file in", "sha": "(optional string) SHA of file being replaced (for updates)"}}, {"name": "push_files", "description": "Push multiple files in a single commit", "parameter": {"owner": "(string) Repository owner", "repo": "(string) Repository name", "branch": "(string) Branch to push to", "files": "(array) Files to push, each with `path` and `content`", "message": "(string) Commit message"}}, {"name": "search_repositories", "description": "Search for GitHub repositories", "parameter": {"query": "(string) Search query", "page": "(optional number) Page number for pagination", "perPage": "(optional number) Results per page (max 100)"}}, {"name": "create_repository", "description": "Create a new GitHub repository", "parameter": {"name": "(string) Repository name", "description": "(optional string) Repository description", "private": "(optional boolean) Whether repo should be private", "autoInit": "(optional boolean) Initialize with README"}}, {"name": "get_file_contents", "description": "Get contents of a file or directory", "parameter": {"owner": "(string) Repository owner", "repo": "(string) Repository name", "path": "(string) Path to file/directory", "branch": "(optional string) Branch to get contents from"}}, {"name": "create_issue", "description": "Create a new issue", "parameter": {"owner": "(string) Repository owner", "repo": "(string) Repository name", "title": "(string) Issue title", "body": "(optional string) Issue description", "assignees": "(optional string[]) Usernames to assign", "labels": "(optional string[]) Labels to add", "milestone": "(optional number) Milestone number"}}, {"name": "create_pull_request", "description": "Create a new pull request", "parameter": {"owner": "(string) Repository owner", "repo": "(string) Repository name", "title": "(string) PR title", "body": "(optional string) PR description", "head": "(string) Branch containing changes", "base": "(string) Branch to merge into", "draft": "(optional boolean) Create as draft PR", "maintainer_can_modify": "(optional boolean) Allow maintainer edits"}}, {"name": "fork_repository", "description": "Fork a repository", "parameter": {"owner": "(string) Repository owner", "repo": "(string) Repository name", "organization": "(optional string) Organization to fork to"}}, {"name": "create_branch", "description": "Create a new branch", "parameter": {"owner": "(string) Repository owner", "repo": "(string) Repository name", "branch": "(string) Name for new branch", "from_branch": "(optional string) Source branch (defaults to repo default)"}}, {"name": "list_issues", "description": "List and filter repository issues", "parameter": {"owner": "(string) Repository owner", "repo": "(string) Repository name", "state": "(optional string) Filter by state ('open', 'closed', 'all')", "labels": "(optional string[]) Filter by labels", "sort": "(optional string) Sort by ('created', 'updated', 'comments')", "direction": "(optional string) Sort direction ('asc', 'desc')", "since": "(optional string) Filter by date (ISO 8601 timestamp)", "page": "(optional number) Page number", "per_page": "(optional number) Results per page"}}, {"name": "update_issue", "description": "Update an existing issue", "parameter": {"owner": "(string) Repository owner", "repo": "(string) Repository name", "issue_number": "(number) Issue number to update", "title": "(optional string) New title", "body": "(optional string) New description", "state": "(optional string) New state ('open' or 'closed')", "labels": "(optional string[]) New labels", "assignees": "(optional string[]) New assignees", "milestone": "(optional number) New milestone number"}}, {"name": "add_issue_comment", "description": "Add a comment to an issue", "parameter": {"owner": "(string) Repository owner", "repo": "(string) Repository name", "issue_number": "(number) Issue number to comment on", "body": "(string) Comment text"}}, {"name": "search_code", "description": "Search for code across GitHub repositories", "parameter": {"q": "(string) Search query using GitHub code search syntax", "sort": "(optional string) Sort field ('indexed' only)", "order": "(optional string) Sort order ('asc' or 'desc')", "per_page": "(optional number) Results per page (max 100)", "page": "(optional number) Page number"}}, {"name": "search_issues", "description": "Search for issues and pull requests", "parameter": {"q": "(string) Search query using GitHub issues search syntax", "sort": "(optional string) Sort field (comments, reactions, created, etc.)", "order": "(optional string) Sort order ('asc' or 'desc')", "per_page": "(optional number) Results per page (max 100)", "page": "(optional number) Page number"}}, {"name": "search_users", "description": "Search for GitHub users", "parameter": {"q": "(string) Search query using GitHub users search syntax", "sort": "(optional string) Sort field (followers, repositories, joined)", "order": "(optional string) Sort order ('asc' or 'desc')", "per_page": "(optional number) Results per page (max 100)", "page": "(optional number) Page number"}}, {"name": "list_commits", "description": "Gets commits of a branch in a repository", "parameter": {"owner": "(string) Repository owner", "repo": "(string) Repository name", "page": "(optional string) page number", "per_page": "(optional string) number of record per page", "sha": "(optional string) branch name"}}, {"name": "get_issue", "description": "Gets the contents of an issue within a repository", "parameter": {"owner": "(string) Repository owner", "repo": "(string) Repository name", "issue_number": "(number) Issue number to retrieve"}}, {"name": "get_pull_request", "description": "Get details of a specific pull request", "parameter": {"owner": "(string) Repository owner", "repo": "(string) Repository name", "pull_number": "(number) Pull request number"}}, {"name": "list_pull_requests", "description": "List and filter repository pull requests", "parameter": {"owner": "(string) Repository owner", "repo": "(string) Repository name", "state": "(optional string) Filter by state ('open', 'closed', 'all')", "head": "(optional string) Filter by head user/org and branch", "base": "(optional string) Filter by base branch", "sort": "(optional string) Sort by ('created', 'updated', 'popularity', 'long-running')", "direction": "(optional string) Sort direction ('asc', 'desc')", "per_page": "(optional number) Results per page (max 100)", "page": "(optional number) Page number"}}, {"name": "create_pull_request_review", "description": "Create a review on a pull request", "parameter": {"owner": "(string) Repository owner", "repo": "(string) Repository name", "pull_number": "(number) Pull request number", "body": "(string) Review comment text", "event": "(string) Review action ('APPROVE', 'REQUEST_CHANGES', 'COMMENT')", "commit_id": "(optional string) SHA of commit to review", "comments": "(optional array) Line-specific comments, each with:"}}, {"name": "merge_pull_request", "description": "Merge a pull request", "parameter": {"owner": "(string) Repository owner", "repo": "(string) Repository name", "pull_number": "(number) Pull request number", "commit_title": "(optional string) Title for merge commit", "commit_message": "(optional string) Extra detail for merge commit", "merge_method": "(optional string) Merge method ('merge', 'squash', 'rebase')"}}, {"name": "get_pull_request_files", "description": "Get the list of files changed in a pull request", "parameter": {"owner": "(string) Repository owner", "repo": "(string) Repository name", "pull_number": "(number) Pull request number"}}, {"name": "get_pull_request_status", "description": "Get the combined status of all status checks for a pull request", "parameter": {"owner": "(string) Repository owner", "repo": "(string) Repository name", "pull_number": "(number) Pull request number"}}, {"name": "update_pull_request_branch", "description": "Update a pull request branch with the latest changes from the base branch (equivalent to GitHub's 'Update branch' button)", "parameter": {"owner": "(string) Repository owner", "repo": "(string) Repository name", "pull_number": "(number) Pull request number", "expected_head_sha": "(optional string) The expected SHA of the pull request's HEAD ref"}}, {"name": "get_pull_request_comments", "description": "Get the review comments on a pull request", "parameter": {"owner": "(string) Repository owner", "repo": "(string) Repository name", "pull_number": "(number) Pull request number"}}, {"name": "get_pull_request_reviews", "description": "Get the reviews on a pull request", "parameter": {"owner": "(string) Repository owner", "repo": "(string) Repository name", "pull_number": "(number) Pull request number"}}], "domains": [{"name": "Code Toolkit", "description": "代码工具集,版本控制(如git命令执行)、代码生成、代码执行、测试等"}]}
{"name": "GitLab", "description": "GitLab operations including: file management, repository search/creation, issue/merge request creation, branching and forking", "tools": [{"name": "create_or_update_file", "description": "Create or update a single file in a project", "parameter": {"project_id": "(string) Project ID or URL-encoded path", "file_path": "(string) Path where to create/update the file", "content": "(string) Content of the file", "commit_message": "(string) Commit message", "branch": "(string) Branch to create/update the file in", "previous_path": "(Optional, string) Path of the file to move/rename"}}, {"name": "push_files", "description": "Push multiple files in a single commit", "parameter": {"project_id": "(string) Project ID or URL-encoded path", "branch": "(string) Branch to push to", "files": "(array) Files to push, each with `file_path` and `content`", "commit_message": "(string) Commit message"}}, {"name": "search_repositories", "description": "Search for GitLab projects", "parameter": {"search": "(string) Search query", "page": "(Optional, number) Page number for pagination", "per_page": "(Optional, number) Results per page (default 20)"}}, {"name": "create_repository", "description": "Create a new GitLab project", "parameter": {"name": "(string) Project name", "description": "(Optional, string) Project description", "visibility": "(Optional, string) 'private', 'internal', or 'public'", "initialize_with_readme": "(Optional, boolean) Initialize with README"}}, {"name": "get_file_contents", "description": "Get contents of a file or directory", "parameter": {"project_id": "(string) Project ID or URL-encoded path", "file_path": "(string) Path to file/directory", "ref": "(Optional, string) Branch/tag/commit to get contents from"}}, {"name": "create_issue", "description": "Create a new issue", "parameter": {"project_id": "(string) Project ID or URL-encoded path", "title": "(string) Issue title", "description": "(Optional, string) Issue description", "assignee_ids": "(Optional, number[]) User IDs to assign", "labels": "(Optional, string[]) Labels to add", "milestone_id": "(Optional, number) Milestone ID"}}, {"name": "create_merge_request", "description": "Create a new merge request", "parameter": {"project_id": "(string) Project ID or URL-encoded path", "title": "(string) MR title", "description": "(Optional, string) MR description", "source_branch": "(string) Branch containing changes", "target_branch": "(string) Branch to merge into", "draft": "(Optional, boolean) Create as draft MR", "allow_collaboration": "(Optional, boolean) Allow commits from upstream members"}}, {"name": "fork_repository", "description": "Fork a project", "parameter": {"project_id": "(string) Project ID or URL-encoded path", "namespace": "(Optional, string) Namespace to fork to"}}, {"name": "create_branch", "description": "Create a new branch", "parameter": {"project_id": "(string) Project ID or URL-encoded path", "branch": "(string) Name for new branch", "ref": "(Optional, string) Source branch/commit for new branch"}}], "domains": [{"name": "Code Toolkit", "description": "代码工具集,版本控制(如git命令执行)、代码生成、代码执行、测试等"}]}
{"name": "Google Drive", "description": "Search for files in Google Drive", "tools": [{"name": "search", "description": "Search for files in Google Drive", "parameter": {"query": "(string) Search query"}}], "domains": [{"name": "File System", "description": "文件系统管理,包括本地 / 云端文件的存储、读取、修改、权限控制及分类检索"}]}
{"name": "Google Maps", "description": "1.Convert address to coordinates 2.Convert coordinates to address 3.Search for places using text query 4.Get detailed information about a place 5.Calculate distances and times between points 6.Get elevation data for locations 7.Get directions between points", "tools": [{"name": "maps_geocode", "description": "Convert address to coordinates", "parameter": {"address": "(string) Address to be converted"}}, {"name": "maps_reverse_geocode", "description": "Convert coordinates to address", "parameter": {"latitude": "(number) Latitude coordinate", "longitude": "(number) Longitude coordinate"}}, {"name": "maps_search_places", "description": "Search for places using text query", "parameter": {"query": "(string) Text query for place search", "location": "(Optional, object) { latitude: number, longitude: number }", "radius": "(Optional, number) Radius in meters (max 50000)"}}, {"name": "maps_place_details", "description": "Get detailed information about a place", "parameter": {"place_id": "(string) Place ID to get details for"}}, {"name": "maps_distance_matrix", "description": "Calculate distances and times between points", "parameter": {"origins": "(string[]) List of origin addresses", "destinations": "(string[]) List of destination addresses", "mode": "(Optional, string) Travel mode: 'driving', 'walking', 'bicycling', 'transit'"}}, {"name": "maps_elevation", "description": "Get elevation data for locations", "parameter": {"locations": "(array of objects) [{latitude, longitude}]"}}, {"name": "maps_directions", "description": "Get directions between points", "parameter": {"origin": "(string) Origin address", "destination": "(string) Destination address", "mode": "(Optional, string) Travel mode: 'driving', 'walking', 'bicycling', 'transit'"}}], "domains": [{"name": "Location & Environmental Service", "description": "位置与环境服务，包括地理信息查询、导航、路线规划、酒店、机票、天气数据获取等"}]}
{"name": "Memory", "description": "1.在知识图谱中创建多个新实体 2.创建实体间的新关系 3.向现有实体添加新观察 4.删除实体及其关系 5.从实体中删除特定观察 6.从图谱中删除特定关系 7.读取整个知识图谱 8.基于查询搜索节点 9.按名称检索特定节点", "tools": [{"name": "create_entities", "description": "Create multiple new entities in the knowledge graph.", "parameter": {"entities": "(array of objects) Each object contains: `name` (string): Entity identifier, `entityType` (string): Type classification, `observations` (string[]): Associated observations"}}, {"name": "create_relations", "description": "Create multiple new relations between entities.", "parameter": {"relations": "(array of objects) Each object contains: `from` (string): Source entity name, `to` (string): Target entity name, `relationType` (string): Relationship type in active voice"}}, {"name": "add_observations", "description": "Add new observations to existing entities.", "parameter": {"observations": "(array of objects) Each object contains: `entityName` (string): Target entity, `contents` (string[]): New observations to add"}}, {"name": "delete_entities", "description": "Remove entities and their relations.", "parameter": {"entityNames": "(string[]) List of entity names to delete"}}, {"name": "delete_observations", "description": "Remove specific observations from entities.", "parameter": {"deletions": "(array of objects) Each object contains: `entityName` (string): Target entity, `observations` (string[]): Observations to remove"}}, {"name": "delete_relations", "description": "Remove specific relations from the graph.", "parameter": {"relations": "(array of objects) Each object contains: `from` (string): Source entity name, `to` (string): Target entity name, `relationType` (string): Relationship type"}}, {"name": "read_graph", "description": "Read the entire knowledge graph.", "parameter": {}}, {"name": "search_nodes", "description": "Search for nodes based on a query.", "parameter": {"query": "(string) Search term to match against entity names, types, and observation content"}}, {"name": "open_nodes", "description": "Retrieve specific nodes by name.", "parameter": {"names": "(string[]) List of node names to retrieve"}}], "domains": [{"name": "Knowledge Visualization", "description": "知识可视化，包括知识图谱导航、知识可视化生成及知识库搜索"}]}
{"name": "PostgreSQL", "description": "Execute read-only SQL queries against the connected database", "tools": [{"name": "query", "description": "Execute read-only SQL queries against the connected database", "parameter": {"sql": "(string): The SQL query to execute"}}], "domains": [{"name": "DataBase Management", "description": "数据库管理，涵盖数据库创建、查询、优化、备份及数据结构设计"}]}
{"name": "Puppeteer", "description": "Browser automation using Puppeteer, including: navigation, screenshot capture, element interaction (click/hover/fill/select), and JavaScript execution", "tools": [{"name": "puppeteer_navigate", "description": "Navigate to any URL in the browser", "parameter": {"url": "(string, required): URL to navigate to", "launchOptions": "(object, optional): PuppeteerJS LaunchOptions. Default null. If changed and not null, browser restarts. Example: { headless: true, args: ['--user-data-dir=\"C:/Data\"'] }", "allowDangerous": "(boolean, optional): Allow dangerous LaunchOptions that reduce security. When false, dangerous args like --no-sandbox, --disable-web-security will throw errors. Default false."}}, {"name": "puppeteer_screenshot", "description": "Capture screenshots of the entire page or specific elements", "parameter": {"name": "(string, required): Name for the screenshot", "selector": "(string, optional): CSS selector for element to screenshot", "width": "(number, optional, default: 800): Screenshot width", "height": "(number, optional, default: 600): Screenshot height", "encoded": "(boolean, optional): If true, capture the screenshot as a base64-encoded data URI (as text) instead of binary image content. Default false."}}, {"name": "puppeteer_click", "description": "Click elements on the page", "parameter": {"selector": "(string): CSS selector for element to click"}}, {"name": "puppeteer_hover", "description": "Hover elements on the page", "parameter": {"selector": "(string): CSS selector for element to hover"}}, {"name": "puppeteer_fill", "description": "Fill out input fields", "parameter": {"selector": "(string): CSS selector for input field", "value": "(string): Value to fill"}}, {"name": "puppeteer_select", "description": "Select an element with SELECT tag", "parameter": {"selector": "(string): CSS selector for element to select", "value": "(string): Value to select"}}, {"name": "puppeteer_evaluate", "description": "Execute JavaScript in the browser console", "parameter": {"script": "(string): JavaScript code to execute"}}], "domains": [{"name": "Browser Operation", "description": "浏览器操作与自动化控制,如网页元素操控、Cookie 管理、页面截图等"}]}
{"name": "Sentry", "description": "Retrieve and analyze Sentry issues by ID or URL", "tools": [{"name": "get_sentry_issue", "description": "Retrieve and analyze a Sentry issue by ID or URL", "parameter": {"issue_id_or_url": "(string) Sentry issue ID or URL to analyze"}}, {"name": "sentry-issue", "description": "Retrieve issue details from Sentry", "parameter": {"issue_id_or_url": "(string) Sentry issue ID or URL"}}], "domains": [{"name": "Application Monitoring & Management", "description": "Application performance monitoring and management, including error tracking, deployment management, performance metrics analysis, and team collaboration"}]}
{"name": "Sequential Thinking", "description": "Facilitates a detailed, step-by-step thinking process for problem-solving and analysis", "tools": [{"name": "sequential_thinking", "description": "Facilitates a detailed, step-by-step thinking process for problem-solving and analysis.", "parameter": {"thought": "(string) The current thinking step", "nextThoughtNeeded": "(boolean) Whether another thought step is needed", "thoughtNumber": "(integer) Current thought number", "totalThoughts": "(integer) Estimated total thoughts needed", "isRevision": "(boolean, optional) Whether this revises previous thinking", "revisesThought": "(integer, optional) Which thought is being reconsidered", "branchFromThought": "(integer, optional) Branching point thought number", "branchId": "(string, optional) Branch identifier", "needsMoreThoughts": "(boolean, optional) If more thoughts are needed"}}], "domains": [{"name": "Problem Solving & Analysis", "description": "Problem-solving and analysis tools that facilitate detailed, step-by-step thinking processes"}]}
{"name": "Sqlite", "description": "1. Execute SELECT queries to read data from the database 2. Execute INSERT, UPDATE, or DELETE queries 3. Create new tables in the database 4. Get a list of all tables in the database 5. View schema information for a specific table 6. Add new business insights to the memo resource", "tools": [{"name": "read_query", "description": "Execute SELECT queries to read data from the database", "parameter": {"query": "(string) The SELECT SQL query to execute"}}, {"name": "write_query", "description": "Execute INSERT, UPDATE, or DELETE queries", "parameter": {"query": "(string) The SQL modification query"}}, {"name": "create_table", "description": "Create new tables in the database", "parameter": {"query": "(string) CREATE TABLE SQL statement"}}, {"name": "list_tables", "description": "Get a list of all tables in the database", "parameter": {}}, {"name": "describe-table", "description": "View schema information for a specific table", "parameter": {"table_name": "(string) Name of table to describe"}}, {"name": "append_insight", "description": "Add new business insights to the memo resource", "parameter": {"insight": "(string) Business insight discovered from data analysis"}}], "domains": [{"name": "DataBase Management", "description": "数据库管理，涵盖数据库创建、查询、优化、备份及数据结构设计"}, {"name": "Business Management", "description": "业务管理，包括业务信息获取、位置管理、营业时间更新及媒体内容管理"}]}
{"name": "Time", "description": "1.获取特定时区或系统时区的当前时间 2.在不同时区之间转换时间", "tools": [{"name": "get_current_time", "description": "Get current time in a specific timezone or system timezone.", "parameter": {"timezone": "(string) IANA timezone name (e.g., 'America/New_York', 'Europe/London')"}}, {"name": "convert_time", "description": "Convert time between timezones.", "parameter": {"source_timezone": "(string) Source IANA timezone name", "time": "(string) Time in 24-hour format (HH:MM)", "target_timezone": "(string) Target IANA timezone name"}}], "domains": [{"name": "Time & Task Management", "description": "时间与任务管理,涵盖日历日程、待办事项、项目进度跟踪及会议调度"}]}