{"pass_at_k": 19, "elapsed_time": 0.0, "task": {"category": "AgentQL", "query": "Extract structured data from web pages"}, "is_correct": true, "target_server_name": "AgentQL", "target_tool_name": "extract-web-data", "target_server_description": "Extract structured data from a given URL using a prompt to describe the data and fields to extract", "target_tool_description": "Extracts structured data from a given URL using a prompt to describe the data and fields to extract.", "match_result": {"server": "AgentQL", "tool": {"name": "extract-web-data", "server": "AgentQL", "description": "Extracts structured data from a given URL using a prompt to describe the data and fields to extract.", "parameter": {"url": "(string) The URL of the web page to extract data from.", "prompt": "(string) A description of the actual data and its fields to extract."}, "task": "Extract the product names and prices from the first 10 items listed on the given e-commerce webpage URL."}, "score": 0.6101853847503662}, "sample_size": 2656, "position_index": 0, "selection_method": "position_index_0"}
{"pass_at_k": 1, "elapsed_time": 0.0, "task": {"category": "Alibaba Cloud AnalyticDB for MySQL", "query": "Retrieve execution plan for SQL queries"}, "is_correct": true, "target_server_name": "Alibaba Cloud AnalyticDB for MySQL", "target_tool_name": "get_execution_plan", "target_server_description": "1.在AnalyticDB for MySQL集群中执行SQL查询 2.获取SQL查询的执行计划 3.获取带运行时统计信息的实际执行计划", "target_tool_description": "Get the actual execution plan with runtime statistics for a SQL query", "match_result": {"server": "Alibaba Cloud AnalyticDB for MySQL", "tool": {"name": "get_execution_plan", "server": "Alibaba Cloud AnalyticDB for MySQL", "description": "Get the actual execution plan with runtime statistics for a SQL query", "parameter": {}, "task": "Retrieve the runtime execution plan and statistics for the SQL query currently being analyzed."}, "score": 0.9024614095687866}, "sample_size": 2656, "position_index": 6, "selection_method": "position_index_6"}
{"pass_at_k": 16, "elapsed_time": 0.0, "task": {"category": "Apify", "query": "Search for relevant actors by keywords"}, "is_correct": true, "target_server_name": "Apify", "target_tool_name": "discover-actors", "target_server_description": "1.检索特定Actor的文档、输入模式和详细信息 2.通过关键词搜索相关Actor并返回详细信息 3.将Actor添加到可用工具列表 4.从可用工具列表中移除Actor", "target_tool_description": "Searches for relevant Actors using keywords and returns their details.", "match_result": {"server": "Apify", "tool": {"name": "discover-actors", "server": "Apify", "description": "Searches for relevant Actors using keywords and returns their details.", "parameter": {}, "task": "Search for actors who have starred in action movies released in the last 5 years and retrieve their details."}, "score": 0.5845377445220947}, "sample_size": 2656, "position_index": 13, "selection_method": "position_index_13"}
{"pass_at_k": 9, "elapsed_time": 0.0, "task": {"category": "Arize Phoenix", "query": "Evaluate LLM applications"}, "is_correct": true, "target_server_name": "Arize Phoenix", "target_tool_name": "arize-phoenix-evals", "target_server_description": "1.提供围绕OpenTelemetry原语的轻量级包装 2.通过OpenAPI REST接口与Phoenix服务器交互的轻量级客户端 3.评估LLM应用程序的工具 4.Arize Phoenix API的客户端 5.Arize Phoenix的MCP服务器实现", "target_tool_description": "Tooling to evaluate LLM applications including RAG relevance, answer relevance, and more", "match_result": {"server": "Arize Phoenix", "tool": {"name": "arize-phoenix-evals", "server": "Arize Phoenix", "description": "Tooling to evaluate LLM applications including RAG relevance, answer relevance, and more", "parameter": {}, "task": "Evaluate the relevance of answers generated by an LLM application in a RAG (Retrieval-Augmented Generation) setup."}, "score": 0.6431509852409363}, "sample_size": 2656, "position_index": 19, "selection_method": "position_index_19"}
{"pass_at_k": 30, "elapsed_time": 0.0, "task": {"category": "Astra DB", "query": "List records from a database collection"}, "is_correct": true, "target_server_name": "Astra DB", "target_tool_name": "ListRecords", "target_server_description": "Astra DB operations, including: collection management (create/update/delete), record CRUD operations, bulk operations, document count estimation, and client setup assistance", "target_tool_description": "List records from a collection in the database", "match_result": {"server": "Astra DB", "tool": {"name": "ListRecords", "server": "Astra DB", "description": "List records from a collection in the database", "parameter": {}, "task": "List all records from the 'customers' collection in the database."}, "score": 0.8022525906562805}, "sample_size": 2656, "position_index": 26, "selection_method": "position_index_26"}
{"pass_at_k": 25, "elapsed_time": 0.0, "task": {"category": "Astra DB", "query": "Update multiple records in a collection"}, "is_correct": true, "target_server_name": "Astra DB", "target_tool_name": "BulkUpdateRecords", "target_server_description": "Astra DB operations, including: collection management (create/update/delete), record CRUD operations, bulk operations, document count estimation, and client setup assistance", "target_tool_description": "Update multiple records in a collection at once", "match_result": {"server": "Astra DB", "tool": {"name": "BulkUpdateRecords", "server": "Astra DB", "description": "Update multiple records in a collection at once", "parameter": {}, "task": "Update all records in the specified collection where the status field is set to \"pending\" and change it to \"completed\"."}, "score": 0.7777681946754456}, "sample_size": 2656, "position_index": 33, "selection_method": "position_index_33"}
{"pass_at_k": 2, "elapsed_time": 0.0, "task": {"category": "Audiense Insights", "query": "Fetch detailed information about an intelligence report"}, "is_correct": true, "target_server_name": "Audiense Insights", "target_tool_name": "get-report-info", "target_server_description": "Audiense insights reports operations, including: retrieving reports list, fetching detailed report information, getting audience insights, retrieving baseline audiences, fetching affinity categories, comparing audience influencers, getting audience content engagement, and generating comprehensive report summaries", "target_tool_description": "Fetches detailed information about a specific intelligence report, including status, segmentation type, audience size, segments, and access links.", "match_result": {"server": "Audiense Insights", "tool": {"name": "get-report-info", "server": "Audiense Insights", "description": "Fetches detailed information about a specific intelligence report, including status, segmentation type, audience size, segments, and access links.", "parameter": {"report_id": "(string) The ID of the intelligence report."}, "task": "Fetch the detailed information, including status, segmentation type, audience size, segments, and access links, for the intelligence report with ID \"RPT-2024-001\"."}, "score": 0.6528666019439697}, "sample_size": 2656, "position_index": 39, "selection_method": "position_index_39"}
{"pass_at_k": 4, "elapsed_time": 0.0, "task": {"category": "AWS", "query": "Search AWS documentation and best practices"}, "is_correct": true, "target_server_name": "AWS", "target_tool_name": "Search Documentation", "target_server_description": "1.搜索AWS文档和最佳实践 2.获取AWS文档内容推荐 3.将AWS文档转换为Markdown格式 4.发现和查询Amazon Bedrock知识库 5.分析AWS CDK项目并提供构造建议 6.提供基础设施即代码最佳实践 7.分析和可视化AWS成本 8.使用自然语言查询成本数据 9.生成详细成本报告和见解 10.基于文本和颜色生成图像 11.生成专业图表 12.运行AWS Lambda函数 13.实施安全优先的开发工作流程 14.集成Checkov进行安全检查 15.提供AWS和AWSCC提供者文档 16.使用AWS-IA GenAI模块 17.执行Terraform工作流 18.使用地理编码搜索地点 19.获取特定地点的详细信息 20.反向地理编码坐标到地址 21.搜索指定位置附近的地点 22.搜索当前开放的地点 23.计算位置之间的路线 24.优化路线点以提高路由效率 25.使用FAISS和Amazon Bedrock嵌入索引Git仓库 26.在仓库内执行语义搜索 27.分析仓库结构 28.在AWS组织中搜索GitHub仓库 29.支持文本和二进制的文件访问", "target_tool_description": "Search AWS documentation and best practices using the official AWS search API.", "match_result": {"server": "AWS", "tool": {"name": "Search Documentation", "server": "AWS", "description": "Search AWS documentation and best practices using the official AWS search API.", "parameter": {}, "task": "Search AWS documentation for best practices on setting up a secure S3 bucket configuration."}, "score": 0.5867215394973755}, "sample_size": 2656, "position_index": 46, "selection_method": "position_index_46"}
{"pass_at_k": 1, "elapsed_time": 0.0, "task": {"category": "AWS", "query": "Analyze and assist with AWS CDK projects"}, "is_correct": true, "target_server_name": "AWS", "target_tool_name": "AWS CDK Project Analysis", "target_server_description": "1.搜索AWS文档和最佳实践 2.获取AWS文档内容推荐 3.将AWS文档转换为Markdown格式 4.发现和查询Amazon Bedrock知识库 5.分析AWS CDK项目并提供构造建议 6.提供基础设施即代码最佳实践 7.分析和可视化AWS成本 8.使用自然语言查询成本数据 9.生成详细成本报告和见解 10.基于文本和颜色生成图像 11.生成专业图表 12.运行AWS Lambda函数 13.实施安全优先的开发工作流程 14.集成Checkov进行安全检查 15.提供AWS和AWSCC提供者文档 16.使用AWS-IA GenAI模块 17.执行Terraform工作流 18.使用地理编码搜索地点 19.获取特定地点的详细信息 20.反向地理编码坐标到地址 21.搜索指定位置附近的地点 22.搜索当前开放的地点 23.计算位置之间的路线 24.优化路线点以提高路由效率 25.使用FAISS和Amazon Bedrock嵌入索引Git仓库 26.在仓库内执行语义搜索 27.分析仓库结构 28.在AWS组织中搜索GitHub仓库 29.支持文本和二进制的文件访问", "target_tool_description": "Analyze and assist with AWS CDK projects.", "match_result": {"server": "AWS", "tool": {"name": "AWS CDK Project Analysis", "server": "AWS", "description": "Analyze and assist with AWS CDK projects.", "parameter": {}, "task": "Analyze the infrastructure as code setup in the current AWS CDK project and identify any potential issues or optimizations."}, "score": 0.7080755233764648}, "sample_size": 2656, "position_index": 53, "selection_method": "position_index_53"}
{"pass_at_k": 1, "elapsed_time": 0.0, "task": {"category": "AWS", "query": "Generate images from text"}, "is_correct": true, "target_server_name": "AWS", "target_tool_name": "Text-Based Image Generation", "target_server_description": "1.搜索AWS文档和最佳实践 2.获取AWS文档内容推荐 3.将AWS文档转换为Markdown格式 4.发现和查询Amazon Bedrock知识库 5.分析AWS CDK项目并提供构造建议 6.提供基础设施即代码最佳实践 7.分析和可视化AWS成本 8.使用自然语言查询成本数据 9.生成详细成本报告和见解 10.基于文本和颜色生成图像 11.生成专业图表 12.运行AWS Lambda函数 13.实施安全优先的开发工作流程 14.集成Checkov进行安全检查 15.提供AWS和AWSCC提供者文档 16.使用AWS-IA GenAI模块 17.执行Terraform工作流 18.使用地理编码搜索地点 19.获取特定地点的详细信息 20.反向地理编码坐标到地址 21.搜索指定位置附近的地点 22.搜索当前开放的地点 23.计算位置之间的路线 24.优化路线点以提高路由效率 25.使用FAISS和Amazon Bedrock嵌入索引Git仓库 26.在仓库内执行语义搜索 27.分析仓库结构 28.在AWS组织中搜索GitHub仓库 29.支持文本和二进制的文件访问", "target_tool_description": "Generate images using text with customizable parameters.", "match_result": {"server": "AWS", "tool": {"name": "Text-Based Image Generation", "server": "AWS", "description": "Generate images using text with customizable parameters.", "parameter": {}, "task": "Generate an image based on the text description \"a serene mountain landscape at sunset with a clear blue lake in the foreground.\""}, "score": 0.7201669812202454}, "sample_size": 2656, "position_index": 59, "selection_method": "position_index_59"}
{"pass_at_k": 1, "elapsed_time": 0.0, "task": {"category": "AWS", "query": "Implement security-first development practices"}, "is_correct": true, "target_server_name": "AWS", "target_tool_name": "Security-First Development Workflow", "target_server_description": "1.搜索AWS文档和最佳实践 2.获取AWS文档内容推荐 3.将AWS文档转换为Markdown格式 4.发现和查询Amazon Bedrock知识库 5.分析AWS CDK项目并提供构造建议 6.提供基础设施即代码最佳实践 7.分析和可视化AWS成本 8.使用自然语言查询成本数据 9.生成详细成本报告和见解 10.基于文本和颜色生成图像 11.生成专业图表 12.运行AWS Lambda函数 13.实施安全优先的开发工作流程 14.集成Checkov进行安全检查 15.提供AWS和AWSCC提供者文档 16.使用AWS-IA GenAI模块 17.执行Terraform工作流 18.使用地理编码搜索地点 19.获取特定地点的详细信息 20.反向地理编码坐标到地址 21.搜索指定位置附近的地点 22.搜索当前开放的地点 23.计算位置之间的路线 24.优化路线点以提高路由效率 25.使用FAISS和Amazon Bedrock嵌入索引Git仓库 26.在仓库内执行语义搜索 27.分析仓库结构 28.在AWS组织中搜索GitHub仓库 29.支持文本和二进制的文件访问", "target_tool_description": "Implement a security-first development workflow.", "match_result": {"server": "AWS", "tool": {"name": "Security-First Development Workflow", "server": "AWS", "description": "Implement a security-first development workflow.", "parameter": {}, "task": "Implement a security-first development workflow for a new web application project, ensuring secure coding practices, regular security reviews, and automated vulnerability scanning are integrated into the development lifecycle."}, "score": 0.6287949085235596}, "sample_size": 2656, "position_index": 66, "selection_method": "position_index_66"}
{"pass_at_k": 2, "elapsed_time": 0.0, "task": {"category": "AWS", "query": "Convert coordinates to addresses"}, "is_correct": true, "target_server_name": "AWS", "target_tool_name": "Reverse Geocode Coordinates to Addresses", "target_server_description": "1.搜索AWS文档和最佳实践 2.获取AWS文档内容推荐 3.将AWS文档转换为Markdown格式 4.发现和查询Amazon Bedrock知识库 5.分析AWS CDK项目并提供构造建议 6.提供基础设施即代码最佳实践 7.分析和可视化AWS成本 8.使用自然语言查询成本数据 9.生成详细成本报告和见解 10.基于文本和颜色生成图像 11.生成专业图表 12.运行AWS Lambda函数 13.实施安全优先的开发工作流程 14.集成Checkov进行安全检查 15.提供AWS和AWSCC提供者文档 16.使用AWS-IA GenAI模块 17.执行Terraform工作流 18.使用地理编码搜索地点 19.获取特定地点的详细信息 20.反向地理编码坐标到地址 21.搜索指定位置附近的地点 22.搜索当前开放的地点 23.计算位置之间的路线 24.优化路线点以提高路由效率 25.使用FAISS和Amazon Bedrock嵌入索引Git仓库 26.在仓库内执行语义搜索 27.分析仓库结构 28.在AWS组织中搜索GitHub仓库 29.支持文本和二进制的文件访问", "target_tool_description": "Reverse geocode coordinates to addresses.", "match_result": {"server": "AWS", "tool": {"name": "Reverse Geocode Coordinates to Addresses", "server": "AWS", "description": "Reverse geocode coordinates to addresses.", "parameter": {}, "task": "Convert the given latitude and longitude coordinates into their corresponding street addresses."}, "score": 0.7132318615913391}, "sample_size": 2656, "position_index": 73, "selection_method": "position_index_73"}
{"pass_at_k": -1, "elapsed_time": 0.0, "task": {"category": "AWS", "query": "Search within repositories using semantic analysis"}, "is_correct": false, "target_server_name": "AWS", "target_tool_name": "Semantic Search Within Repositories", "target_server_description": "1.搜索AWS文档和最佳实践 2.获取AWS文档内容推荐 3.将AWS文档转换为Markdown格式 4.发现和查询Amazon Bedrock知识库 5.分析AWS CDK项目并提供构造建议 6.提供基础设施即代码最佳实践 7.分析和可视化AWS成本 8.使用自然语言查询成本数据 9.生成详细成本报告和见解 10.基于文本和颜色生成图像 11.生成专业图表 12.运行AWS Lambda函数 13.实施安全优先的开发工作流程 14.集成Checkov进行安全检查 15.提供AWS和AWSCC提供者文档 16.使用AWS-IA GenAI模块 17.执行Terraform工作流 18.使用地理编码搜索地点 19.获取特定地点的详细信息 20.反向地理编码坐标到地址 21.搜索指定位置附近的地点 22.搜索当前开放的地点 23.计算位置之间的路线 24.优化路线点以提高路由效率 25.使用FAISS和Amazon Bedrock嵌入索引Git仓库 26.在仓库内执行语义搜索 27.分析仓库结构 28.在AWS组织中搜索GitHub仓库 29.支持文本和二进制的文件访问", "target_tool_description": "Perform semantic search within repositories.", "match_result": {"server": "Replicate", "tool": {"name": "search_models", "server": "Replicate", "description": "Find models using semantic search", "parameter": {}, "task": "Find relevant models by performing a semantic search based on the given query."}, "score": 0.7213355302810669}, "sample_size": 2656, "position_index": 79, "selection_method": "position_index_79"}
{"pass_at_k": 13, "elapsed_time": 0.0, "task": {"category": "Azure", "query": "List and view details of indexes"}, "is_correct": true, "target_server_name": "Azure", "target_tool_name": "List indexes and look at their schema and configuration", "target_server_description": "1. List and manage Azure AI Search services, indexes, and queries 2. List and manage Cosmos DB accounts, databases, containers, and items 3. Execute SQL queries against Cosmos DB containers 4. List and manage Azure Database for PostgreSQL - Flexible Server databases, tables, and servers 5. List and manage Kusto clusters, databases, tables, and schemas 6. Query Kusto databases using KQL 7. List and manage Storage accounts, blob containers, blobs, and tables 8. Query logs using KQL in Log Analytics workspaces 9. List and manage App Configuration stores, key-value pairs, and labeled configurations 10. Lock/unlock configuration settings in App Configuration stores 11. List, create, and manage keys in Azure Key Vault 12. List and manage resource groups 13. Execute Azure CLI and Azure Developer CLI commands 14. Support for all Azure CLI functionality, JSON output formatting, and cross-platform compatibility 15. Support for template discovery, initialization, provisioning, and deployment", "target_tool_description": "Lists indexes and provides details about their schema and configuration.", "match_result": {"server": "Azure", "tool": {"name": "List indexes and look at their schema and configuration", "server": "Azure", "description": "Lists indexes and provides details about their schema and configuration.", "parameter": {}, "task": "List all indexes in the current database and provide details about their schema and configuration."}, "score": 0.6045992374420166}, "sample_size": 2656, "position_index": 86, "selection_method": "position_index_86"}
{"pass_at_k": 11, "elapsed_time": 0.0, "task": {"category": "Azure", "query": "List and query databases in PostgreSQL Flexible Server"}, "is_correct": true, "target_server_name": "Azure", "target_tool_name": "List and query databases", "target_server_description": "1. List and manage Azure AI Search services, indexes, and queries 2. List and manage Cosmos DB accounts, databases, containers, and items 3. Execute SQL queries against Cosmos DB containers 4. List and manage Azure Database for PostgreSQL - Flexible Server databases, tables, and servers 5. List and manage Kusto clusters, databases, tables, and schemas 6. Query Kusto databases using KQL 7. List and manage Storage accounts, blob containers, blobs, and tables 8. Query logs using KQL in Log Analytics workspaces 9. List and manage App Configuration stores, key-value pairs, and labeled configurations 10. Lock/unlock configuration settings in App Configuration stores 11. List, create, and manage keys in Azure Key Vault 12. List and manage resource groups 13. Execute Azure CLI and Azure Developer CLI commands 14. Support for all Azure CLI functionality, JSON output formatting, and cross-platform compatibility 15. Support for template discovery, initialization, provisioning, and deployment", "target_tool_description": "Lists and queries databases within an Azure Database for PostgreSQL - Flexible Server.", "match_result": {"server": "Azure", "tool": {"name": "List and query databases", "server": "Azure", "description": "Lists and queries databases within an Azure Database for PostgreSQL - Flexible Server.", "parameter": {}, "task": "List all available databases in the Azure Database for PostgreSQL - Flexible Server and retrieve the schema details for the top 5 largest databases."}, "score": 0.5491898059844971}, "sample_size": 2656, "position_index": 92, "selection_method": "position_index_92"}
{"pass_at_k": -1, "elapsed_time": 0.0, "task": {"category": "Azure", "query": "Sample rows from a table"}, "is_correct": false, "target_server_name": "Azure", "target_tool_name": "Sample rows from a Kusto table", "target_server_description": "1. List and manage Azure AI Search services, indexes, and queries 2. List and manage Cosmos DB accounts, databases, containers, and items 3. Execute SQL queries against Cosmos DB containers 4. List and manage Azure Database for PostgreSQL - Flexible Server databases, tables, and servers 5. List and manage Kusto clusters, databases, tables, and schemas 6. Query Kusto databases using KQL 7. List and manage Storage accounts, blob containers, blobs, and tables 8. Query logs using KQL in Log Analytics workspaces 9. List and manage App Configuration stores, key-value pairs, and labeled configurations 10. Lock/unlock configuration settings in App Configuration stores 11. List, create, and manage keys in Azure Key Vault 12. List and manage resource groups 13. Execute Azure CLI and Azure Developer CLI commands 14. Support for all Azure CLI functionality, JSON output formatting, and cross-platform compatibility 15. Support for template discovery, initialization, provisioning, and deployment", "target_tool_description": "Samples rows from a Kusto table.", "match_result": {"server": "Airtable", "tool": {"name": "create_record", "server": "Airtable", "description": "Creates a new record in a table", "parameter": {"baseId": "(string, required) The ID of the Airtable base", "tableId": "(string, required) The ID of the table", "fields": "(object, required) The fields and values for the new record"}, "task": "Add a new record to the specified Airtable with the following details: customer name \"John Doe\", email \"john.doe@example.com\", and subscription date \"2024-05-15\"."}, "score": 0.8739648461341858}, "sample_size": 2656, "position_index": 99, "selection_method": "position_index_99"}
{"pass_at_k": 1, "elapsed_time": 0.0, "task": {"category": "Azure", "query": "Query logs with KQL"}, "is_correct": true, "target_server_name": "Azure", "target_tool_name": "Query logs using KQL", "target_server_description": "1. List and manage Azure AI Search services, indexes, and queries 2. List and manage Cosmos DB accounts, databases, containers, and items 3. Execute SQL queries against Cosmos DB containers 4. List and manage Azure Database for PostgreSQL - Flexible Server databases, tables, and servers 5. List and manage Kusto clusters, databases, tables, and schemas 6. Query Kusto databases using KQL 7. List and manage Storage accounts, blob containers, blobs, and tables 8. Query logs using KQL in Log Analytics workspaces 9. List and manage App Configuration stores, key-value pairs, and labeled configurations 10. Lock/unlock configuration settings in App Configuration stores 11. List, create, and manage keys in Azure Key Vault 12. List and manage resource groups 13. Execute Azure CLI and Azure Developer CLI commands 14. Support for all Azure CLI functionality, JSON output formatting, and cross-platform compatibility 15. Support for template discovery, initialization, provisioning, and deployment", "target_tool_description": "Queries logs using KQL.", "match_result": {"server": "Azure", "tool": {"name": "Query logs using KQL", "server": "Azure", "description": "Queries logs using KQL.", "parameter": {}, "task": "Retrieve the last 100 error logs from the application logs using KQL."}, "score": 0.7348405122756958}, "sample_size": 2656, "position_index": 106, "selection_method": "position_index_106"}
{"pass_at_k": 2, "elapsed_time": 0.0, "task": {"category": "Azure", "query": "Manage configuration settings in App Configuration store"}, "is_correct": true, "target_server_name": "Azure", "target_tool_name": "Lock/unlock configuration settings", "target_server_description": "1. List and manage Azure AI Search services, indexes, and queries 2. List and manage Cosmos DB accounts, databases, containers, and items 3. Execute SQL queries against Cosmos DB containers 4. List and manage Azure Database for PostgreSQL - Flexible Server databases, tables, and servers 5. List and manage Kusto clusters, databases, tables, and schemas 6. Query Kusto databases using KQL 7. List and manage Storage accounts, blob containers, blobs, and tables 8. Query logs using KQL in Log Analytics workspaces 9. List and manage App Configuration stores, key-value pairs, and labeled configurations 10. Lock/unlock configuration settings in App Configuration stores 11. List, create, and manage keys in Azure Key Vault 12. List and manage resource groups 13. Execute Azure CLI and Azure Developer CLI commands 14. Support for all Azure CLI functionality, JSON output formatting, and cross-platform compatibility 15. Support for template discovery, initialization, provisioning, and deployment", "target_tool_description": "Locks or unlocks configuration settings within an App Configuration store.", "match_result": {"server": "Azure", "tool": {"name": "Lock/unlock configuration settings", "server": "Azure", "description": "Locks or unlocks configuration settings within an App Configuration store.", "parameter": {}, "task": "Lock the configuration settings in the current App Configuration store to prevent further modifications."}, "score": 0.6019812822341919}, "sample_size": 2656, "position_index": 112, "selection_method": "position_index_112"}
{"pass_at_k": 90, "elapsed_time": 0.0, "task": {"category": "Azure", "query": "Ensure compatibility across different platforms"}, "is_correct": true, "target_server_name": "Azure", "target_tool_name": "Cross-platform compatibility", "target_server_description": "1. List and manage Azure AI Search services, indexes, and queries 2. List and manage Cosmos DB accounts, databases, containers, and items 3. Execute SQL queries against Cosmos DB containers 4. List and manage Azure Database for PostgreSQL - Flexible Server databases, tables, and servers 5. List and manage Kusto clusters, databases, tables, and schemas 6. Query Kusto databases using KQL 7. List and manage Storage accounts, blob containers, blobs, and tables 8. Query logs using KQL in Log Analytics workspaces 9. List and manage App Configuration stores, key-value pairs, and labeled configurations 10. Lock/unlock configuration settings in App Configuration stores 11. List, create, and manage keys in Azure Key Vault 12. List and manage resource groups 13. Execute Azure CLI and Azure Developer CLI commands 14. Support for all Azure CLI functionality, JSON output formatting, and cross-platform compatibility 15. Support for template discovery, initialization, provisioning, and deployment", "target_tool_description": "Ensures cross-platform compatibility.", "match_result": {"server": "Azure", "tool": {"name": "Cross-platform compatibility", "server": "Azure", "description": "Ensures cross-platform compatibility.", "parameter": {}, "task": "Test the application's functionality across Windows, macOS, and Linux operating systems to ensure seamless performance."}, "score": 0.5686504244804382}, "sample_size": 2656, "position_index": 119, "selection_method": "position_index_119"}
{"pass_at_k": 3, "elapsed_time": 0.0, "task": {"category": "Blockchain", "query": "Generate event topic signatures for blockchain events"}, "is_correct": true, "target_server_name": "Bankless Onchain", "target_tool_name": "build_event_topic", "target_server_description": "1.从各种区块链网络读取智能合约状态 2.检索代理实现合约地址 3.根据主题获取合约事件日志 4.从事件名称和参数类型生成事件主题签名", "target_tool_description": "Generate an event topic signature from event name and argument types.", "match_result": {"server": "Bankless Onchain", "tool": {"name": "build_event_topic", "server": "Bankless Onchain", "description": "Generate an event topic signature from event name and argument types.", "parameter": {"network": "(string, required) The blockchain network (e.g., 'ethereum', 'base')", "name": "(string, required) Event name (e.g., 'Transfer(address,address,uint256)')", "arguments": "(array, required) Event arguments types, each containing: { type (string) }"}, "task": "Generate a topic signature for the 'Approval(address,address,uint256)' event with argument types ['address', 'address', 'uint256'] on the Ethereum network."}, "score": 0.5502619743347168}, "sample_size": 2656, "position_index": 126, "selection_method": "position_index_126"}
{"pass_at_k": -1, "elapsed_time": 0.0, "task": {"category": "Bitrise", "query": "Update app settings and repository information"}, "is_correct": false, "target_server_name": "Bitrise", "target_tool_name": "update_app", "target_server_description": "Bitrise CI/CD平台操作,包括:应用管理、构建触发与监控、工作流配置、Webhook管理、缓存管理、流水线管理、工作区管理、用户与成员管理、发布管理(测试构建与测试者管理)", "target_tool_description": "Update an app", "match_result": {"server": "QGIS", "tool": {"name": "get_project_info", "server": "QGIS", "description": "Get current project information", "parameter": {}, "task": "Retrieve the details of the currently active project."}, "score": 0.803117036819458}, "sample_size": 2656, "position_index": 132, "selection_method": "position_index_132"}
{"pass_at_k": 22, "elapsed_time": 0.0, "task": {"category": "Bitrise", "query": "Trigger a new build or pipeline"}, "is_correct": true, "target_server_name": "Bitrise", "target_tool_name": "trigger_bitrise_build", "target_server_description": "Bitrise CI/CD平台操作,包括:应用管理、构建触发与监控、工作流配置、Webhook管理、缓存管理、流水线管理、工作区管理、用户与成员管理、发布管理(测试构建与测试者管理)", "target_tool_description": "Trigger a new build/pipeline for a specified Bitrise app", "match_result": {"server": "Bitrise", "tool": {"name": "trigger_bitrise_build", "server": "Bitrise", "description": "Trigger a new build/pipeline for a specified Bitrise app", "parameter": {"app_slug": "(string) Identifier of the Bitrise app", "branch": "(Optional, string) The branch to build (default: main)", "workflow_id": "(Optional, string) The workflow to build", "commit_message": "(Optional, string) The commit message for the build", "commit_hash": "(Optional, string) The commit hash for the build"}, "task": "Trigger a new build for the Bitrise app with identifier 'app123' using the 'deploy_prod' workflow on the 'release/v1.2.0' branch, including the commit message 'Bug fixes and performance improvements'."}, "score": 0.5792171955108643}, "sample_size": 2656, "position_index": 139, "selection_method": "position_index_139"}
{"pass_at_k": 2, "elapsed_time": 0.0, "task": {"category": "Bitrise", "query": "Retrieve build artifacts"}, "is_correct": true, "target_server_name": "Bitrise", "target_tool_name": "get_artifact", "target_server_description": "Bitrise CI/CD平台操作,包括:应用管理、构建触发与监控、工作流配置、Webhook管理、缓存管理、流水线管理、工作区管理、用户与成员管理、发布管理(测试构建与测试者管理)", "target_tool_description": "Get a specific build artifact", "match_result": {"server": "Bitrise", "tool": {"name": "get_artifact", "server": "Bitrise", "description": "Get a specific build artifact", "parameter": {"app_slug": "(string) Identifier of the Bitrise app", "build_slug": "(string) Identifier of the build", "artifact_slug": "(string) Identifier of the artifact"}, "task": "Retrieve the build artifact with identifier 'artifact123' from the Bitrise app 'myapp' for build 'build456'."}, "score": 0.8884963989257812}, "sample_size": 2656, "position_index": 146, "selection_method": "position_index_146"}
{"pass_at_k": 2, "elapsed_time": 0.0, "task": {"category": "Bitrise", "query": "Create an outgoing webhook for an application"}, "is_correct": true, "target_server_name": "Bitrise", "target_tool_name": "create_outgoing_webhook", "target_server_description": "Bitrise CI/CD平台操作,包括:应用管理、构建触发与监控、工作流配置、Webhook管理、缓存管理、流水线管理、工作区管理、用户与成员管理、发布管理(测试构建与测试者管理)", "target_tool_description": "Create an outgoing webhook for an app", "match_result": {"server": "Bitrise", "tool": {"name": "create_outgoing_webhook", "server": "Bitrise", "description": "Create an outgoing webhook for an app", "parameter": {"app_slug": "(string) Identifier of the Bitrise app", "events": "(array) List of events to trigger the webhook", "url": "(string) URL of the webhook", "headers": "(Optional, array) Headers to be sent with the webhook"}, "task": "Create an outgoing webhook for the Bitrise app with the identifier \"my-app-slug\" that triggers on \"build_failed\" and \"build_succeeded\" events, sending requests to \"https://example.com/webhook\" with custom headers \"Authorization: Bearer token123\" and \"Content-Type: application/json\"."}, "score": 0.8998763561248779}, "sample_size": 2656, "position_index": 152, "selection_method": "position_index_152"}
{"pass_at_k": 1, "elapsed_time": 0.0, "task": {"category": "Bitrise", "query": "Abort a running pipeline"}, "is_correct": true, "target_server_name": "Bitrise", "target_tool_name": "abort_pipeline", "target_server_description": "Bitrise CI/CD平台操作,包括:应用管理、构建触发与监控、工作流配置、Webhook管理、缓存管理、流水线管理、工作区管理、用户与成员管理、发布管理(测试构建与测试者管理)", "target_tool_description": "Abort a pipeline", "match_result": {"server": "Bitrise", "tool": {"name": "abort_pipeline", "server": "Bitrise", "description": "Abort a pipeline", "parameter": {"app_slug": "(string) Identifier of the Bitrise app", "pipeline_id": "(string) Identifier of the pipeline", "reason": "(Optional, string) Reason for aborting the pipeline"}, "task": "Abort the Bitrise pipeline with ID 'pipeline123' for the app identified by 'app456', providing the reason \"Unexpected error in build process\"."}, "score": 0.9610657691955566}, "sample_size": 2656, "position_index": 159, "selection_method": "position_index_159"}
{"pass_at_k": 1, "elapsed_time": 0.0, "task": {"category": "Bitrise", "query": "Retrieve groups within a workspace"}, "is_correct": true, "target_server_name": "Bitrise", "target_tool_name": "get_workspace_groups", "target_server_description": "Bitrise CI/CD平台操作,包括:应用管理、构建触发与监控、工作流配置、Webhook管理、缓存管理、流水线管理、工作区管理、用户与成员管理、发布管理(测试构建与测试者管理)", "target_tool_description": "Get the groups in a workspace", "match_result": {"server": "Bitrise", "tool": {"name": "get_workspace_groups", "server": "Bitrise", "description": "Get the groups in a workspace", "parameter": {"workspace_slug": "(string) Slug of the Bitrise workspace"}, "task": "Retrieve all groups within the Bitrise workspace identified by the slug \"dev-team-2024\"."}, "score": 0.9748213887214661}, "sample_size": 2656, "position_index": 165, "selection_method": "position_index_165"}
{"pass_at_k": 1, "elapsed_time": 0.0, "task": {"category": "Bitrise", "query": "List connected apps in a workspace"}, "is_correct": true, "target_server_name": "Bitrise", "target_tool_name": "list_connected_apps", "target_server_description": "Bitrise CI/CD平台操作,包括:应用管理、构建触发与监控、工作流配置、Webhook管理、缓存管理、流水线管理、工作区管理、用户与成员管理、发布管理(测试构建与测试者管理)", "target_tool_description": "List Release Management connected apps available for the authenticated account within a workspace", "match_result": {"server": "Bitrise", "tool": {"name": "list_connected_apps", "server": "Bitrise", "description": "List Release Management connected apps available for the authenticated account within a workspace", "parameter": {"workspace_slug": "(string) Identifier of the Bitrise workspace", "items_per_page": "(Optional, integer) Maximum number of connected apps per page", "page": "(Optional, integer) Page number to return", "platform": "(Optional, string) Filter for a specific mobile platform", "project_id": "(Optional, string) Filter for a specific Bitrise Project", "search": "(Optional, string) Search by bundle ID, package name, or app title"}, "task": "List all connected apps available in the Bitrise workspace \"dev-team-2024\" with 20 items per page, filtered for the Android platform."}, "score": 0.8811206221580505}, "sample_size": 2656, "position_index": 172, "selection_method": "position_index_172"}
{"pass_at_k": 1, "elapsed_time": 0.0, "task": {"category": "Bitrise", "query": "List available build distribution versions for testers"}, "is_correct": true, "target_server_name": "Bitrise", "target_tool_name": "list_build_distribution_versions", "target_server_description": "Bitrise CI/CD平台操作,包括:应用管理、构建触发与监控、工作流配置、Webhook管理、缓存管理、流水线管理、工作区管理、用户与成员管理、发布管理(测试构建与测试者管理)", "target_tool_description": "Lists Build Distribution versions available for testers", "match_result": {"server": "Bitrise", "tool": {"name": "list_build_distribution_versions", "server": "Bitrise", "description": "Lists Build Distribution versions available for testers", "parameter": {"connected_app_id": "(string) The uuidV4 identifier of the connected app", "items_per_page": "(Optional, integer) Maximum number of versions per page", "page": "(Optional, integer) Page number to return"}, "task": "List the first 10 available Build Distribution versions for the connected app with ID \"123e4567-e89b-12d3-a456-426614174000\"."}, "score": 0.9655262231826782}, "sample_size": 2656, "position_index": 179, "selection_method": "position_index_179"}
{"pass_at_k": 1, "elapsed_time": 0.0, "task": {"category": "Bitrise", "query": "List tester groups for a connected app"}, "is_correct": true, "target_server_name": "Bitrise", "target_tool_name": "list_tester_groups", "target_server_description": "Bitrise CI/CD平台操作,包括:应用管理、构建触发与监控、工作流配置、Webhook管理、缓存管理、流水线管理、工作区管理、用户与成员管理、发布管理(测试构建与测试者管理)", "target_tool_description": "Gives back a list of tester groups related to a specific connected app", "match_result": {"server": "Bitrise", "tool": {"name": "list_tester_groups", "server": "Bitrise", "description": "Gives back a list of tester groups related to a specific connected app", "parameter": {"connected_app_id": "(string) The uuidV4 identifier of the connected app", "items_per_page": "(Optional, integer) Maximum number of tester groups per page", "page": "(Optional, integer) Page number to return"}, "task": "Retrieve the first 20 tester groups associated with the connected app identified by UUID '123e4567-e89b-12d3-a456-426614174000'."}, "score": 0.94078528881073}, "sample_size": 2656, "position_index": 185, "selection_method": "position_index_185"}
{"pass_at_k": -1, "elapsed_time": 0.0, "task": {"category": "Box", "query": "Ask AI about a file"}, "is_correct": false, "target_server_name": "Box", "target_tool_name": "box_ask_ai_tool", "target_server_description": "Box云存储服务操作,包括:用户信息获取、文件搜索与读取、AI文件分析、文件夹管理、文件上传下载、文档生成模板管理及作业跟踪", "target_tool_description": "Ask Box AI about a file.", "match_result": {"server": "Golang Filesystem Server", "tool": {"name": "read_file", "server": "Golang Filesystem Server", "description": "Read complete contents of a file", "parameter": {"path": "(string) File path"}, "task": "Read the contents of the file located at \"/var/log/applications/system.log\"."}, "score": 0.7481878995895386}, "sample_size": 2656, "position_index": 192, "selection_method": "position_index_192"}
{"pass_at_k": -1, "elapsed_time": 0.0, "task": {"category": "Box", "query": "Upload content as a file to a specified folder"}, "is_correct": false, "target_server_name": "Box", "target_tool_name": "box_upload_file_from_content_tool", "target_server_description": "Box云存储服务操作,包括:用户信息获取、文件搜索与读取、AI文件分析、文件夹管理、文件上传下载、文档生成模板管理及作业跟踪", "target_tool_description": "Upload content as a file to Box.", "match_result": {"server": "Dart", "tool": {"name": "create_doc", "server": "Dart", "description": "Create a new doc with title, text content, and folder", "parameter": {}, "task": "Create a new document titled \"Project Plan\" with the content \"Outline the project milestones and deliverables\" in the \"Work\" folder."}, "score": 0.8479242920875549}, "sample_size": 2656, "position_index": 199, "selection_method": "position_index_199"}
{"pass_at_k": 8, "elapsed_time": 0.0, "task": {"category": "Box", "query": "Mark a file as a template"}, "is_correct": true, "target_server_name": "Box", "target_tool_name": "box_docgen_template_create_tool", "target_server_description": "Box云存储服务操作,包括:用户信息获取、文件搜索与读取、AI文件分析、文件夹管理、文件上传下载、文档生成模板管理及作业跟踪", "target_tool_description": "Mark a file as a Box Doc Gen template.", "match_result": {"server": "Box", "tool": {"name": "box_docgen_template_create_tool", "server": "Box", "description": "Mark a file as a Box Doc Gen template.", "parameter": {"file_id": "(str) File ID to mark as a template"}, "task": "Mark the file with ID \"12345\" as a Box Doc Gen template."}, "score": 0.6239466071128845}, "sample_size": 2656, "position_index": 205, "selection_method": "position_index_205"}
{"pass_at_k": 20, "elapsed_time": 0.0, "task": {"category": "Chroma", "query": "Create a new collection with optional configuration"}, "is_correct": true, "target_server_name": "Chroma", "target_tool_name": "chroma_create_collection", "target_server_description": "Chroma collection management, including: listing, creating, peeking, getting info, counting, modifying, and deleting collections. Also includes document operations like adding, querying, retrieving, updating, and deleting documents with semantic search and filtering.", "target_tool_description": "Create a new collection with optional HNSW configuration", "match_result": {"server": "Chroma", "tool": {"name": "chroma_create_collection", "server": "Chroma", "description": "Create a new collection with optional HNSW configuration", "parameter": {}, "task": "Create a new collection with HNSW configuration for efficient similarity search."}, "score": 0.6331719756126404}, "sample_size": 2656, "position_index": 212, "selection_method": "position_index_212"}
{"pass_at_k": 1, "elapsed_time": 0.0, "task": {"category": "Chroma", "query": "Perform semantic search on documents with advanced filtering"}, "is_correct": true, "target_server_name": "Chroma", "target_tool_name": "chroma_query_documents", "target_server_description": "Chroma collection management, including: listing, creating, peeking, getting info, counting, modifying, and deleting collections. Also includes document operations like adding, querying, retrieving, updating, and deleting documents with semantic search and filtering.", "target_tool_description": "Query documents using semantic search with advanced filtering", "match_result": {"server": "Chroma", "tool": {"name": "chroma_query_documents", "server": "Chroma", "description": "Query documents using semantic search with advanced filtering", "parameter": {}, "task": "Retrieve semantically similar documents from the collection based on the provided query text."}, "score": 0.9057512283325195}, "sample_size": 2656, "position_index": 219, "selection_method": "position_index_219"}
{"pass_at_k": 21, "elapsed_time": 0.0, "task": {"category": "CircleCI", "query": "Retrieve the status of the latest pipeline for a branch"}, "is_correct": true, "target_server_name": "CircleCI", "target_tool_name": "get_latest_pipeline_status", "target_server_description": "1. Retrieve CircleCI build failure logs 2. Identify flaky tests in CircleCI projects 3. Get latest pipeline status for a branch 4. Retrieve test metadata for CircleCI jobs 5. Assist with CircleCI configuration tasks 6. Generate structured prompt templates for AI applications 7. Generate test cases for prompt templates", "target_tool_description": "Retrieves the status of the latest pipeline for a given branch. Can be used with CircleCI project URLs or local project context.", "match_result": {"server": "CircleCI", "tool": {"name": "get_latest_pipeline_status", "server": "CircleCI", "description": "Retrieves the status of the latest pipeline for a given branch. Can be used with CircleCI project URLs or local project context.", "parameter": {"url_or_context": "(string) Either a CircleCI project URL or a combination of workspace root path, Git remote URL, and branch name"}, "task": "Retrieve the status of the latest pipeline for the 'main' branch in the specified CircleCI project."}, "score": 0.5937843918800354}, "sample_size": 2656, "position_index": 225, "selection_method": "position_index_225"}
{"pass_at_k": 29, "elapsed_time": 0.0, "task": {"category": "ClickHouse", "query": "List all tables in a specified database"}, "is_correct": true, "target_server_name": "ClickHouse", "target_tool_name": "list_tables", "target_server_description": "1.在ClickHouse集群上执行SQL查询 2.列出ClickHouse集群中的所有数据库 3.列出数据库中的所有表", "target_tool_description": "List all tables in a database.", "match_result": {"server": "ClickHouse", "tool": {"name": "list_tables", "server": "ClickHouse", "description": "List all tables in a database.", "parameter": {"database": "(string) The name of the database."}, "task": "List all tables in the \"customer_records\" database."}, "score": 0.656257152557373}, "sample_size": 2656, "position_index": 232, "selection_method": "position_index_232"}
{"pass_at_k": 19, "elapsed_time": 0.0, "task": {"category": "Codacy", "query": "Retrieve issues for a specific file in a repository"}, "is_correct": true, "target_server_name": "Codacy", "target_tool_name": "codacy_get_file_issues", "target_server_description": "Codacy代码质量分析工具集，包括：组织与仓库管理、代码质量指标分析（Grade, Issues, Duplication, Complexity, Coverage）、安全风险管理（SRM）、Pull Request分析、代码分析工具管理、本地CLI分析", "target_tool_description": "Get the issue list for a file in a repository.", "match_result": {"server": "Codacy", "tool": {"name": "codacy_get_file_issues", "server": "Codacy", "description": "Get the issue list for a file in a repository.", "parameter": {}, "task": "Retrieve the list of issues for the main.py file in the specified repository."}, "score": 0.6774395704269409}, "sample_size": 2656, "position_index": 238, "selection_method": "position_index_238"}
{"pass_at_k": 19, "elapsed_time": 0.0, "task": {"category": "Codacy", "query": "Retrieve pull request details"}, "is_correct": true, "target_server_name": "Codacy", "target_tool_name": "codacy_get_repository_pull_request", "target_server_description": "Codacy代码质量分析工具集，包括：组织与仓库管理、代码质量指标分析（Grade, Issues, Duplication, Complexity, Coverage）、安全风险管理（SRM）、Pull Request分析、代码分析工具管理、本地CLI分析", "target_tool_description": "Get detailed information about a specific pull request.", "match_result": {"server": "Codacy", "tool": {"name": "codacy_get_repository_pull_request", "server": "Codacy", "description": "Get detailed information about a specific pull request.", "parameter": {}, "task": "Retrieve detailed information about the latest pull request in the specified repository."}, "score": 0.7050725221633911}, "sample_size": 2656, "position_index": 245, "selection_method": "position_index_245"}
{"pass_at_k": 21, "elapsed_time": 0.0, "task": {"category": "Codacy", "query": "List available tool patterns for a repository"}, "is_correct": true, "target_server_name": "Codacy", "target_tool_name": "codacy_list_repository_tool_patterns", "target_server_description": "Codacy代码质量分析工具集，包括：组织与仓库管理、代码质量指标分析（Grade, Issues, Duplication, Complexity, Coverage）、安全风险管理（SRM）、Pull Request分析、代码分析工具管理、本地CLI分析", "target_tool_description": "List the patterns of a tool available for a repository.", "match_result": {"server": "Codacy", "tool": {"name": "codacy_list_repository_tool_patterns", "server": "Codacy", "description": "List the patterns of a tool available for a repository.", "parameter": {}, "task": "List all available patterns for the specified repository's code analysis tool."}, "score": 0.645595133304596}, "sample_size": 2656, "position_index": 252, "selection_method": "position_index_252"}
{"pass_at_k": 10, "elapsed_time": 0.0, "task": {"category": "Comet Opik", "query": "Manage and organize projects and workspaces"}, "is_correct": true, "target_server_name": "Comet Opik", "target_tool_name": "Projects/Workspaces Management", "target_server_description": "1.管理提示词（创建、列表、更新、删除） 2.组织和管理项目/工作区 3.跟踪和分析追踪数据 4.收集和查询指标数据", "target_tool_description": "Organize and manage projects", "match_result": {"server": "Comet Opik", "tool": {"name": "Projects/Workspaces Management", "server": "Comet Opik", "description": "Organize and manage projects", "parameter": {}, "task": "Organize all active projects into categorized workspaces based on their current status and priority levels."}, "score": 0.7371740341186523}, "sample_size": 2656, "position_index": 258, "selection_method": "position_index_258"}
{"pass_at_k": 92, "elapsed_time": 0.0, "task": {"category": "Couchbase", "query": "Delete document by ID from a collection"}, "is_correct": true, "target_server_name": "Couchbase", "target_tool_name": "delete_document_by_id", "target_server_description": "Couchbase数据库操作,包括:获取作用域和集合列表、获取集合结构、通过ID获取/更新/删除文档、执行SQL++查询", "target_tool_description": "Delete a document by ID from a specified scope and collection.", "match_result": {"server": "Couchbase", "tool": {"name": "delete_document_by_id", "server": "Couchbase", "description": "Delete a document by ID from a specified scope and collection.", "parameter": {}, "task": "Delete the document with ID 'DOC123' from the 'invoices' collection in the '2024_records' scope."}, "score": 0.5945751667022705}, "sample_size": 2656, "position_index": 265, "selection_method": "position_index_265"}
{"pass_at_k": 1, "elapsed_time": 0.0, "task": {"category": "Dart", "query": "Move a task to trash"}, "is_correct": true, "target_server_name": "Dart", "target_tool_name": "delete_task", "target_server_description": "1. Get user space configuration 2. List, create, retrieve, update, and delete tasks with filtering options 3. List, create, retrieve, update, and delete docs with filtering options", "target_tool_description": "Move a task to the trash (recoverable)", "match_result": {"server": "Dart", "tool": {"name": "delete_task", "server": "Dart", "description": "Move a task to the trash (recoverable)", "parameter": {}, "task": "Move the specified task to the trash for potential recovery later."}, "score": 0.7469586730003357}, "sample_size": 2656, "position_index": 272, "selection_method": "position_index_272"}
{"pass_at_k": 10, "elapsed_time": 0.0, "task": {"category": "DevHub", "query": "Retrieve all businesses in the account"}, "is_correct": true, "target_server_name": "DevHub", "target_tool_name": "get_businesses", "target_server_description": "1.获取DevHub账户中的所有业务信息 2.获取特定业务的所有位置信息 3.获取DevHub位置的营业时间 4.更新DevHub位置的营业时间 5.根据地理坐标查找最近的DevHub位置 6.从URL获取DevHub站点ID和详细信息 7.按ID检索博客文章 8.创建新的博客文章 9.更新现有博客文章的标题和/或内容 10.将图像上传到DevHub媒体库", "target_tool_description": "Gets all businesses within the DevHub account. Returns a list of businesses with their IDs and names.", "match_result": {"server": "DevHub", "tool": {"name": "get_businesses", "server": "DevHub", "description": "Gets all businesses within the DevHub account. Returns a list of businesses with their IDs and names.", "parameter": {}, "task": "Retrieve the list of all businesses associated with the DevHub account, including their IDs and names."}, "score": 0.6642517447471619}, "sample_size": 2656, "position_index": 278, "selection_method": "position_index_278"}
{"pass_at_k": 15, "elapsed_time": 0.0, "task": {"category": "DevHub", "query": "Create a new blog post with HTML content"}, "is_correct": true, "target_server_name": "DevHub", "target_tool_name": "create_blog_post", "target_server_description": "1.获取DevHub账户中的所有业务信息 2.获取特定业务的所有位置信息 3.获取DevHub位置的营业时间 4.更新DevHub位置的营业时间 5.根据地理坐标查找最近的DevHub位置 6.从URL获取DevHub站点ID和详细信息 7.按ID检索博客文章 8.创建新的博客文章 9.更新现有博客文章的标题和/或内容 10.将图像上传到DevHub媒体库", "target_tool_description": "Creates a new blog post. The content should be in HTML format and should not include an H1 tag.", "match_result": {"server": "DevHub", "tool": {"name": "create_blog_post", "server": "DevHub", "description": "Creates a new blog post. The content should be in HTML format and should not include an H1 tag.", "parameter": {"site_id": "(string) The ID of the site where the blog post will be created.", "title": "(string) The title of the blog post.", "content": "(string) The HTML content of the blog post."}, "task": "Create a new blog post titled \"The Future of Renewable Energy\" with HTML-formatted content discussing solar and wind energy advancements, excluding an H1 tag, for the site with ID \"green-tech-blog\"."}, "score": 0.578200101852417}, "sample_size": 2656, "position_index": 285, "selection_method": "position_index_285"}
{"pass_at_k": 5, "elapsed_time": 0.0, "task": {"category": "Dynatrace", "query": "Configure notification workflows"}, "is_correct": true, "target_server_name": "Dynatrace", "target_tool_name": "set_up_notification_workflow", "target_server_description": "1.列出Kubernetes等服务的问题详情 2.列出和检索安全问题和漏洞详情 3.执行DQL查询获取事件或日志 4.使用Slack Connector发送Slack消息 5.使用Dynatrace Automation Engine设置通知工作流 6.检索实体的所有权信息", "target_tool_description": "Sets up notification workflows using the Dynatrace Automation Engine.", "match_result": {"server": "Dynatrace", "tool": {"name": "set_up_notification_workflow", "server": "Dynatrace", "description": "Sets up notification workflows using the Dynatrace Automation Engine.", "parameter": {}, "task": "Set up a notification workflow in the Dynatrace Automation Engine to alert the team when specific system events occur."}, "score": 0.6500831842422485}, "sample_size": 2656, "position_index": 292, "selection_method": "position_index_292"}
{"pass_at_k": 1, "elapsed_time": 0.0, "task": {"category": "Elasticsearch", "query": "Retrieve shard details for indices"}, "is_correct": true, "target_server_name": "Elasticsearch", "target_tool_name": "get_shards", "target_server_description": "Elasticsearch operations, including: listing indices, getting field mappings, performing searches with query DSL, and retrieving shard information", "target_tool_description": "Get shard information for all or specific indices", "match_result": {"server": "Elasticsearch", "tool": {"name": "get_shards", "server": "Elasticsearch", "description": "Get shard information for all or specific indices", "parameter": {}, "task": "Retrieve the shard details for all indices in the Elasticsearch cluster."}, "score": 0.9413305521011353}, "sample_size": 2656, "position_index": 298, "selection_method": "position_index_298"}
{"pass_at_k": 1, "elapsed_time": 0.0, "task": {"category": "eSignatures", "query": "Modify an existing template"}, "is_correct": true, "target_server_name": "eSignatures", "target_tool_name": "update_template", "target_server_description": "Contract management operations including: create/query/withdraw/delete contracts, create/update/query/delete templates, and manage template collaborators", "target_tool_description": "Update an existing template", "match_result": {"server": "eSignatures", "tool": {"name": "update_template", "server": "eSignatures", "description": "Update an existing template", "parameter": {}, "task": "Update the content and layout of an existing template to reflect the latest branding guidelines. Ensure all placeholders and dynamic elements are correctly configured."}, "score": 0.9793208837509155}, "sample_size": 2656, "position_index": 305, "selection_method": "position_index_305"}
{"pass_at_k": 2, "elapsed_time": 0.0, "task": {"category": "eSignatures", "query": "List collaborators for a template"}, "is_correct": true, "target_server_name": "eSignatures", "target_tool_name": "list_template_collaborators", "target_server_description": "Contract management operations including: create/query/withdraw/delete contracts, create/update/query/delete templates, and manage template collaborators", "target_tool_description": "View who can edit a template", "match_result": {"server": "eSignatures", "tool": {"name": "list_template_collaborators", "server": "eSignatures", "description": "View who can edit a template", "parameter": {}, "task": "List all collaborators who have editing permissions for the current template."}, "score": 0.8878790140151978}, "sample_size": 2656, "position_index": 311, "selection_method": "position_index_311"}
{"pass_at_k": 62, "elapsed_time": 0.0, "task": {"category": "Wikipedia", "query": "Retrieve structured information from articles"}, "is_correct": true, "target_server_name": "Exa", "target_tool_name": "wikipedia_search_exa", "target_server_description": "1.实时网页搜索与内容提取 2.学术论文与研究内容搜索 3.公司信息爬取与研究 4.特定URL内容提取 5.竞争对手查找 6.LinkedIn公司及人员搜索 7.Wikipedia信息检索 8.GitHub仓库搜索", "target_tool_description": "Search and retrieve information from Wikipedia articles on specific topics, giving you accurate, structured knowledge from the world's largest encyclopedia.", "match_result": {"server": "Exa", "tool": {"name": "wikipedia_search_exa", "server": "Exa", "description": "Search and retrieve information from Wikipedia articles on specific topics, giving you accurate, structured knowledge from the world's largest encyclopedia.", "parameter": {}, "task": "Search for detailed information about the history of the Roman Empire on Wikipedia."}, "score": 0.5539407730102539}, "sample_size": 2656, "position_index": 318, "selection_method": "position_index_318"}
{"pass_at_k": 27, "elapsed_time": 0.0, "task": {"category": "Fibery", "query": "Get detailed structure of a database"}, "is_correct": true, "target_server_name": "Fibery", "target_tool_name": "describe_database", "target_server_description": "Fibery workspace operations, including: list databases, describe database structure, query database, create/update entities", "target_tool_description": "Provides a detailed breakdown of a specific database's structure, showing all fields with their titles, names, and types.", "match_result": {"server": "Fibery", "tool": {"name": "describe_database", "server": "Fibery", "description": "Provides a detailed breakdown of a specific database's structure, showing all fields with their titles, names, and types.", "parameter": {}, "task": "Generate a detailed breakdown of the current database structure, including all fields with their titles, names, and types."}, "score": 0.6672441959381104}, "sample_size": 2656, "position_index": 325, "selection_method": "position_index_325"}
{"pass_at_k": 3, "elapsed_time": 0.0, "task": {"category": "Financial Datasets", "query": "Retrieve balance sheets for companies"}, "is_correct": true, "target_server_name": "Financial Datasets", "target_tool_name": "get_balance_sheets", "target_server_description": "1.获取公司财务报表（收入、资产负债表、现金流量表） 2.获取公司股票价格（当前和历史） 3.获取公司新闻 4.获取加密货币行情（当前和历史价格）", "target_tool_description": "Get balance sheets for a company.", "match_result": {"server": "Financial Datasets", "tool": {"name": "get_balance_sheets", "server": "Financial Datasets", "description": "Get balance sheets for a company.", "parameter": {}, "task": "Retrieve the balance sheets for the specified company for the last fiscal year."}, "score": 0.6351362466812134}, "sample_size": 2656, "position_index": 331, "selection_method": "position_index_331"}
{"pass_at_k": 8, "elapsed_time": 0.0, "task": {"category": "Financial Datasets", "query": "Retrieve historical cryptocurrency prices"}, "is_correct": true, "target_server_name": "Financial Datasets", "target_tool_name": "get_historical_crypto_prices", "target_server_description": "1.获取公司财务报表（收入、资产负债表、现金流量表） 2.获取公司股票价格（当前和历史） 3.获取公司新闻 4.获取加密货币行情（当前和历史价格）", "target_tool_description": "Gets historical prices for a crypto currency.", "match_result": {"server": "Financial Datasets", "tool": {"name": "get_historical_crypto_prices", "server": "Financial Datasets", "description": "Gets historical prices for a crypto currency.", "parameter": {}, "task": "Retrieve the historical price data for Bitcoin over the past 30 days."}, "score": 0.6160670518875122}, "sample_size": 2656, "position_index": 338, "selection_method": "position_index_338"}
{"pass_at_k": 47, "elapsed_time": 0.0, "task": {"category": "Firecrawl", "query": "Extract structured data from web pages using LLM"}, "is_correct": true, "target_server_name": "Firecrawl", "target_tool_name": "firecrawl_extract", "target_server_description": "Firecrawl web data acquisition tools, including: single URL scraping, batch URL scraping with rate limiting, batch operation status checking, web search with content extraction, asynchronous crawling, structured information extraction using LLM, deep web research with LLM analysis, and llms.txt file generation", "target_tool_description": "Extract structured information from web pages using LLM capabilities.", "match_result": {"server": "Firecrawl", "tool": {"name": "firecrawl_extract", "server": "Firecrawl", "description": "Extract structured information from web pages using LLM capabilities.", "parameter": {"urls": "(array) List of URLs to extract information from", "prompt": "(string) Custom prompt for the LLM extraction", "systemPrompt": "(string) System prompt to guide the LLM", "schema": "(object) JSON schema for structured data extraction", "allowExternalLinks": "(boolean) Allow extraction from external links", "enableWebSearch": "(boolean) Enable web search for additional context", "includeSubdomains": "(boolean) Include subdomains in extraction"}, "task": "Extract the titles and publication dates of articles from the specified list of news website URLs, using a custom prompt to focus on recent publications within the last month. Ensure the extraction follows a structured JSON schema and includes subdomains if available."}, "score": 0.4828404188156128}, "sample_size": 2656, "position_index": 345, "selection_method": "position_index_345"}
{"pass_at_k": 17, "elapsed_time": 0.0, "task": {"category": "Gitee", "query": "Create a repository for an organization"}, "is_correct": true, "target_server_name": "Gitee", "target_tool_name": "create_org_repo", "target_server_description": "GitHub/Gitee repository operations, including: listing user repositories, getting file content, creating repositories (user/org/enterprise), forking repositories, managing releases, searching open source repositories, managing pull requests (listing, creating, updating, merging, commenting), managing issues (creating, updating, commenting), and user information management (getting user info, searching users, listing notifications)", "target_tool_description": "Create an organization repository", "match_result": {"server": "Gitee", "tool": {"name": "create_org_repo", "server": "Gitee", "description": "Create an organization repository", "parameter": {}, "task": "Create a new repository under the specified organization with default settings."}, "score": 0.706429123878479}, "sample_size": 2656, "position_index": 351, "selection_method": "position_index_351"}
{"pass_at_k": 2, "elapsed_time": 0.0, "task": {"category": "Gitee", "query": "Merge pull requests"}, "is_correct": true, "target_server_name": "Gitee", "target_tool_name": "merge_pull", "target_server_description": "GitHub/Gitee repository operations, including: listing user repositories, getting file content, creating repositories (user/org/enterprise), forking repositories, managing releases, searching open source repositories, managing pull requests (listing, creating, updating, merging, commenting), managing issues (creating, updating, commenting), and user information management (getting user info, searching users, listing notifications)", "target_tool_description": "Merge a pull request", "match_result": {"server": "Gitee", "tool": {"name": "merge_pull", "server": "Gitee", "description": "Merge a pull request", "parameter": {}, "task": "Merge the latest pull request in the repository."}, "score": 0.8824291825294495}, "sample_size": 2656, "position_index": 358, "selection_method": "position_index_358"}
{"pass_at_k": -1, "elapsed_time": 0.0, "task": {"category": "Gitee", "query": "Update an issue on Gitee"}, "is_correct": false, "target_server_name": "Gitee", "target_tool_name": "update_issue", "target_server_description": "GitHub/Gitee repository operations, including: listing user repositories, getting file content, creating repositories (user/org/enterprise), forking repositories, managing releases, searching open source repositories, managing pull requests (listing, creating, updating, merging, commenting), managing issues (creating, updating, commenting), and user information management (getting user info, searching users, listing notifications)", "target_tool_description": "Update an issue", "match_result": {"server": "Gitee", "tool": {"name": "search_open_source_repositories", "server": "Gitee", "description": "Search open source repositories on Gitee", "parameter": {}, "task": "Search for open source repositories related to machine learning on Gitee."}, "score": 0.8733574748039246}, "sample_size": 2656, "position_index": 365, "selection_method": "position_index_365"}
{"pass_at_k": 1, "elapsed_time": 0.0, "task": {"category": "Gitee", "query": "Search for users on the platform"}, "is_correct": true, "target_server_name": "Gitee", "target_tool_name": "search_users", "target_server_description": "GitHub/Gitee repository operations, including: listing user repositories, getting file content, creating repositories (user/org/enterprise), forking repositories, managing releases, searching open source repositories, managing pull requests (listing, creating, updating, merging, commenting), managing issues (creating, updating, commenting), and user information management (getting user info, searching users, listing notifications)", "target_tool_description": "Search for users", "match_result": {"server": "Gitee", "tool": {"name": "search_users", "server": "Gitee", "description": "Search for users", "parameter": {}, "task": "Search for all active users in the system."}, "score": 0.6616631746292114}, "sample_size": 2656, "position_index": 371, "selection_method": "position_index_371"}
{"pass_at_k": 3, "elapsed_time": 0.0, "task": {"category": "gotoHuman", "query": "Retrieve schema for human review request"}, "is_correct": true, "target_server_name": "gotoHuman", "target_tool_name": "get-form-schema", "target_server_description": "1.列出所有可用的审查表单 2.获取给定表单的审查模式 3.请求人工审查", "target_tool_description": "Get the schema to use when requesting a human review for a given form.", "match_result": {"server": "gotoHuman", "tool": {"name": "get-form-schema", "server": "gotoHuman", "description": "Get the schema to use when requesting a human review for a given form.", "parameter": {"formId": "(string) The form ID to fetch the schema for"}, "task": "Retrieve the schema required for submitting a human review request for form ID \"F-2024-001\"."}, "score": 0.6648612022399902}, "sample_size": 2656, "position_index": 378, "selection_method": "position_index_378"}
{"pass_at_k": -1, "elapsed_time": 0.0, "task": {"category": "Grafana", "query": "Retrieve datasource information"}, "is_correct": false, "target_server_name": "Grafana", "target_tool_name": "get_datasource_by_uid", "target_server_description": "Grafana相关操作,包括:仪表盘搜索与管理、数据源查询与管理、Prometheus查询与元数据获取、Grafana Incident事件管理、Loki日志查询与统计、告警规则管理、OnCall调度管理、Sift调查分析、错误模式日志查找、慢请求查找", "target_tool_description": "Get a datasource by uid", "match_result": {"server": "Apache Gravitino(incubating)", "tool": {"name": "get_list_of_schemas", "server": "Apache Gravitino(incubating)", "description": "Get a list of schemas with basic information", "parameter": {}, "task": "Retrieve the list of all available schemas along with their basic details."}, "score": 0.8449769020080566}, "sample_size": 2656, "position_index": 384, "selection_method": "position_index_384"}
{"pass_at_k": 3, "elapsed_time": 0.0, "task": {"category": "Grafana", "query": "List incidents in monitoring system"}, "is_correct": true, "target_server_name": "Grafana", "target_tool_name": "list_incidents", "target_server_description": "Grafana相关操作,包括:仪表盘搜索与管理、数据源查询与管理、Prometheus查询与元数据获取、Grafana Incident事件管理、Loki日志查询与统计、告警规则管理、OnCall调度管理、Sift调查分析、错误模式日志查找、慢请求查找", "target_tool_description": "List incidents in Grafana Incident", "match_result": {"server": "Grafana", "tool": {"name": "list_incidents", "server": "Grafana", "description": "List incidents in Grafana Incident", "parameter": {}, "task": "List all active incidents in the Grafana Incident monitoring system."}, "score": 0.6019855737686157}, "sample_size": 2656, "position_index": 391, "selection_method": "position_index_391"}
{"pass_at_k": 4, "elapsed_time": 0.0, "task": {"category": "Grafana", "query": "Retrieve log stream statistics"}, "is_correct": true, "target_server_name": "Grafana", "target_tool_name": "query_loki_stats", "target_server_description": "Grafana相关操作,包括:仪表盘搜索与管理、数据源查询与管理、Prometheus查询与元数据获取、Grafana Incident事件管理、Loki日志查询与统计、告警规则管理、OnCall调度管理、Sift调查分析、错误模式日志查找、慢请求查找", "target_tool_description": "Get statistics about log streams", "match_result": {"server": "Grafana", "tool": {"name": "query_loki_stats", "server": "Grafana", "description": "Get statistics about log streams", "parameter": {}, "task": "Retrieve the latest statistics for all active log streams in the Loki logging system."}, "score": 0.7052923440933228}, "sample_size": 2656, "position_index": 398, "selection_method": "position_index_398"}
{"pass_at_k": 1, "elapsed_time": 0.0, "task": {"category": "Grafana", "query": "List teams from on-call service"}, "is_correct": true, "target_server_name": "Grafana", "target_tool_name": "list_oncall_teams", "target_server_description": "Grafana相关操作,包括:仪表盘搜索与管理、数据源查询与管理、Prometheus查询与元数据获取、Grafana Incident事件管理、Loki日志查询与统计、告警规则管理、OnCall调度管理、Sift调查分析、错误模式日志查找、慢请求查找", "target_tool_description": "List teams from Grafana OnCall", "match_result": {"server": "Grafana", "tool": {"name": "list_oncall_teams", "server": "Grafana", "description": "List teams from Grafana OnCall", "parameter": {}, "task": "List all teams currently configured in Grafana OnCall."}, "score": 0.7196707725524902}, "sample_size": 2656, "position_index": 404, "selection_method": "position_index_404"}
{"pass_at_k": 2, "elapsed_time": 0.0, "task": {"category": "Graphlit", "query": "Search and retrieve contents from knowledge base"}, "is_correct": true, "target_server_name": "Graphlit", "target_tool_name": "Query Contents", "target_server_description": "1.知识库内容查询与检索（包括内容、集合、订阅源、对话） 2.相关资源检索（文本、图像） 3.图像处理与描述 4.语言模型对话 5.结构化数据提取 6.内容发布（音频、图像） 7.多源数据采集（文件、网页、消息、社交媒体、邮件、问题、文本、短期记忆） 8.平台集成（邮件、项目管理、云存储、社交、团队协作） 9.网络爬虫与搜索 10.通知发送（Slack、邮件、Webhook、Twitter） 11.知识库项目管理（配置、集合操作） 12.平台资源列表查询", "target_tool_description": "Searches and retrieves contents from the knowledge base.", "match_result": {"server": "Graphlit", "tool": {"name": "Query Contents", "server": "Graphlit", "description": "Searches and retrieves contents from the knowledge base.", "parameter": {}, "task": "Search and retrieve all available contents from the knowledge base."}, "score": 0.7503314018249512}, "sample_size": 2656, "position_index": 411, "selection_method": "position_index_411"}
{"pass_at_k": 6, "elapsed_time": 0.0, "task": {"category": "Graphlit", "query": "Start a conversation with a language model"}, "is_correct": true, "target_server_name": "Graphlit", "target_tool_name": "Prompt LLM Conversation", "target_server_description": "1.知识库内容查询与检索（包括内容、集合、订阅源、对话） 2.相关资源检索（文本、图像） 3.图像处理与描述 4.语言模型对话 5.结构化数据提取 6.内容发布（音频、图像） 7.多源数据采集（文件、网页、消息、社交媒体、邮件、问题、文本、短期记忆） 8.平台集成（邮件、项目管理、云存储、社交、团队协作） 9.网络爬虫与搜索 10.通知发送（Slack、邮件、Webhook、Twitter） 11.知识库项目管理（配置、集合操作） 12.平台资源列表查询", "target_tool_description": "Initiates a conversation with a language model.", "match_result": {"server": "Graphlit", "tool": {"name": "Prompt LLM Conversation", "server": "Graphlit", "description": "Initiates a conversation with a language model.", "parameter": {}, "task": "Start a conversation with a language model to discuss the latest advancements in artificial intelligence."}, "score": 0.6135076284408569}, "sample_size": 2656, "position_index": 418, "selection_method": "position_index_418"}
{"pass_at_k": -1, "elapsed_time": 0.0, "task": {"category": "Graphlit", "query": "Ingest messages from communication platforms"}, "is_correct": false, "target_server_name": "Graphlit", "target_tool_name": "Messages", "target_server_description": "1.知识库内容查询与检索（包括内容、集合、订阅源、对话） 2.相关资源检索（文本、图像） 3.图像处理与描述 4.语言模型对话 5.结构化数据提取 6.内容发布（音频、图像） 7.多源数据采集（文件、网页、消息、社交媒体、邮件、问题、文本、短期记忆） 8.平台集成（邮件、项目管理、云存储、社交、团队协作） 9.网络爬虫与搜索 10.通知发送（Slack、邮件、Webhook、Twitter） 11.知识库项目管理（配置、集合操作） 12.平台资源列表查询", "target_tool_description": "Ingests messages from communication platforms into the knowledge base.", "match_result": {"server": "Everything", "tool": {"name": "echo", "server": "Everything", "description": "Simple tool to echo back input messages", "parameter": {"message": "(string) Message to echo back"}, "task": "Echo back the message \"Hello, how are you today?\" exactly as provided."}, "score": 0.6924998760223389}, "sample_size": 2656, "position_index": 424, "selection_method": "position_index_424"}
{"pass_at_k": 5, "elapsed_time": 0.0, "task": {"category": "Google Mail", "query": "Connect to email service for data ingestion"}, "is_correct": true, "target_server_name": "Graphlit", "target_tool_name": "Google Mail", "target_server_description": "1.知识库内容查询与检索（包括内容、集合、订阅源、对话） 2.相关资源检索（文本、图像） 3.图像处理与描述 4.语言模型对话 5.结构化数据提取 6.内容发布（音频、图像） 7.多源数据采集（文件、网页、消息、社交媒体、邮件、问题、文本、短期记忆） 8.平台集成（邮件、项目管理、云存储、社交、团队协作） 9.网络爬虫与搜索 10.通知发送（Slack、邮件、Webhook、Twitter） 11.知识库项目管理（配置、集合操作） 12.平台资源列表查询", "target_tool_description": "Connects to Google Mail to ingest emails.", "match_result": {"server": "Graphlit", "tool": {"name": "Google Mail", "server": "Graphlit", "description": "Connects to Google Mail to ingest emails.", "parameter": {}, "task": "Retrieve the latest 10 unread emails from the primary inbox in Google Mail."}, "score": 0.6202239990234375}, "sample_size": 2656, "position_index": 431, "selection_method": "position_index_431"}
{"pass_at_k": 5, "elapsed_time": 0.0, "task": {"category": "OneDrive", "query": "Connect and ingest files from cloud storage"}, "is_correct": true, "target_server_name": "Graphlit", "target_tool_name": "OneDrive", "target_server_description": "1.知识库内容查询与检索（包括内容、集合、订阅源、对话） 2.相关资源检索（文本、图像） 3.图像处理与描述 4.语言模型对话 5.结构化数据提取 6.内容发布（音频、图像） 7.多源数据采集（文件、网页、消息、社交媒体、邮件、问题、文本、短期记忆） 8.平台集成（邮件、项目管理、云存储、社交、团队协作） 9.网络爬虫与搜索 10.通知发送（Slack、邮件、Webhook、Twitter） 11.知识库项目管理（配置、集合操作） 12.平台资源列表查询", "target_tool_description": "Connects to OneDrive to ingest files.", "match_result": {"server": "Graphlit", "tool": {"name": "OneDrive", "server": "Graphlit", "description": "Connects to OneDrive to ingest files.", "parameter": {}, "task": "Upload a document from the local machine to the connected cloud storage service."}, "score": 0.5953114628791809}, "sample_size": 2656, "position_index": 438, "selection_method": "position_index_438"}
{"pass_at_k": 2, "elapsed_time": 0.0, "task": {"category": "Microsoft Teams", "query": "Connect to Microsoft Teams for message and file ingestion"}, "is_correct": true, "target_server_name": "Graphlit", "target_tool_name": "Microsoft Teams", "target_server_description": "1.知识库内容查询与检索（包括内容、集合、订阅源、对话） 2.相关资源检索（文本、图像） 3.图像处理与描述 4.语言模型对话 5.结构化数据提取 6.内容发布（音频、图像） 7.多源数据采集（文件、网页、消息、社交媒体、邮件、问题、文本、短期记忆） 8.平台集成（邮件、项目管理、云存储、社交、团队协作） 9.网络爬虫与搜索 10.通知发送（Slack、邮件、Webhook、Twitter） 11.知识库项目管理（配置、集合操作） 12.平台资源列表查询", "target_tool_description": "Connects to Microsoft Teams to ingest messages and files.", "match_result": {"server": "Graphlit", "tool": {"name": "Microsoft Teams", "server": "Graphlit", "description": "Connects to Microsoft Teams to ingest messages and files.", "parameter": {}, "task": "Retrieve all messages and shared files from the Microsoft Teams workspace for the past 7 days."}, "score": 0.6401799917221069}, "sample_size": 2656, "position_index": 444, "selection_method": "position_index_444"}
{"pass_at_k": 52, "elapsed_time": 0.0, "task": {"category": "Graphlit", "query": "Capture screenshots of web pages"}, "is_correct": true, "target_server_name": "Graphlit", "target_tool_name": "Screenshot Page", "target_server_description": "1.知识库内容查询与检索（包括内容、集合、订阅源、对话） 2.相关资源检索（文本、图像） 3.图像处理与描述 4.语言模型对话 5.结构化数据提取 6.内容发布（音频、图像） 7.多源数据采集（文件、网页、消息、社交媒体、邮件、问题、文本、短期记忆） 8.平台集成（邮件、项目管理、云存储、社交、团队协作） 9.网络爬虫与搜索 10.通知发送（Slack、邮件、Webhook、Twitter） 11.知识库项目管理（配置、集合操作） 12.平台资源列表查询", "target_tool_description": "Takes screenshots of web pages and ingests them.", "match_result": {"server": "Graphlit", "tool": {"name": "Screenshot Page", "server": "Graphlit", "description": "Takes screenshots of web pages and ingests them.", "parameter": {}, "task": "Take a screenshot of the current web page and save it for later analysis."}, "score": 0.5638715028762817}, "sample_size": 2656, "position_index": 451, "selection_method": "position_index_451"}
{"pass_at_k": 2, "elapsed_time": 0.0, "task": {"category": "Graphlit", "query": "Create a new collection in knowledge base"}, "is_correct": true, "target_server_name": "Graphlit", "target_tool_name": "Create Collection", "target_server_description": "1.知识库内容查询与检索（包括内容、集合、订阅源、对话） 2.相关资源检索（文本、图像） 3.图像处理与描述 4.语言模型对话 5.结构化数据提取 6.内容发布（音频、图像） 7.多源数据采集（文件、网页、消息、社交媒体、邮件、问题、文本、短期记忆） 8.平台集成（邮件、项目管理、云存储、社交、团队协作） 9.网络爬虫与搜索 10.通知发送（Slack、邮件、Webhook、Twitter） 11.知识库项目管理（配置、集合操作） 12.平台资源列表查询", "target_tool_description": "Creates a new collection in the knowledge base.", "match_result": {"server": "Graphlit", "tool": {"name": "Create Collection", "server": "Graphlit", "description": "Creates a new collection in the knowledge base.", "parameter": {}, "task": "Create a new collection in the knowledge base to organize and store related documents."}, "score": 0.7263332605361938}, "sample_size": 2656, "position_index": 457, "selection_method": "position_index_457"}
{"pass_at_k": 5, "elapsed_time": 0.0, "task": {"category": "Graphlit", "query": "Check feed processing status"}, "is_correct": true, "target_server_name": "Graphlit", "target_tool_name": "Is Feed Done?", "target_server_description": "1.知识库内容查询与检索（包括内容、集合、订阅源、对话） 2.相关资源检索（文本、图像） 3.图像处理与描述 4.语言模型对话 5.结构化数据提取 6.内容发布（音频、图像） 7.多源数据采集（文件、网页、消息、社交媒体、邮件、问题、文本、短期记忆） 8.平台集成（邮件、项目管理、云存储、社交、团队协作） 9.网络爬虫与搜索 10.通知发送（Slack、邮件、Webhook、Twitter） 11.知识库项目管理（配置、集合操作） 12.平台资源列表查询", "target_tool_description": "Checks if a feed is done processing.", "match_result": {"server": "Graphlit", "tool": {"name": "Is Feed Done?", "server": "Graphlit", "description": "Checks if a feed is done processing.", "parameter": {}, "task": "Check if the current feed has finished processing."}, "score": 0.6607934236526489}, "sample_size": 2656, "position_index": 464, "selection_method": "position_index_464"}
{"pass_at_k": -1, "elapsed_time": 0.0, "task": {"category": "Linear", "query": "List available projects"}, "is_correct": false, "target_server_name": "Graphlit", "target_tool_name": "List Linear Projects", "target_server_description": "1.知识库内容查询与检索（包括内容、集合、订阅源、对话） 2.相关资源检索（文本、图像） 3.图像处理与描述 4.语言模型对话 5.结构化数据提取 6.内容发布（音频、图像） 7.多源数据采集（文件、网页、消息、社交媒体、邮件、问题、文本、短期记忆） 8.平台集成（邮件、项目管理、云存储、社交、团队协作） 9.网络爬虫与搜索 10.通知发送（Slack、邮件、Webhook、Twitter） 11.知识库项目管理（配置、集合操作） 12.平台资源列表查询", "target_tool_description": "Lists available projects in Linear.", "match_result": {"server": "Lightdash", "tool": {"name": "get_project", "server": "Lightdash", "description": "Get details of a specific project", "parameter": {}, "task": "Retrieve the details of the currently active project."}, "score": 0.8677462339401245}, "sample_size": 2656, "position_index": 471, "selection_method": "position_index_471"}
{"pass_at_k": 6, "elapsed_time": 0.0, "task": {"category": "GreptimeDB", "query": "List available prompts"}, "is_correct": true, "target_server_name": "GreptimeDB", "target_tool_name": "list_prompts", "target_server_description": "1.列出数据库中的表 2.从表中读取数据 3.列出可用工具 4.执行SQL查询 5.列出可用提示 6.按名称获取提示", "target_tool_description": "Lists available prompts.", "match_result": {"server": "GreptimeDB", "tool": {"name": "list_prompts", "server": "GreptimeDB", "description": "Lists available prompts.", "parameter": {}, "task": "List all available prompts in the system."}, "score": 0.645365834236145}, "sample_size": 2656, "position_index": 477, "selection_method": "position_index_477"}
{"pass_at_k": -1, "elapsed_time": 0.0, "task": {"category": "Heroku", "query": "Deploy projects with app.json configuration"}, "is_correct": false, "target_server_name": "Heroku", "target_tool_name": "deploy_to_heroku", "target_server_description": "Heroku平台应用管理,包括:应用列表查询、应用信息获取、应用创建与重命名、应用所有权转移、项目部署、Dyno管理(列表/扩缩容/重启)、Add-on管理(列表/创建/信息获取)、维护模式切换、应用日志查看、Pipeline管理(创建/升级/列表/信息)、团队与空间管理、PostgreSQL数据库操作(查询/信息/进程/锁/性能分析/凭证/维护/备份/升级)", "target_tool_description": "Deploy projects to Heroku with an `app.json` configuration, supporting team deployments, private spaces, and environment setups.", "match_result": {"server": "llm-context", "tool": {"name": "lc-init", "server": "llm-context", "description": "Initialize project configuration", "parameter": {}, "task": "Initialize the project configuration for a new development environment."}, "score": 0.8426403403282166}, "sample_size": 2656, "position_index": 484, "selection_method": "position_index_484"}
{"pass_at_k": 10, "elapsed_time": 0.0, "task": {"category": "Heroku", "query": "Provision new add-ons for applications"}, "is_correct": true, "target_server_name": "Heroku", "target_tool_name": "create_addon", "target_server_description": "Heroku平台应用管理,包括:应用列表查询、应用信息获取、应用创建与重命名、应用所有权转移、项目部署、Dyno管理(列表/扩缩容/重启)、Add-on管理(列表/创建/信息获取)、维护模式切换、应用日志查看、Pipeline管理(创建/升级/列表/信息)、团队与空间管理、PostgreSQL数据库操作(查询/信息/进程/锁/性能分析/凭证/维护/备份/升级)", "target_tool_description": "Provision a new add-on for an app.", "match_result": {"server": "Heroku", "tool": {"name": "create_addon", "server": "Heroku", "description": "Provision a new add-on for an app.", "parameter": {}, "task": "Provision a new add-on for the specified application. Ensure the add-on is configured with default settings and ready for integration."}, "score": 0.6604921221733093}, "sample_size": 2656, "position_index": 491, "selection_method": "position_index_491"}
{"pass_at_k": 5, "elapsed_time": 0.0, "task": {"category": "Heroku", "query": "List available pipelines"}, "is_correct": true, "target_server_name": "Heroku", "target_tool_name": "pipelines_list", "target_server_description": "Heroku平台应用管理,包括:应用列表查询、应用信息获取、应用创建与重命名、应用所有权转移、项目部署、Dyno管理(列表/扩缩容/重启)、Add-on管理(列表/创建/信息获取)、维护模式切换、应用日志查看、Pipeline管理(创建/升级/列表/信息)、团队与空间管理、PostgreSQL数据库操作(查询/信息/进程/锁/性能分析/凭证/维护/备份/升级)", "target_tool_description": "List available pipelines.", "match_result": {"server": "Heroku", "tool": {"name": "pipelines_list", "server": "Heroku", "description": "List available pipelines.", "parameter": {}, "task": "List all available pipelines in the current system."}, "score": 0.6768808364868164}, "sample_size": 2656, "position_index": 497, "selection_method": "position_index_497"}
{"pass_at_k": 1, "elapsed_time": 0.0, "task": {"category": "Heroku", "query": "View database locks and blocking transactions"}, "is_correct": true, "target_server_name": "Heroku", "target_tool_name": "pg_locks", "target_server_description": "Heroku平台应用管理,包括:应用列表查询、应用信息获取、应用创建与重命名、应用所有权转移、项目部署、Dyno管理(列表/扩缩容/重启)、Add-on管理(列表/创建/信息获取)、维护模式切换、应用日志查看、Pipeline管理(创建/升级/列表/信息)、团队与空间管理、PostgreSQL数据库操作(查询/信息/进程/锁/性能分析/凭证/维护/备份/升级)", "target_tool_description": "View database locks and identify blocking transactions.", "match_result": {"server": "Heroku", "tool": {"name": "pg_locks", "server": "Heroku", "description": "View database locks and identify blocking transactions.", "parameter": {}, "task": "Check the current locks and identify any blocking transactions in the PostgreSQL database."}, "score": 0.7062399387359619}, "sample_size": 2656, "position_index": 504, "selection_method": "position_index_504"}
{"pass_at_k": -1, "elapsed_time": 0.0, "task": {"category": "Hologres", "query": "Execute SELECT queries on database"}, "is_correct": false, "target_server_name": "Hologres", "target_tool_name": "execute_select_sql", "target_server_description": "Hologres数据库操作,包括:执行SELECT/DML/DDL SQL查询、收集表统计信息、获取查询计划与执行计划", "target_tool_description": "Execute a SELECT SQL query on the Hologres server", "match_result": {"server": "Apache IoTDB", "tool": {"name": "select_query", "server": "Apache IoTDB", "description": "Execute SELECT queries to read data from the database", "parameter": {"query_sql": "(string) The SELECT SQL query to execute"}, "task": "Retrieve the names and email addresses of all customers who made a purchase in the last 30 days using a SELECT query."}, "score": 0.9244285821914673}, "sample_size": 2656, "position_index": 511, "selection_method": "position_index_511"}
{"pass_at_k": 1, "elapsed_time": 0.0, "task": {"category": "Hyperbrowser", "query": "Extract content from webpages"}, "is_correct": true, "target_server_name": "Hyperbrowser", "target_tool_name": "scrape_webpage", "target_server_description": "1. Extract formatted content from webpages 2. Crawl and extract content from linked pages 3. Convert HTML to structured JSON 4. Query the web with Bing search 5. Browser automation with Browser Use agent 6. General-purpose automation with OpenAI’s CUA model 7. Complex browser tasks with Claude computer use 8. Create, delete, and list Hyperbrowser profiles", "target_tool_description": "Extract formatted (markdown, screenshot etc) content from any webpage", "match_result": {"server": "Hyperbrowser", "tool": {"name": "scrape_webpage", "server": "Hyperbrowser", "description": "Extract formatted (markdown, screenshot etc) content from any webpage", "parameter": {}, "task": "Extract the formatted content including text and images from the homepage of a specified website."}, "score": 0.8848314881324768}, "sample_size": 2656, "position_index": 517, "selection_method": "position_index_517"}
{"pass_at_k": 1, "elapsed_time": 0.0, "task": {"category": "Hyperbrowser", "query": "Create a new persistent profile"}, "is_correct": true, "target_server_name": "Hyperbrowser", "target_tool_name": "create_profile", "target_server_description": "1. Extract formatted content from webpages 2. Crawl and extract content from linked pages 3. Convert HTML to structured JSON 4. Query the web with Bing search 5. Browser automation with Browser Use agent 6. General-purpose automation with OpenAI’s CUA model 7. Complex browser tasks with Claude computer use 8. Create, delete, and list Hyperbrowser profiles", "target_tool_description": "Creates a new persistent Hyperbrowser profile", "match_result": {"server": "Hyperbrowser", "tool": {"name": "create_profile", "server": "Hyperbrowser", "description": "Creates a new persistent Hyperbrowser profile", "parameter": {}, "task": "Create a new persistent profile for Hyperbrowser with default settings."}, "score": 0.9104768633842468}, "sample_size": 2656, "position_index": 524, "selection_method": "position_index_524"}
{"pass_at_k": -1, "elapsed_time": 0.0, "task": {"category": "Kagi Search", "query": "Find information on the web"}, "is_correct": false, "target_server_name": "Kagi Search", "target_tool_name": "search", "target_server_description": "1.执行网页搜索以查找基于查询的信息 2.基于URL生成内容摘要", "target_tool_description": "Performs a web search to find information based on the query provided.", "match_result": {"server": "Hyperbrowser", "tool": {"name": "scrape_webpage", "server": "Hyperbrowser", "description": "Extract formatted (markdown, screenshot etc) content from any webpage", "parameter": {}, "task": "Extract the formatted content including text and images from the homepage of a specified website."}, "score": 0.6427060961723328}, "sample_size": 2656, "position_index": 531, "selection_method": "position_index_531"}
{"pass_at_k": 3, "elapsed_time": 0.0, "task": {"category": "Keboola", "query": "Update bucket description"}, "is_correct": true, "target_server_name": "Keboola", "target_tool_name": "update_bucket_description", "target_server_description": "Keboola平台操作,包括:存储桶和表信息获取与更新、SQL查询与转换创建、组件与转换配置检索、作业管理与启动、文档查询", "target_tool_description": "Update the description for a given Keboola bucket.", "match_result": {"server": "Keboola", "tool": {"name": "update_bucket_description", "server": "Keboola", "description": "Update the description for a given Keboola bucket.", "parameter": {}, "task": "Update the description of the specified Keboola bucket to reflect its current usage and contents."}, "score": 0.7488465309143066}, "sample_size": 2656, "position_index": 537, "selection_method": "position_index_537"}
{"pass_at_k": -1, "elapsed_time": 0.0, "task": {"category": "Keboola", "query": "Retrieve transformation configurations"}, "is_correct": false, "target_server_name": "Keboola", "target_tool_name": "retrieve_transformations", "target_server_description": "Keboola平台操作,包括:存储桶和表信息获取与更新、SQL查询与转换创建、组件与转换配置检索、作业管理与启动、文档查询", "target_tool_description": "Retrieves transformations configurations in the project, optionally filtered by specific transformation IDs.", "match_result": {"server": "llm-context", "tool": {"name": "lc-init", "server": "llm-context", "description": "Initialize project configuration", "parameter": {}, "task": "Initialize the project configuration for a new development environment."}, "score": 0.8018659949302673}, "sample_size": 2656, "position_index": 544, "selection_method": "position_index_544"}
{"pass_at_k": 1, "elapsed_time": 0.0, "task": {"category": "Lara Translate", "query": "Retrieve saved translation memories"}, "is_correct": true, "target_server_name": "Lara Translate", "target_tool_name": "list_memories", "target_server_description": "1.文本翻译 2.翻译记忆管理，包括：创建、更新、删除翻译记忆 3.翻译单元管理，包括：添加、删除翻译单元 4.TMX文件导入与状态检查", "target_tool_description": "List saved translation memories", "match_result": {"server": "Lara Translate", "tool": {"name": "list_memories", "server": "Lara Translate", "description": "List saved translation memories", "parameter": {}, "task": "List all saved translation memories available in the system."}, "score": 0.9805620312690735}, "sample_size": 2656, "position_index": 550, "selection_method": "position_index_550"}
{"pass_at_k": 1, "elapsed_time": 0.0, "task": {"category": "Lara Translate", "query": "Check the status of a translation memory import"}, "is_correct": true, "target_server_name": "Lara Translate", "target_tool_name": "check_import_status", "target_server_description": "1.文本翻译 2.翻译记忆管理，包括：创建、更新、删除翻译记忆 3.翻译单元管理，包括：添加、删除翻译单元 4.TMX文件导入与状态检查", "target_tool_description": "Checks the status of a TMX file import", "match_result": {"server": "Lara Translate", "tool": {"name": "check_import_status", "server": "Lara Translate", "description": "Checks the status of a TMX file import", "parameter": {"id": "(string) The ID of the import job"}, "task": "Check the status of the TMX file import job with ID 'IMP12345'."}, "score": 0.8128079175949097}, "sample_size": 2656, "position_index": 557, "selection_method": "position_index_557"}
{"pass_at_k": 8, "elapsed_time": 0.0, "task": {"category": "Lingo.dev", "query": "Start the MCP server"}, "is_correct": true, "target_server_name": "Lingo.dev", "target_tool_name": "start-server", "target_server_description": "MCP server management, including: start/stop server, check status, list users, add/remove users", "target_tool_description": "Starts the MCP server.", "match_result": {"server": "Lingo.dev", "tool": {"name": "start-server", "server": "Lingo.dev", "description": "Starts the MCP server.", "parameter": {}, "task": "Start the MCP server to begin hosting services."}, "score": 0.6881266832351685}, "sample_size": 2656, "position_index": 564, "selection_method": "position_index_564"}
{"pass_at_k": 3, "elapsed_time": 0.0, "task": {"category": "Databases", "query": "Search hotels by name"}, "is_correct": true, "target_server_name": "MCP Toolbox for Databases", "target_tool_name": "search-hotels-by-name", "target_server_description": "Search for hotels based on name", "target_tool_description": "Search for hotels based on name.", "match_result": {"server": "MCP Toolbox for Databases", "tool": {"name": "search-hotels-by-name", "server": "MCP Toolbox for Databases", "description": "Search for hotels based on name.", "parameter": {"name": "(string) The name of the hotel."}, "task": "Find the details of a hotel named \"Grand Plaza\" using the hotel search service."}, "score": 0.6520264148712158}, "sample_size": 2656, "position_index": 570, "selection_method": "position_index_570"}
{"pass_at_k": 1, "elapsed_time": 0.0, "task": {"category": "Meilisearch", "query": "Add or update documents in a search index"}, "is_correct": true, "target_server_name": "Meilisearch", "target_tool_name": "add-documents", "target_server_description": "Meilisearch操作,包括:连接设置管理、索引创建与列表、文档检索与更新、搜索功能、索引设置管理、API密钥管理、任务管理、健康检查、版本与统计信息获取", "target_tool_description": "Add or update documents in an index", "match_result": {"server": "Meilisearch", "tool": {"name": "add-documents", "server": "Meilisearch", "description": "Add or update documents in an index", "parameter": {"indexUid": "(string) Unique identifier for the index", "documents": "(array of objects) Documents to add or update"}, "task": "Add or update 5 product documents in the index with the unique identifier \"products_2024\". The documents should include fields for product ID, name, price, and category."}, "score": 0.8985816240310669}, "sample_size": 2656, "position_index": 577, "selection_method": "position_index_577"}
{"pass_at_k": 36, "elapsed_time": 0.0, "task": {"category": "Meilisearch", "query": "Retrieve task details by unique identifier"}, "is_correct": true, "target_server_name": "Meilisearch", "target_tool_name": "get-task", "target_server_description": "Meilisearch操作,包括:连接设置管理、索引创建与列表、文档检索与更新、搜索功能、索引设置管理、API密钥管理、任务管理、健康检查、版本与统计信息获取", "target_tool_description": "Get information about a specific task", "match_result": {"server": "Meilisearch", "tool": {"name": "get-task", "server": "Meilisearch", "description": "Get information about a specific task", "parameter": {"uid": "(string) Unique identifier for the task"}, "task": "Retrieve the details of the task with the unique identifier \"TASK-12345\"."}, "score": 0.5921699404716492}, "sample_size": 2656, "position_index": 584, "selection_method": "position_index_584"}
{"pass_at_k": 12, "elapsed_time": 0.0, "task": {"category": "Meilisearch", "query": "Retrieve version details of the search engine"}, "is_correct": true, "target_server_name": "Meilisearch", "target_tool_name": "get-version", "target_server_description": "Meilisearch操作,包括:连接设置管理、索引创建与列表、文档检索与更新、搜索功能、索引设置管理、API密钥管理、任务管理、健康检查、版本与统计信息获取", "target_tool_description": "Get Meilisearch version information", "match_result": {"server": "Meilisearch", "tool": {"name": "get-version", "server": "Meilisearch", "description": "Get Meilisearch version information", "parameter": {}, "task": "Retrieve the current version details of the Meilisearch instance."}, "score": 0.5728321075439453}, "sample_size": 2656, "position_index": 590, "selection_method": "position_index_590"}
{"pass_at_k": 1, "elapsed_time": 0.0, "task": {"category": "Milvus", "query": "Create a new collection with specified schema"}, "is_correct": true, "target_server_name": "Milvus", "target_tool_name": "milvus_create_collection", "target_server_description": "Milvus数据库操作,包括:全文搜索、向量相似性搜索、集合查询、集合管理(创建/加载/释放)、数据插入与删除", "target_tool_description": "Create a new collection with specified schema", "match_result": {"server": "Milvus", "tool": {"name": "milvus_create_collection", "server": "Milvus", "description": "Create a new collection with specified schema", "parameter": {"collection_name": "(string) Name for the new collection", "collection_schema": "(dict) Collection schema definition", "index_params": "(Optional, dict) Optional index parameters"}, "task": "Create a new collection named \"user_profiles\" with a schema defining fields for user ID, name, and embedding vector, and set the index parameters to use the IVF_FLAT algorithm with 128 clusters."}, "score": 1.0000003576278687}, "sample_size": 2656, "position_index": 597, "selection_method": "position_index_597"}
{"pass_at_k": 11, "elapsed_time": 0.0, "task": {"category": "Momento", "query": "List all caches in the account"}, "is_correct": true, "target_server_name": "Momento", "target_tool_name": "list-caches", "target_server_description": "Momento缓存服务操作，包括：获取缓存值、设置缓存值（带TTL）、列出所有缓存、创建新缓存、删除缓存", "target_tool_description": "Lists the names of all the caches in your Momento account.", "match_result": {"server": "Momento", "tool": {"name": "list-caches", "server": "Momento", "description": "Lists the names of all the caches in your Momento account.", "parameter": {}, "task": "List all the available cache names in your Momento account."}, "score": 0.6384642720222473}, "sample_size": 2656, "position_index": 604, "selection_method": "position_index_604"}
{"pass_at_k": 1, "elapsed_time": 0.0, "task": {"category": "MongoDB", "query": "List MongoDB Atlas clusters"}, "is_correct": true, "target_server_name": "MongoDB", "target_tool_name": "atlas-list-clusters", "target_server_description": "MongoDB Atlas管理工具集，包括：组织与项目管理、集群创建与连接、访问控制配置、数据库用户管理、数据库操作（查询、聚合、插入、更新、删除）、集合与索引管理、数据库统计信息获取", "target_tool_description": "Lists MongoDB Atlas clusters", "match_result": {"server": "MongoDB", "tool": {"name": "atlas-list-clusters", "server": "MongoDB", "description": "Lists MongoDB Atlas clusters", "parameter": {}, "task": "List all MongoDB Atlas clusters currently available in the connected account."}, "score": 0.9852138161659241}, "sample_size": 2656, "position_index": 610, "selection_method": "position_index_610"}
{"pass_at_k": 11, "elapsed_time": 0.0, "task": {"category": "MongoDB", "query": "List database users in MongoDB Atlas"}, "is_correct": true, "target_server_name": "MongoDB", "target_tool_name": "atlas-create-db-user", "target_server_description": "MongoDB Atlas管理工具集，包括：组织与项目管理、集群创建与连接、访问控制配置、数据库用户管理、数据库操作（查询、聚合、插入、更新、删除）、集合与索引管理、数据库统计信息获取", "target_tool_description": "List MongoDB Atlas database users", "match_result": {"server": "MongoDB", "tool": {"name": "atlas-create-db-user", "server": "MongoDB", "description": "List MongoDB Atlas database users", "parameter": {}, "task": "List all database users in the MongoDB Atlas cluster."}, "score": 0.6370425224304199}, "sample_size": 2656, "position_index": 617, "selection_method": "position_index_617"}
{"pass_at_k": 1, "elapsed_time": 0.0, "task": {"category": "MongoDB", "query": "Insert multiple documents into a collection"}, "is_correct": true, "target_server_name": "MongoDB", "target_tool_name": "insert-many", "target_server_description": "MongoDB Atlas管理工具集，包括：组织与项目管理、集群创建与连接、访问控制配置、数据库用户管理、数据库操作（查询、聚合、插入、更新、删除）、集合与索引管理、数据库统计信息获取", "target_tool_description": "Insert multiple documents into a MongoDB collection", "match_result": {"server": "MongoDB", "tool": {"name": "insert-many", "server": "MongoDB", "description": "Insert multiple documents into a MongoDB collection", "parameter": {}, "task": "Insert 50 customer records into the specified MongoDB collection."}, "score": 0.9585765600204468}, "sample_size": 2656, "position_index": 623, "selection_method": "position_index_623"}
{"pass_at_k": 4, "elapsed_time": 0.0, "task": {"category": "MongoDB", "query": "Remove a collection from database"}, "is_correct": true, "target_server_name": "MongoDB", "target_tool_name": "drop-collection", "target_server_description": "MongoDB Atlas管理工具集，包括：组织与项目管理、集群创建与连接、访问控制配置、数据库用户管理、数据库操作（查询、聚合、插入、更新、删除）、集合与索引管理、数据库统计信息获取", "target_tool_description": "Remove a collection from a MongoDB database", "match_result": {"server": "MongoDB", "tool": {"name": "drop-collection", "server": "MongoDB", "description": "Remove a collection from a MongoDB database", "parameter": {}, "task": "Remove the 'customer_data' collection from the connected MongoDB database."}, "score": 0.8465969562530518}, "sample_size": 2656, "position_index": 630, "selection_method": "position_index_630"}
{"pass_at_k": 28, "elapsed_time": 0.0, "task": {"category": "MongoDB", "query": "Retrieve database statistics"}, "is_correct": true, "target_server_name": "MongoDB", "target_tool_name": "db-stats", "target_server_description": "MongoDB Atlas管理工具集，包括：组织与项目管理、集群创建与连接、访问控制配置、数据库用户管理、数据库操作（查询、聚合、插入、更新、删除）、集合与索引管理、数据库统计信息获取", "target_tool_description": "Return statistics about a MongoDB database", "match_result": {"server": "MongoDB", "tool": {"name": "db-stats", "server": "MongoDB", "description": "Return statistics about a MongoDB database", "parameter": {}, "task": "Return the statistics for the connected MongoDB database, including details like collection counts, storage size, and index usage."}, "score": 0.647636353969574}, "sample_size": 2656, "position_index": 637, "selection_method": "position_index_637"}
{"pass_at_k": -1, "elapsed_time": 0.0, "task": {"category": "Neon", "query": "Fetch detailed information about a project"}, "is_correct": false, "target_server_name": "Neon", "target_tool_name": "describe_project", "target_server_description": "Neon数据库项目管理与操作,包括:项目列表检索、项目详情获取、项目创建与删除、分支创建与删除、分支详情获取、数据库连接字符串获取、SQL查询执行、SQL事务执行、数据库表列表获取、表结构详情获取、数据库迁移准备与完成、Neon Auth认证配置", "target_tool_description": "Fetches detailed information about a specific Neon project, including its ID, name, and associated branches and databases.", "match_result": {"server": "Lightdash", "tool": {"name": "get_project", "server": "Lightdash", "description": "Get details of a specific project", "parameter": {}, "task": "Retrieve the details of the currently active project."}, "score": 0.9776792526245117}, "sample_size": 2656, "position_index": 643, "selection_method": "position_index_643"}
{"pass_at_k": -1, "elapsed_time": 0.0, "task": {"category": "Neon", "query": "Execute SQL queries on a database"}, "is_correct": false, "target_server_name": "Neon", "target_tool_name": "run_sql", "target_server_description": "Neon数据库项目管理与操作,包括:项目列表检索、项目详情获取、项目创建与删除、分支创建与删除、分支详情获取、数据库连接字符串获取、SQL查询执行、SQL事务执行、数据库表列表获取、表结构详情获取、数据库迁移准备与完成、Neon Auth认证配置", "target_tool_description": "Executes a single SQL query against a specified Neon database. Supports both read and write operations.", "match_result": {"server": "PostgreSQL", "tool": {"name": "query", "server": "PostgreSQL", "description": "Execute read-only SQL queries against the connected database", "parameter": {"sql": "(string): The SQL query to execute"}, "task": "Retrieve the names and email addresses of all customers who made a purchase in the last 30 days from the connected database."}, "score": 0.9156142473220825}, "sample_size": 2656, "position_index": 650, "selection_method": "position_index_650"}
{"pass_at_k": 1, "elapsed_time": 0.0, "task": {"category": "SEC Filings", "query": "Extract specified information from SEC filings"}, "is_correct": true, "target_server_name": "Octagon", "target_tool_name": "octagon-sec-agent", "target_server_description": "1. Extract information from SEC filings 2. Analyze earnings call transcripts 3. Retrieve financial metrics and ratios 4. Access stock market data 5. Research private company information 6. Research startup funding rounds and venture capital 7. Research M&A and IPO transactions 8. Look up information on investors 9. Analyze private debts, borrowers, and lenders 10. Extract data from any public website 11. Perform comprehensive research on any topic", "target_tool_description": "Extract information from SEC filings.", "match_result": {"server": "Octagon", "tool": {"name": "octagon-sec-agent", "server": "Octagon", "description": "Extract information from SEC filings.", "parameter": {"prompt": "(string) A natural language query specifying the information to extract from SEC filings."}, "task": "Extract the executive compensation details for the CEO from the latest annual report (10-K) filed by a publicly traded company."}, "score": 0.7339842915534973}, "sample_size": 2656, "position_index": 657, "selection_method": "position_index_657"}
{"pass_at_k": 1, "elapsed_time": 0.0, "task": {"category": "Octagon", "query": "Research mergers, acquisitions, and IPO transactions"}, "is_correct": true, "target_server_name": "Octagon", "target_tool_name": "octagon-deals-agent", "target_server_description": "1. Extract information from SEC filings 2. Analyze earnings call transcripts 3. Retrieve financial metrics and ratios 4. Access stock market data 5. Research private company information 6. Research startup funding rounds and venture capital 7. Research M&A and IPO transactions 8. Look up information on investors 9. Analyze private debts, borrowers, and lenders 10. Extract data from any public website 11. Perform comprehensive research on any topic", "target_tool_description": "Research M&A and IPO transactions.", "match_result": {"server": "Octagon", "tool": {"name": "octagon-deals-agent", "server": "Octagon", "description": "Research M&A and IPO transactions.", "parameter": {"prompt": "(string) A natural language query specifying the M&A or IPO transaction information to research."}, "task": "Research the latest M&A transactions in the technology sector involving companies valued over $1 billion."}, "score": 0.6848746538162231}, "sample_size": 2656, "position_index": 663, "selection_method": "position_index_663"}
{"pass_at_k": -1, "elapsed_time": 0.0, "task": {"category": "Perplexity", "query": "Engage in live web searches through conversation"}, "is_correct": false, "target_server_name": "Perplexity", "target_tool_name": "perplexity_ask", "target_server_description": "Engage in live web searches using the Sonar API", "target_tool_description": "Engage in a conversation with the Sonar API for live web searches.", "match_result": {"server": "Hyperbrowser", "tool": {"name": "search_with_bing", "server": "Hyperbrowser", "description": "Query the web and get results with Bing search", "parameter": {}, "task": "Search for the latest news articles about renewable energy advancements."}, "score": 0.4654768109321594}, "sample_size": 2656, "position_index": 670, "selection_method": "position_index_670"}
{"pass_at_k": -1, "elapsed_time": 0.0, "task": {"category": "Pinecone", "query": "Search for records in an index with text query and metadata filtering"}, "is_correct": false, "target_server_name": "Pinecone", "target_tool_name": "search-records", "target_server_description": "Pinecone vector database operations, including: document search, index listing/description/statistics, index creation with integrated inference, record upsert/search, cascading search across indexes, and document reranking", "target_tool_description": "Searches for records in an index based on a text query, using integrated inference for embedding. Has options for metadata filtering and reranking.", "match_result": {"server": "Chroma", "tool": {"name": "chroma_query_documents", "server": "Chroma", "description": "Query documents using semantic search with advanced filtering", "parameter": {}, "task": "Retrieve semantically similar documents from the collection based on the provided query text."}, "score": 0.768923819065094}, "sample_size": 2656, "position_index": 677, "selection_method": "position_index_677"}
{"pass_at_k": 2, "elapsed_time": 0.0, "task": {"category": "Redis", "query": "Manage set members and perform set operations"}, "is_correct": true, "target_server_name": "Redis", "target_tool_name": "set", "target_server_description": "Redis database operations including: string operations with expiration, hash field-value pair storage, list operations for queues, set operations for unique values, sorted set operations for leaderboards, pub/sub for real-time messaging, stream operations for event sourcing, JSON document manipulation, vector search query engine, and server information retrieval", "target_tool_description": "Tools to add, remove and list set members. Useful for tracking unique values like user IDs or tags, and for performing set operations like intersection.", "match_result": {"server": "Redis", "tool": {"name": "set", "server": "Redis", "description": "Tools to add, remove and list set members. Useful for tracking unique values like user IDs or tags, and for performing set operations like intersection.", "parameter": {}, "task": "Add the user IDs \"user123\", \"user456\", and \"user789\" to a set for tracking unique members."}, "score": 0.6879091858863831}, "sample_size": 2656, "position_index": 683, "selection_method": "position_index_683"}
{"pass_at_k": 99, "elapsed_time": 0.0, "task": {"category": "Redis", "query": "Retrieve current account details"}, "is_correct": true, "target_server_name": "Redis Cloud API", "target_tool_name": "get_current_account", "target_server_description": "Redis Cloud account management, including: account details retrieval, payment methods listing, Pro/Essential subscriptions creation/listing/deletion, database modules listing, regions and plans retrieval, task management", "target_tool_description": "Get details about your current Redis Cloud account", "match_result": {"server": "Redis Cloud API", "tool": {"name": "get_current_account", "server": "Redis Cloud API", "description": "Get details about your current Redis Cloud account", "parameter": {}, "task": "Retrieve the details of the currently active Redis Cloud account."}, "score": 0.5475758910179138}, "sample_size": 2656, "position_index": 690, "selection_method": "position_index_690"}
{"pass_at_k": 1, "elapsed_time": 0.0, "task": {"category": "Redis", "query": "Create a new Essential subscription"}, "is_correct": true, "target_server_name": "Redis Cloud API", "target_tool_name": "create_essential_subscription", "target_server_description": "Redis Cloud account management, including: account details retrieval, payment methods listing, Pro/Essential subscriptions creation/listing/deletion, database modules listing, regions and plans retrieval, task management", "target_tool_description": "Create a new Essential subscription", "match_result": {"server": "Redis Cloud API", "tool": {"name": "create_essential_subscription", "server": "Redis Cloud API", "description": "Create a new Essential subscription", "parameter": {}, "task": "Create a new Essential subscription for the user account."}, "score": 1.0000001192092896}, "sample_size": 2656, "position_index": 696, "selection_method": "position_index_696"}
{"pass_at_k": 1, "elapsed_time": 0.0, "task": {"category": "Qdrant", "query": "Store data in a vector database"}, "is_correct": true, "target_server_name": "Qdrant", "target_tool_name": "qdrant-store", "target_server_description": "1. Store information in Qdrant database 2. Retrieve information from Qdrant database", "target_tool_description": "Store some information in the Qdrant database", "match_result": {"server": "Qdrant", "tool": {"name": "qdrant-store", "server": "Qdrant", "description": "Store some information in the Qdrant database", "parameter": {"information": "(string) Information to store", "metadata": "(Optional, JSON) Optional metadata to store", "collection_name": "(string) Name of the collection to store the information in. Required if there is no default collection name."}, "task": "Store the text \"Latest research findings on renewable energy\" in the Qdrant database collection named \"scientific_research\" along with metadata including the author's name and publication date."}, "score": 0.8763430118560791}, "sample_size": 2656, "position_index": 703, "selection_method": "position_index_703"}
{"pass_at_k": 49, "elapsed_time": 0.0, "task": {"category": "Ramp", "query": "Load transactions data"}, "is_correct": true, "target_server_name": "Ramp", "target_tool_name": "load_transactions", "target_server_description": "1.数据处理与分析 2.临时数据库查询与表清理 3.财务数据加载（交易、报销、账单等） 4.组织数据加载（部门、用户、供应商等）", "target_tool_description": "Loads transactions data.", "match_result": {"server": "Ramp", "tool": {"name": "load_transactions", "server": "Ramp", "description": "Loads transactions data.", "parameter": {}, "task": "Load the latest transactions data from the connected database."}, "score": 0.6011714935302734}, "sample_size": 2656, "position_index": 710, "selection_method": "position_index_710"}
{"pass_at_k": 1, "elapsed_time": 0.0, "task": {"category": "Ramp", "query": "Load vendors data"}, "is_correct": true, "target_server_name": "Ramp", "target_tool_name": "load_vendors", "target_server_description": "1.数据处理与分析 2.临时数据库查询与表清理 3.财务数据加载（交易、报销、账单等） 4.组织数据加载（部门、用户、供应商等）", "target_tool_description": "Loads vendors data.", "match_result": {"server": "Ramp", "tool": {"name": "load_vendors", "server": "Ramp", "description": "Loads vendors data.", "parameter": {}, "task": "Load the latest available vendors data from the connected database."}, "score": 0.6703374981880188}, "sample_size": 2656, "position_index": 716, "selection_method": "position_index_716"}
{"pass_at_k": 8, "elapsed_time": 0.0, "task": {"category": "Raygun", "query": "Retrieve application details"}, "is_correct": true, "target_server_name": "Raygun", "target_tool_name": "get_application", "target_server_description": "Application monitoring and management, including: application listing and details retrieval, API key regeneration, error group management, deployment operations, customer and session tracking, performance metrics analysis, source map handling, and team invitation management", "target_tool_description": "Get application details by identifier", "match_result": {"server": "Raygun", "tool": {"name": "get_application", "server": "Raygun", "description": "Get application details by identifier", "parameter": {}, "task": "Retrieve the details of the application with the identifier \"APP12345\"."}, "score": 0.7110575437545776}, "sample_size": 2656, "position_index": 723, "selection_method": "position_index_723"}
{"pass_at_k": 2, "elapsed_time": 0.0, "task": {"category": "Raygun", "query": "Ignore error groups"}, "is_correct": true, "target_server_name": "Raygun", "target_tool_name": "ignore_error_group", "target_server_description": "Application monitoring and management, including: application listing and details retrieval, API key regeneration, error group management, deployment operations, customer and session tracking, performance metrics analysis, source map handling, and team invitation management", "target_tool_description": "Set error group status to ignored", "match_result": {"server": "Raygun", "tool": {"name": "ignore_error_group", "server": "Raygun", "description": "Set error group status to ignored", "parameter": {}, "task": "Ignore all error groups in the system to prevent further alerts."}, "score": 0.7710307836532593}, "sample_size": 2656, "position_index": 730, "selection_method": "position_index_730"}
{"pass_at_k": 1, "elapsed_time": 0.0, "task": {"category": "Raygun", "query": "Reprocess deployment commit data"}, "is_correct": true, "target_server_name": "Raygun", "target_tool_name": "reprocess_deployment_commits", "target_server_description": "Application monitoring and management, including: application listing and details retrieval, API key regeneration, error group management, deployment operations, customer and session tracking, performance metrics analysis, source map handling, and team invitation management", "target_tool_description": "Reprocess deployment commit data", "match_result": {"server": "Raygun", "tool": {"name": "reprocess_deployment_commits", "server": "Raygun", "description": "Reprocess deployment commit data", "parameter": {}, "task": "Reprocess the latest deployment commit data to ensure accuracy and completeness."}, "score": 1.0}, "sample_size": 2656, "position_index": 736, "selection_method": "position_index_736"}
{"pass_at_k": 1, "elapsed_time": 0.0, "task": {"category": "Raygun", "query": "Retrieve error metrics over time"}, "is_correct": true, "target_server_name": "Raygun", "target_tool_name": "get_error_metrics_time_series", "target_server_description": "Application monitoring and management, including: application listing and details retrieval, API key regeneration, error group management, deployment operations, customer and session tracking, performance metrics analysis, source map handling, and team invitation management", "target_tool_description": "Get time-series error metrics", "match_result": {"server": "Raygun", "tool": {"name": "get_error_metrics_time_series", "server": "Raygun", "description": "Get time-series error metrics", "parameter": {}, "task": "Retrieve the time-series error metrics for the past 24 hours."}, "score": 0.7154203057289124}, "sample_size": 2656, "position_index": 743, "selection_method": "position_index_743"}
{"pass_at_k": 1, "elapsed_time": 0.0, "task": {"category": "Raygun", "query": "List pending team invitations"}, "is_correct": true, "target_server_name": "Raygun", "target_tool_name": "list_invitations", "target_server_description": "Application monitoring and management, including: application listing and details retrieval, API key regeneration, error group management, deployment operations, customer and session tracking, performance metrics analysis, source map handling, and team invitation management", "target_tool_description": "List pending team invitations", "match_result": {"server": "Raygun", "tool": {"name": "list_invitations", "server": "Raygun", "description": "List pending team invitations", "parameter": {}, "task": "List all pending team invitations that have not been accepted or declined yet."}, "score": 1.0000001192092896}, "sample_size": 2656, "position_index": 750, "selection_method": "position_index_750"}
{"pass_at_k": -1, "elapsed_time": 0.0, "task": {"category": "Riza", "query": "Retrieve saved tools for editing"}, "is_correct": false, "target_server_name": "Riza", "target_tool_name": "fetch_tool", "target_server_description": "1. Create new tools using Riza Tools API 2. Fetch and edit saved Riza tools 3. Execute saved tools securely on Riza's code interpreter API 4. List all available saved tools 5. Execute arbitrary code safely on Riza's code interpreter API", "target_tool_description": "Fetches saved Riza tools, including their source code, for editing purposes.", "match_result": {"server": "Contentful-mcp", "tool": {"name": "get_entry", "server": "Contentful-mcp", "description": "Retrieve existing entries", "parameter": {}, "task": "Retrieve the latest 5 entries from the database."}, "score": 0.6636273860931396}, "sample_size": 2656, "position_index": 756, "selection_method": "position_index_756"}
{"pass_at_k": 21, "elapsed_time": 0.0, "task": {"category": "Semgrep", "query": "Scan code files for security vulnerabilities"}, "is_correct": true, "target_server_name": "Semgrep", "target_tool_name": "semgrep_scan", "target_server_description": "1.扫描代码安全漏洞 2.使用自定义Semgrep规则扫描代码文件 3.输出代码的抽象语法树(AST) 4.获取Semgrep支持的语言列表 5.获取最新的Semgrep规则JSON Schema", "target_tool_description": "Scan code files for security vulnerabilities with a given config string", "match_result": {"server": "Semgrep", "tool": {"name": "semgrep_scan", "server": "Semgrep", "description": "Scan code files for security vulnerabilities with a given config string", "parameter": {"code_files": "(list of objects) List of code files to scan, each with 'filename' and 'content' keys"}, "task": "Scan the provided Python and JavaScript files for security vulnerabilities using a custom configuration."}, "score": 0.5252527594566345}, "sample_size": 2656, "position_index": 763, "selection_method": "position_index_763"}
{"pass_at_k": 1, "elapsed_time": 0.0, "task": {"category": "SingleStore", "query": "Retrieve workspace details in a workspace group"}, "is_correct": true, "target_server_name": "SingleStore", "target_tool_name": "workspaces_info", "target_server_description": "1. Retrieve workspace groups, workspaces, and organization details 2. List regions supporting workspaces 3. Execute SQL operations on workspaces 4. List and create starter workspaces 5. List notebook samples and create notebooks 6. List personal files 7. Create and manage scheduled jobs for notebooks", "target_tool_description": "Retrieve details about the workspaces in a specific workspace group", "match_result": {"server": "SingleStore", "tool": {"name": "workspaces_info", "server": "SingleStore", "description": "Retrieve details about the workspaces in a specific workspace group", "parameter": {"workspaceGroupID": "(string) ID of the workspace group"}, "task": "Retrieve the details of all workspaces within the workspace group identified by the ID \"WG-2024-001\"."}, "score": 0.9524972438812256}, "sample_size": 2656, "position_index": 769, "selection_method": "position_index_769"}
{"pass_at_k": 3, "elapsed_time": 0.0, "task": {"category": "SingleStore", "query": "List available notebook samples"}, "is_correct": true, "target_server_name": "SingleStore", "target_tool_name": "list_notebook_samples", "target_server_description": "1. Retrieve workspace groups, workspaces, and organization details 2. List regions supporting workspaces 3. Execute SQL operations on workspaces 4. List and create starter workspaces 5. List notebook samples and create notebooks 6. List personal files 7. Create and manage scheduled jobs for notebooks", "target_tool_description": "List all notebook samples available in SingleStore Spaces", "match_result": {"server": "SingleStore", "tool": {"name": "list_notebook_samples", "server": "SingleStore", "description": "List all notebook samples available in SingleStore Spaces", "parameter": {}, "task": "List all available notebook samples in the connected SingleStore Spaces environment."}, "score": 0.6056022047996521}, "sample_size": 2656, "position_index": 776, "selection_method": "position_index_776"}
{"pass_at_k": -1, "elapsed_time": 0.0, "task": {"category": "StarRocks", "query": "Execute SQL commands without returning a ResultSet"}, "is_correct": false, "target_server_name": "StarRocks", "target_tool_name": "write_query", "target_server_description": "StarRocks数据库操作,包括:执行SELECT/DDL/DML查询、生成Plotly图表、获取表和数据库概览信息", "target_tool_description": "Execute a DDL (CREATE, ALTER, DROP), DML (INSERT, UPDATE, DELETE), or other StarRocks command that does not return a ResultSet.", "match_result": {"server": "Apache IoTDB", "tool": {"name": "select_query", "server": "Apache IoTDB", "description": "Execute SELECT queries to read data from the database", "parameter": {"query_sql": "(string) The SELECT SQL query to execute"}, "task": "Retrieve the names and email addresses of all customers who made a purchase in the last 30 days using a SELECT query."}, "score": 0.6683894395828247}, "sample_size": 2656, "position_index": 783, "selection_method": "position_index_783"}
{"pass_at_k": 1, "elapsed_time": 0.0, "task": {"category": "Stripe", "query": "Create a new discount coupon"}, "is_correct": true, "target_server_name": "Stripe", "target_tool_name": "createCoupon", "target_server_description": "Stripe支付服务操作,包括:客户管理、优惠券管理、产品与价格管理、支付链接创建、发票管理、余额查询、订阅管理、退款处理、争议处理", "target_tool_description": "Creates a new coupon in Stripe.", "match_result": {"server": "Stripe", "tool": {"name": "createCoupon", "server": "Stripe", "description": "Creates a new coupon in Stripe.", "parameter": {"percent_off": "(number) The percentage discount.", "duration": "(string) The duration of the coupon (e.g., 'once', 'repeating').", "duration_in_months": "(Optional, number) The number of months the coupon lasts if the duration is 'repeating'."}, "task": "Create a new coupon offering a 15% discount that is valid for 3 months with a repeating duration."}, "score": 0.7121772766113281}, "sample_size": 2656, "position_index": 789, "selection_method": "position_index_789"}
{"pass_at_k": -1, "elapsed_time": 0.0, "task": {"category": "Stripe", "query": "Create a new invoice for a customer"}, "is_correct": false, "target_server_name": "Stripe", "target_tool_name": "createInvoice", "target_server_description": "Stripe支付服务操作,包括:客户管理、优惠券管理、产品与价格管理、支付链接创建、发票管理、余额查询、订阅管理、退款处理、争议处理", "target_tool_description": "Creates a new invoice in Stripe.", "match_result": {"server": "Shopify", "tool": {"name": "get-customer-orders", "server": "Shopify", "description": "Get orders for a specific customer", "parameter": {"customerId": "(string, required) Shopify customer ID (numeric ID only, like \"6276879810626\")", "limit": "(optional number, default: 10) Maximum number of orders to return"}, "task": "Retrieve the latest 5 orders for the Shopify customer with ID \"6276879810626\"."}, "score": 0.8095080256462097}, "sample_size": 2656, "position_index": 796, "selection_method": "position_index_796"}
{"pass_at_k": 4, "elapsed_time": 0.0, "task": {"category": "Stripe", "query": "Create a refund for a charge"}, "is_correct": true, "target_server_name": "Stripe", "target_tool_name": "createRefund", "target_server_description": "Stripe支付服务操作,包括:客户管理、优惠券管理、产品与价格管理、支付链接创建、发票管理、余额查询、订阅管理、退款处理、争议处理", "target_tool_description": "Creates a new refund in Stripe.", "match_result": {"server": "Stripe", "tool": {"name": "createRefund", "server": "Stripe", "description": "Creates a new refund in Stripe.", "parameter": {"charge": "(string) The ID of the charge to refund.", "amount": "(Optional, number) The amount to refund in cents."}, "task": "Create a refund for the charge with ID \"ch_123456789\" for the full amount."}, "score": 0.58564692735672}, "sample_size": 2656, "position_index": 803, "selection_method": "position_index_803"}
{"pass_at_k": -1, "elapsed_time": 0.0, "task": {"category": "Tinybird", "query": "List all available data sources"}, "is_correct": false, "target_server_name": "Tinybird", "target_tool_name": "list-data-sources", "target_server_description": "Tinybird Workspace operations, including: listing data sources and pipes, getting data source and pipe information, requesting pipe data, running select queries, adding business insights, accessing Tinybird documentation, saving events, analyzing pipe performance, and pushing datafiles", "target_tool_description": "Lists all Data Sources in the Tinybird Workspace", "match_result": {"server": "Grafana", "tool": {"name": "list_datasources", "server": "Grafana", "description": "List datasources", "parameter": {}, "task": "List all available datasources in the current system."}, "score": 0.9438711404800415}, "sample_size": 2656, "position_index": 809, "selection_method": "position_index_809"}
{"pass_at_k": 1, "elapsed_time": 0.0, "task": {"category": "Tinybird", "query": "Get product documentation and API reference"}, "is_correct": true, "target_server_name": "Tinybird", "target_tool_name": "llms-tinybird-docs", "target_server_description": "Tinybird Workspace operations, including: listing data sources and pipes, getting data source and pipe information, requesting pipe data, running select queries, adding business insights, accessing Tinybird documentation, saving events, analyzing pipe performance, and pushing datafiles", "target_tool_description": "Contains the whole Tinybird product documentation, so you can use it to get context about what Tinybird is, what it does, API reference and more", "match_result": {"server": "Tinybird", "tool": {"name": "llms-tinybird-docs", "server": "Tinybird", "description": "Contains the whole Tinybird product documentation, so you can use it to get context about what Tinybird is, what it does, API reference and more", "parameter": {}, "task": "Search the Tinybird product documentation for information about its API reference and core functionalities."}, "score": 0.7033306360244751}, "sample_size": 2656, "position_index": 816, "selection_method": "position_index_816"}
{"pass_at_k": 5, "elapsed_time": 0.0, "task": {"category": "Unstructured", "query": "Update an existing source connector"}, "is_correct": true, "target_server_name": "Unstructured", "target_tool_name": "update_source_connector", "target_server_description": "Unstructured API operations, including: 1. Source connector management (list, create, update, delete) 2. Destination connector management (list, create, update, delete) 3. Workflow management (list, create, run, update, delete) 4. Job management (list, get info, cancel) 5. Firecrawl integration (crawl HTML, check status, generate LLM-optimized text, cancel jobs)", "target_tool_description": "Update an existing source connector by params.", "match_result": {"server": "Unstructured", "tool": {"name": "update_source_connector", "server": "Unstructured", "description": "Update an existing source connector by params.", "parameter": {}, "task": "Update the configuration parameters of an existing source connector to reflect the latest changes in the data source settings. Ensure all required fields are properly modified and validated."}, "score": 0.6298707723617554}, "sample_size": 2656, "position_index": 823, "selection_method": "position_index_823"}
{"pass_at_k": 5, "elapsed_time": 0.0, "task": {"category": "Unstructured", "query": "Remove a destination connector"}, "is_correct": true, "target_server_name": "Unstructured", "target_tool_name": "delete_destination_connector", "target_server_description": "Unstructured API operations, including: 1. Source connector management (list, create, update, delete) 2. Destination connector management (list, create, update, delete) 3. Workflow management (list, create, run, update, delete) 4. Job management (list, get info, cancel) 5. Firecrawl integration (crawl HTML, check status, generate LLM-optimized text, cancel jobs)", "target_tool_description": "Delete a destination connector by destination id.", "match_result": {"server": "Unstructured", "tool": {"name": "delete_destination_connector", "server": "Unstructured", "description": "Delete a destination connector by destination id.", "parameter": {}, "task": "Delete the destination connector associated with the specified destination ID."}, "score": 0.6233310699462891}, "sample_size": 2656, "position_index": 829, "selection_method": "position_index_829"}
{"pass_at_k": 47, "elapsed_time": 0.0, "task": {"category": "Unstructured", "query": "List jobs for a workflow"}, "is_correct": true, "target_server_name": "Unstructured", "target_tool_name": "list_jobs", "target_server_description": "Unstructured API operations, including: 1. Source connector management (list, create, update, delete) 2. Destination connector management (list, create, update, delete) 3. Workflow management (list, create, run, update, delete) 4. Job management (list, get info, cancel) 5. Firecrawl integration (crawl HTML, check status, generate LLM-optimized text, cancel jobs)", "target_tool_description": "Lists jobs for a specific workflow from the Unstructured API.", "match_result": {"server": "Unstructured", "tool": {"name": "list_jobs", "server": "Unstructured", "description": "Lists jobs for a specific workflow from the Unstructured API.", "parameter": {}, "task": "List all jobs associated with the latest workflow processed by the Unstructured API."}, "score": 0.5837346315383911}, "sample_size": 2656, "position_index": 836, "selection_method": "position_index_836"}
{"pass_at_k": 7, "elapsed_time": 0.0, "task": {"category": "Unstructured", "query": "Generate LLM-optimized text from web pages"}, "is_correct": true, "target_server_name": "Unstructured", "target_tool_name": "invoke_firecrawl_llmtxt", "target_server_description": "Unstructured API operations, including: 1. Source connector management (list, create, update, delete) 2. Destination connector management (list, create, update, delete) 3. Workflow management (list, create, run, update, delete) 4. Job management (list, get info, cancel) 5. Firecrawl integration (crawl HTML, check status, generate LLM-optimized text, cancel jobs)", "target_tool_description": "Generates LLM-optimized text from crawled pages.", "match_result": {"server": "Unstructured", "tool": {"name": "invoke_firecrawl_llmtxt", "server": "Unstructured", "description": "Generates LLM-optimized text from crawled pages.", "parameter": {}, "task": "Generate LLM-optimized text from the latest crawled web pages."}, "score": 0.6815928816795349}, "sample_size": 2656, "position_index": 842, "selection_method": "position_index_842"}
{"pass_at_k": 1, "elapsed_time": 0.0, "task": {"category": "Verodat", "query": "Retrieve available accounts"}, "is_correct": true, "target_server_name": "Verodat", "target_tool_name": "get-accounts", "target_server_description": "1. Retrieve available accounts 2. List workspaces within an account 3. List datasets in a workspace 4. Retrieve actual data from a dataset 5. Retrieve field definitions for a dataset 6. Retrieve existing AI queries 7. Get workspace context and data structure 8. Execute AI-powered queries on datasets 9. Create a new dataset with defined schema 10. Upload data rows to existing datasets", "target_tool_description": "Retrieve available accounts", "match_result": {"server": "Verodat", "tool": {"name": "get-accounts", "server": "Verodat", "description": "Retrieve available accounts", "parameter": {}, "task": "Retrieve the list of all available accounts in the system."}, "score": 1.0000004768371582}, "sample_size": 2656, "position_index": 849, "selection_method": "position_index_849"}
{"pass_at_k": 12, "elapsed_time": 0.0, "task": {"category": "Verodat", "query": "Perform AI-powered data analysis"}, "is_correct": true, "target_server_name": "Verodat", "target_tool_name": "execute-ai-query", "target_server_description": "1. Retrieve available accounts 2. List workspaces within an account 3. List datasets in a workspace 4. Retrieve actual data from a dataset 5. Retrieve field definitions for a dataset 6. Retrieve existing AI queries 7. Get workspace context and data structure 8. Execute AI-powered queries on datasets 9. Create a new dataset with defined schema 10. Upload data rows to existing datasets", "target_tool_description": "Execute AI-powered queries on datasets", "match_result": {"server": "Verodat", "tool": {"name": "execute-ai-query", "server": "Verodat", "description": "Execute AI-powered queries on datasets", "parameter": {}, "task": "Run an AI-powered analysis on the provided dataset to identify key trends and insights."}, "score": 0.6221030354499817}, "sample_size": 2656, "position_index": 856, "selection_method": "position_index_856"}
{"pass_at_k": 1, "elapsed_time": 0.0, "task": {"category": "Xero", "query": "Retrieve a list of invoices"}, "is_correct": true, "target_server_name": "Xero", "target_tool_name": "list-invoices", "target_server_description": "Xero财务软件操作,包括:账户/联系人/发票/信用票据/报价单/税务信息/付款记录查询与创建,工资单员工管理,财务报告生成(利润损失/试算平衡/应收应付账龄),以及工资单时间表审批与修改", "target_tool_description": "Retrieve a list of invoices", "match_result": {"server": "Xero", "tool": {"name": "list-invoices", "server": "Xero", "description": "Retrieve a list of invoices", "parameter": {}, "task": "Retrieve the latest 50 invoices from the system."}, "score": 0.9999986886978149}, "sample_size": 2656, "position_index": 862, "selection_method": "position_index_862"}
{"pass_at_k": 2, "elapsed_time": 0.0, "task": {"category": "Xero", "query": "Retrieve financial reports"}, "is_correct": true, "target_server_name": "Xero", "target_tool_name": "list-trial-balance", "target_server_description": "Xero财务软件操作,包括:账户/联系人/发票/信用票据/报价单/税务信息/付款记录查询与创建,工资单员工管理,财务报告生成(利润损失/试算平衡/应收应付账龄),以及工资单时间表审批与修改", "target_tool_description": "Retrieve a trial balance report", "match_result": {"server": "Xero", "tool": {"name": "list-trial-balance", "server": "Xero", "description": "Retrieve a trial balance report", "parameter": {}, "task": "Generate a trial balance report for the current fiscal year."}, "score": 0.7229063510894775}, "sample_size": 2656, "position_index": 869, "selection_method": "position_index_869"}
{"pass_at_k": 1, "elapsed_time": 0.0, "task": {"category": "Xero", "query": "Retrieve aged payables for contacts"}, "is_correct": true, "target_server_name": "Xero", "target_tool_name": "list-aged-payables-by-contact", "target_server_description": "Xero财务软件操作,包括:账户/联系人/发票/信用票据/报价单/税务信息/付款记录查询与创建,工资单员工管理,财务报告生成(利润损失/试算平衡/应收应付账龄),以及工资单时间表审批与修改", "target_tool_description": "Retrieves aged payables for a contact", "match_result": {"server": "Xero", "tool": {"name": "list-aged-payables-by-contact", "server": "Xero", "description": "Retrieves aged payables for a contact", "parameter": {}, "task": "Retrieve the aged payables for the specified contact within the last 90 days."}, "score": 0.9302685856819153}, "sample_size": 2656, "position_index": 876, "selection_method": "position_index_876"}
{"pass_at_k": 1, "elapsed_time": 0.0, "task": {"category": "Xero", "query": "Create a new quote"}, "is_correct": true, "target_server_name": "Xero", "target_tool_name": "create-quote", "target_server_description": "Xero财务软件操作,包括:账户/联系人/发票/信用票据/报价单/税务信息/付款记录查询与创建,工资单员工管理,财务报告生成(利润损失/试算平衡/应收应付账龄),以及工资单时间表审批与修改", "target_tool_description": "Create a new quote", "match_result": {"server": "Xero", "tool": {"name": "create-quote", "server": "Xero", "description": "Create a new quote", "parameter": {}, "task": "Generate a motivational quote about perseverance and success."}, "score": 1.0000008344650269}, "sample_size": 2656, "position_index": 882, "selection_method": "position_index_882"}
{"pass_at_k": 1, "elapsed_time": 0.0, "task": {"category": "Xero", "query": "Revert an approved payroll timesheet"}, "is_correct": true, "target_server_name": "Xero", "target_tool_name": "revert-payroll-timesheet", "target_server_description": "Xero财务软件操作,包括:账户/联系人/发票/信用票据/报价单/税务信息/付款记录查询与创建,工资单员工管理,财务报告生成(利润损失/试算平衡/应收应付账龄),以及工资单时间表审批与修改", "target_tool_description": "Revert an approved Payroll Timesheet", "match_result": {"server": "Xero", "tool": {"name": "revert-payroll-timesheet", "server": "Xero", "description": "Revert an approved Payroll Timesheet", "parameter": {}, "task": "Revert the most recently approved payroll timesheet to its previous state for review."}, "score": 0.9841829538345337}, "sample_size": 2656, "position_index": 889, "selection_method": "position_index_889"}
{"pass_at_k": 3, "elapsed_time": 0.0, "task": {"category": "Airflow", "query": "List all DAGs"}, "is_correct": true, "target_server_name": "Airflow", "target_tool_name": "List DAGs", "target_server_description": "Apache Airflow DAG and task management, including DAG operations (list, create, update, delete), task operations (list, update, clear), variable and connection management, dataset operations, and server health monitoring", "target_tool_description": "Lists all DAGs.", "match_result": {"server": "Airflow", "tool": {"name": "List DAGs", "server": "Airflow", "description": "Lists all DAGs.", "parameter": {}, "task": "List all available Directed Acyclic Graphs (DAGs) in the current environment."}, "score": 0.707274317741394}, "sample_size": 2656, "position_index": 896, "selection_method": "position_index_896"}
{"pass_at_k": 2, "elapsed_time": 0.0, "task": {"category": "Airflow", "query": "Retrieve source code for a DAG"}, "is_correct": true, "target_server_name": "Airflow", "target_tool_name": "Get DAG Source", "target_server_description": "Apache Airflow DAG and task management, including DAG operations (list, create, update, delete), task operations (list, update, clear), variable and connection management, dataset operations, and server health monitoring", "target_tool_description": "Gets the source code of a specific DAG.", "match_result": {"server": "Airflow", "tool": {"name": "Get DAG Source", "server": "Airflow", "description": "Gets the source code of a specific DAG.", "parameter": {"file_token": "(string) The token of the DAG source file."}, "task": "Retrieve the source code of the DAG associated with the provided file token."}, "score": 0.6428465247154236}, "sample_size": 2656, "position_index": 902, "selection_method": "position_index_902"}
{"pass_at_k": 5, "elapsed_time": 0.0, "task": {"category": "Airflow", "query": "Delete a specific DAG run"}, "is_correct": true, "target_server_name": "Airflow", "target_tool_name": "Delete DAG Run", "target_server_description": "Apache Airflow DAG and task management, including DAG operations (list, create, update, delete), task operations (list, update, clear), variable and connection management, dataset operations, and server health monitoring", "target_tool_description": "Deletes a specific DAG run.", "match_result": {"server": "Airflow", "tool": {"name": "Delete DAG Run", "server": "Airflow", "description": "Deletes a specific DAG run.", "parameter": {"dag_id": "(string) The ID of the DAG.", "dag_run_id": "(string) The ID of the DAG run."}, "task": "Delete the DAG run with ID 'example_run_123' from the DAG identified as 'sample_dag_456'."}, "score": 0.7758501768112183}, "sample_size": 2656, "position_index": 909, "selection_method": "position_index_909"}
{"pass_at_k": 46, "elapsed_time": 0.0, "task": {"category": "Airflow", "query": "Retrieve details of a specific task in a DAG"}, "is_correct": true, "target_server_name": "Airflow", "target_tool_name": "Get Task Details", "target_server_description": "Apache Airflow DAG and task management, including DAG operations (list, create, update, delete), task operations (list, update, clear), variable and connection management, dataset operations, and server health monitoring", "target_tool_description": "Gets details of a specific task.", "match_result": {"server": "Airflow", "tool": {"name": "Get Task Details", "server": "Airflow", "description": "Gets details of a specific task.", "parameter": {"dag_id": "(string) The ID of the DAG.", "task_id": "(string) The ID of the task."}, "task": "Retrieve the execution details for task 'process_data' within the DAG 'etl_pipeline'."}, "score": 0.5484619736671448}, "sample_size": 2656, "position_index": 915, "selection_method": "position_index_915"}
{"pass_at_k": 2, "elapsed_time": 0.0, "task": {"category": "Airflow", "query": "Create a new variable"}, "is_correct": true, "target_server_name": "Airflow", "target_tool_name": "Create Variable", "target_server_description": "Apache Airflow DAG and task management, including DAG operations (list, create, update, delete), task operations (list, update, clear), variable and connection management, dataset operations, and server health monitoring", "target_tool_description": "Creates a new variable.", "match_result": {"server": "Airflow", "tool": {"name": "Create Variable", "server": "Airflow", "description": "Creates a new variable.", "parameter": {}, "task": "Create a new variable to store the current date in the system."}, "score": 0.711187481880188}, "sample_size": 2656, "position_index": 922, "selection_method": "position_index_922"}
{"pass_at_k": -1, "elapsed_time": 0.0, "task": {"category": "Airflow", "query": "Update a connection in Airflow"}, "is_correct": false, "target_server_name": "Airflow", "target_tool_name": "Update Connection", "target_server_description": "Apache Airflow DAG and task management, including DAG operations (list, create, update, delete), task operations (list, update, clear), variable and connection management, dataset operations, and server health monitoring", "target_tool_description": "Updates a specific connection.", "match_result": {"server": "Airflow", "tool": {"name": "Create DAG Run", "server": "Airflow", "description": "Creates a new run for a specific DAG.", "parameter": {"dag_id": "(string) The ID of the DAG."}, "task": "Create a new run for the DAG with the ID \"sales_data_processing\"."}, "score": 0.5863854885101318}, "sample_size": 2656, "position_index": 929, "selection_method": "position_index_929"}
{"pass_at_k": 2, "elapsed_time": 0.0, "task": {"category": "Airflow", "query": "Update a specific pool in the system"}, "is_correct": true, "target_server_name": "Airflow", "target_tool_name": "Update Pool", "target_server_description": "Apache Airflow DAG and task management, including DAG operations (list, create, update, delete), task operations (list, update, clear), variable and connection management, dataset operations, and server health monitoring", "target_tool_description": "Updates a specific pool.", "match_result": {"server": "Airflow", "tool": {"name": "Update Pool", "server": "Airflow", "description": "Updates a specific pool.", "parameter": {"pool_name": "(string) The name of the pool."}, "task": "Update the pool named \"Summer_2024\" with the latest configurations."}, "score": 0.6375279426574707}, "sample_size": 2656, "position_index": 935, "selection_method": "position_index_935"}
{"pass_at_k": 1, "elapsed_time": 0.0, "task": {"category": "Airflow", "query": "Create a new dataset event"}, "is_correct": true, "target_server_name": "Airflow", "target_tool_name": "Create Dataset Event", "target_server_description": "Apache Airflow DAG and task management, including DAG operations (list, create, update, delete), task operations (list, update, clear), variable and connection management, dataset operations, and server health monitoring", "target_tool_description": "Creates a new dataset event.", "match_result": {"server": "Airflow", "tool": {"name": "Create Dataset Event", "server": "Airflow", "description": "Creates a new dataset event.", "parameter": {}, "task": "Create a new dataset event for tracking changes in the sales data for Q2 2024."}, "score": 0.6993517279624939}, "sample_size": 2656, "position_index": 942, "selection_method": "position_index_942"}
{"pass_at_k": 20, "elapsed_time": 0.0, "task": {"category": "Airflow", "query": "Check server health status"}, "is_correct": true, "target_server_name": "Airflow", "target_tool_name": "Get Health", "target_server_description": "Apache Airflow DAG and task management, including DAG operations (list, create, update, delete), task operations (list, update, clear), variable and connection management, dataset operations, and server health monitoring", "target_tool_description": "Gets the health status of the server.", "match_result": {"server": "Airflow", "tool": {"name": "Get Health", "server": "Airflow", "description": "Gets the health status of the server.", "parameter": {}, "task": "Check the current health status of the server to ensure it is running optimally."}, "score": 0.6425426602363586}, "sample_size": 2656, "position_index": 949, "selection_method": "position_index_949"}
{"pass_at_k": 1, "elapsed_time": 0.0, "task": {"category": "Airflow", "query": "Retrieve specific event log details"}, "is_correct": true, "target_server_name": "Airflow", "target_tool_name": "Get Event Log", "target_server_description": "Apache Airflow DAG and task management, including DAG operations (list, create, update, delete), task operations (list, update, clear), variable and connection management, dataset operations, and server health monitoring", "target_tool_description": "Gets a specific event log.", "match_result": {"server": "Airflow", "tool": {"name": "Get Event Log", "server": "Airflow", "description": "Gets a specific event log.", "parameter": {"event_log_id": "(string) The ID of the event log."}, "task": "Retrieve the event log with the ID \"EVT-2024-12345\"."}, "score": 0.7283982038497925}, "sample_size": 2656, "position_index": 955, "selection_method": "position_index_955"}
{"pass_at_k": 3, "elapsed_time": 0.0, "task": {"category": "Airtable", "query": "List all accessible bases"}, "is_correct": true, "target_server_name": "Airtable", "target_tool_name": "list_bases", "target_server_description": "Airtable operations, including: listing/searching records, managing bases/tables/fields, and performing CRUD operations on records", "target_tool_description": "Lists all accessible Airtable bases", "match_result": {"server": "Airtable", "tool": {"name": "list_bases", "server": "Airtable", "description": "Lists all accessible Airtable bases", "parameter": {}, "task": "List all available Airtable bases that can be accessed with the current credentials."}, "score": 0.715887188911438}, "sample_size": 2656, "position_index": 962, "selection_method": "position_index_962"}
{"pass_at_k": 1, "elapsed_time": 0.0, "task": {"category": "Airtable", "query": "Create a new table in a base"}, "is_correct": true, "target_server_name": "Airtable", "target_tool_name": "create_table", "target_server_description": "Airtable operations, including: listing/searching records, managing bases/tables/fields, and performing CRUD operations on records", "target_tool_description": "Creates a new table in a base", "match_result": {"server": "Airtable", "tool": {"name": "create_table", "server": "Airtable", "description": "Creates a new table in a base", "parameter": {"baseId": "(string, required) The ID of the Airtable base", "name": "(string, required) Name of the new table", "description": "(string, optional) Description of the table", "fields": "(array, required) Array of field definitions (name, type, description, options)"}, "task": "Create a new table in the specified Airtable base with the name \"Customer Orders\" and include fields for \"Order ID\" (text type), \"Customer Name\" (text type), \"Order Date\" (date type), and \"Total Amount\" (number type). Add an optional description stating \"Table for tracking customer orders and payments.\""}, "score": 0.9732402563095093}, "sample_size": 2656, "position_index": 969, "selection_method": "position_index_969"}
{"pass_at_k": 1, "elapsed_time": 0.0, "task": {"category": "Anki", "query": "Retrieve due cards for review"}, "is_correct": true, "target_server_name": "Anki", "target_tool_name": "get_due_cards", "target_server_description": "1.标记卡片为已回答并评分 2.在默认Anki牌组中创建新卡片 3.获取待复习卡片 4.获取新卡片", "target_tool_description": "Returns n number of cards currently due for review", "match_result": {"server": "Anki", "tool": {"name": "get_due_cards", "server": "Anki", "description": "Returns n number of cards currently due for review", "parameter": {"num": "(number) Number of cards"}, "task": "Retrieve 5 cards that are currently due for review."}, "score": 0.6487874984741211}, "sample_size": 2656, "position_index": 975, "selection_method": "position_index_975"}
{"pass_at_k": 73, "elapsed_time": 0.0, "task": {"category": "Apache Gravitino", "query": "Retrieve table columns details"}, "is_correct": true, "target_server_name": "Apache Gravitino(incubating)", "target_tool_name": "get_table_columns_by_fqn", "target_server_description": "1.获取目录、模式、表和标签的基本信息列表 2.通过完全限定名称获取表和列的详细信息 3.将标签关联到表或列 4.获取与标签关联的对象列表 5.获取角色和用户的基本信息列表 6.授予或撤销用户的角色", "target_tool_description": "Get table columns information by fully qualified name", "match_result": {"server": "Apache Gravitino(incubating)", "tool": {"name": "get_table_columns_by_fqn", "server": "Apache Gravitino(incubating)", "description": "Get table columns information by fully qualified name", "parameter": {}, "task": "Retrieve the column details for the table identified by its fully qualified name."}, "score": 0.6084948778152466}, "sample_size": 2656, "position_index": 982, "selection_method": "position_index_982"}
{"pass_at_k": 2, "elapsed_time": 0.0, "task": {"category": "Apache Gravitino", "query": "Retrieve user information list"}, "is_correct": true, "target_server_name": "Apache Gravitino(incubating)", "target_tool_name": "get_list_of_users", "target_server_description": "1.获取目录、模式、表和标签的基本信息列表 2.通过完全限定名称获取表和列的详细信息 3.将标签关联到表或列 4.获取与标签关联的对象列表 5.获取角色和用户的基本信息列表 6.授予或撤销用户的角色", "target_tool_description": "Get a list of users with basic information", "match_result": {"server": "Apache Gravitino(incubating)", "tool": {"name": "get_list_of_users", "server": "Apache Gravitino(incubating)", "description": "Get a list of users with basic information", "parameter": {}, "task": "Retrieve a list of users including their basic details such as name, email, and registration date."}, "score": 0.727739155292511}, "sample_size": 2656, "position_index": 988, "selection_method": "position_index_988"}
{"pass_at_k": 2, "elapsed_time": 0.0, "task": {"category": "Aranet4", "query": "Configure Aranet4 device settings"}, "is_correct": true, "target_server_name": "Aranet4", "target_tool_name": "init_aranet4_config", "target_server_description": "1.配置Aranet4设备 2.扫描附近的蓝牙Aranet4设备 3.获取当前配置和数据库统计信息 4.设置配置文件中的值 5.从配置的Aranet4设备获取新数据并保存到本地数据库 6.从本地数据库获取最近的测量数据 7.从本地数据库获取特定时间范围内的数据", "target_tool_description": "Assisted configuration of the Aranet4 device.", "match_result": {"server": "Aranet4", "tool": {"name": "init_aranet4_config", "server": "Aranet4", "description": "Assisted configuration of the Aranet4 device.", "parameter": {}, "task": "Configure the Aranet4 device for initial setup and ensure all default settings are applied correctly."}, "score": 0.7107135653495789}, "sample_size": 2656, "position_index": 995, "selection_method": "position_index_995"}
{"pass_at_k": 16, "elapsed_time": 0.0, "task": {"category": "ArangoDB", "query": "Execute AQL queries with optional bind variables"}, "is_correct": true, "target_server_name": "ArangoDB", "target_tool_name": "arango_query", "target_server_description": "ArangoDB数据库操作,包括：执行AQL查询、文档插入、更新、删除、备份集合、列出所有集合、创建新集合", "target_tool_description": "Execute AQL queries", "match_result": {"server": "ArangoDB", "tool": {"name": "arango_query", "server": "ArangoDB", "description": "Execute AQL queries", "parameter": {"query": "(string) AQL query string", "bindVariables": "(Optional, object) Bind variables for parameterized queries"}, "task": "Query the top 10 most active users from the ArangoDB database using an AQL query with bind variables for the date range '2024-01-01' to '2024-03-31'."}, "score": 0.6053979396820068}, "sample_size": 2656, "position_index": 1002, "selection_method": "position_index_1002"}
{"pass_at_k": 33, "elapsed_time": 0.0, "task": {"category": "ArangoDB", "query": "Create a new database collection"}, "is_correct": true, "target_server_name": "ArangoDB", "target_tool_name": "arango_create_collection", "target_server_description": "ArangoDB数据库操作,包括：执行AQL查询、文档插入、更新、删除、备份集合、列出所有集合、创建新集合", "target_tool_description": "Create a new collection in the database", "match_result": {"server": "ArangoDB", "tool": {"name": "arango_create_collection", "server": "ArangoDB", "description": "Create a new collection in the database", "parameter": {"name": "(string) Collection name", "type": "(Optional, string) Collection type (document or edge collection)", "waitForSync": "(Optional, boolean) Configure waitForSync behavior for write operations"}, "task": "Create a new document collection named \"customer_data\" with waitForSync enabled in the database."}, "score": 0.7862032651901245}, "sample_size": 2656, "position_index": 1008, "selection_method": "position_index_1008"}
{"pass_at_k": 11, "elapsed_time": 0.0, "task": {"category": "Atlassian", "query": "Search content in Confluence"}, "is_correct": true, "target_server_name": "Atlassian", "target_tool_name": "confluence_search", "target_server_description": "Jira and Confluence operations, including: issue management (get, search, create, update, transition, comment), page management (search, get, create, update)", "target_tool_description": "Search Confluence content using CQL", "match_result": {"server": "Atlassian", "tool": {"name": "confluence_search", "server": "Atlassian", "description": "Search Confluence content using CQL", "parameter": {}, "task": "Search for documentation related to \"Project Orion\" in Confluence using CQL."}, "score": 0.5207711458206177}, "sample_size": 2656, "position_index": 1015, "selection_method": "position_index_1015"}
{"pass_at_k": 1, "elapsed_time": 0.0, "task": {"category": "AWS Athena", "query": "List saved queries in Athena"}, "is_correct": true, "target_server_name": "AWS Athena", "target_tool_name": "list_saved_queries", "target_server_description": "AWS Athena operations including: executing SQL queries, checking query status, retrieving query results, listing saved queries, and running saved queries by ID", "target_tool_description": "List all saved (named) queries in Athena", "match_result": {"server": "AWS Athena", "tool": {"name": "list_saved_queries", "server": "AWS Athena", "description": "List all saved (named) queries in Athena", "parameter": {}, "task": "List all named queries stored in the Athena database."}, "score": 0.9694047570228577}, "sample_size": 2656, "position_index": 1022, "selection_method": "position_index_1022"}
{"pass_at_k": 1, "elapsed_time": 0.0, "task": {"category": "AWS", "query": "Execute boto3 code to interact with AWS resources"}, "is_correct": true, "target_server_name": "AWS Resources Operations", "target_tool_name": "aws_resources_query_or_modify", "target_server_description": "Execute a boto3 code snippet to query or modify AWS resources", "target_tool_description": "Execute a boto3 code snippet to query or modify AWS resources", "match_result": {"server": "AWS Resources Operations", "tool": {"name": "aws_resources_query_or_modify", "server": "AWS Resources Operations", "description": "Execute a boto3 code snippet to query or modify AWS resources", "parameter": {"code_snippet": "(string) Python code using boto3 to query AWS resources. The code must set a `result` variable with the query output."}, "task": "Run a boto3 script to retrieve the current status of all EC2 instances in the us-east-1 region and store the output in the `result` variable."}, "score": 0.9296393394470215}, "sample_size": 2656, "position_index": 1028, "selection_method": "position_index_1028"}
{"pass_at_k": 46, "elapsed_time": 0.0, "task": {"category": "Azure ADX", "query": "Retrieve sample data from a table"}, "is_correct": true, "target_server_name": "Azure ADX", "target_tool_name": "sample_table_data", "target_server_description": "Azure Data Explorer operations, including: KQL query execution, table listing, schema retrieval, and table data sampling", "target_tool_description": "Get sample data from a table with optional sample size", "match_result": {"server": "Azure ADX", "tool": {"name": "sample_table_data", "server": "Azure ADX", "description": "Get sample data from a table with optional sample size", "parameter": {"table_name": "(string) The name of the table to sample data from", "sample_size": "(Optional, int) The number of rows to sample (default is 10)"}, "task": "Retrieve 15 sample rows from the 'customer_feedback' table."}, "score": 0.6302090287208557}, "sample_size": 2656, "position_index": 1035, "selection_method": "position_index_1035"}
{"pass_at_k": 1, "elapsed_time": 0.0, "task": {"category": "Azure DevOps", "query": "List all accessible projects in the organization"}, "is_correct": true, "target_server_name": "Azure DevOps", "target_tool_name": "Get Projects", "target_server_description": "Azure DevOps work item management, including: querying work items, creating/updating work items, adding/viewing comments, accessing project/team information, and managing team configurations", "target_tool_description": "View all accessible projects in the organization", "match_result": {"server": "Azure DevOps", "tool": {"name": "Get Projects", "server": "Azure DevOps", "description": "View all accessible projects in the organization", "parameter": {}, "task": "List all accessible projects within the organization's scope."}, "score": 0.9503182172775269}, "sample_size": 2656, "position_index": 1042, "selection_method": "position_index_1042"}
{"pass_at_k": -1, "elapsed_time": 0.0, "task": {"category": "Baidu AI", "query": "Provide accurate search results with semantic understanding"}, "is_correct": false, "target_server_name": "Baidu AI Search", "target_tool_name": "RagWithBaiduSearchPro", "target_server_description": "1.调用大模型并支持自定义prompt模板和模型参数 2.结合百度搜索和ERNIE模型提供更准确的搜索结果 3.访问和管理百度智能云千帆AppBuilder网页端发布的AI原生应用", "target_tool_description": "结合百度搜索的搜索引擎技术和ERNIE模型的语义理解能力，提供更准确的搜索结果。", "match_result": {"server": "Heurist Mesh Agent", "tool": {"name": "answer", "server": "Heurist Mesh Agent", "description": "Get a direct answer to a question using Exa's answer API", "parameter": {"question": "(string) The question to answer"}, "task": "Answer the question \"What is the capital of France?\" using Exa's answer API."}, "score": 0.5631799697875977}, "sample_size": 2656, "position_index": 1048, "selection_method": "position_index_1048"}
{"pass_at_k": 17, "elapsed_time": 0.0, "task": {"category": "Basic Memory", "query": "Search knowledge base entries"}, "is_correct": true, "target_server_name": "Basic Memory", "target_tool_name": "search_notes", "target_server_description": "1. Create or update notes in the knowledge base 2. Read notes by title or permalink 3. Navigate the knowledge graph via memory:// URLs 4. Search across the knowledge base 5. Find recently updated information 6. Generate knowledge visualizations", "target_tool_description": "Search across the knowledge base.", "match_result": {"server": "Basic Memory", "tool": {"name": "search_notes", "server": "Basic Memory", "description": "Search across the knowledge base.", "parameter": {"query": "(string) The search query", "page": "(integer) The page number for paginated results", "page_size": "(integer) The number of items per page"}, "task": "Search for documents related to \"machine learning algorithms\" in the knowledge base, displaying 10 results per page on the first page."}, "score": 0.6227339506149292}, "sample_size": 2656, "position_index": 1055, "selection_method": "position_index_1055"}
{"pass_at_k": 1, "elapsed_time": 0.0, "task": {"category": "CFBD API", "query": "Retrieve play-by-play data"}, "is_correct": true, "target_server_name": "CFBD API", "target_tool_name": "get-plays", "target_server_description": "1. Retrieve game data 2. Get team records 3. Access team game statistics 4. Query play-by-play data 5. Analyze drive information 6. View play statistics 7. Check team rankings 8. See win probabilities 9. Access detailed game statistics and analytics", "target_tool_description": "Query play-by-play data", "match_result": {"server": "CFBD API", "tool": {"name": "get-plays", "server": "CFBD API", "description": "Query play-by-play data", "parameter": {}, "task": "Retrieve the play-by-play data for the most recent basketball game."}, "score": 0.978110134601593}, "sample_size": 2656, "position_index": 1062, "selection_method": "position_index_1062"}
{"pass_at_k": 51, "elapsed_time": 0.0, "task": {"category": "ChatSum", "query": "Summarize chat messages based on query parameters"}, "is_correct": true, "target_server_name": "ChatSum", "target_tool_name": "query_chat_messages", "target_server_description": "Query and summarize chat messages based on given parameters", "target_tool_description": "Query chat messages with given parameters and summarize chat messages based on the query prompt.", "match_result": {"server": "ChatSum", "tool": {"name": "query_chat_messages", "server": "ChatSum", "description": "Query chat messages with given parameters and summarize chat messages based on the query prompt.", "parameter": {}, "task": "Retrieve and summarize the latest 50 chat messages from the current conversation."}, "score": 0.5353903770446777}, "sample_size": 2656, "position_index": 1068, "selection_method": "position_index_1068"}
{"pass_at_k": 11, "elapsed_time": 0.0, "task": {"category": "Chess.com", "query": "Retrieve monthly game archives for a player"}, "is_correct": true, "target_server_name": "Chess.com", "target_tool_name": "get_player_game_archives", "target_server_description": "Chess.com player and club data retrieval, including: player profiles, stats, online status, titled players, ongoing games, monthly games, game archives, PGN downloads, club profiles, and club members", "target_tool_description": "Get a list of available monthly game archives for a player on Chess.com", "match_result": {"server": "Chess.com", "tool": {"name": "get_player_game_archives", "server": "Chess.com", "description": "Get a list of available monthly game archives for a player on Chess.com", "parameter": {}, "task": "Retrieve the list of monthly game archives for a specific player on Chess.com."}, "score": 0.5685380101203918}, "sample_size": 2656, "position_index": 1075, "selection_method": "position_index_1075"}
{"pass_at_k": 2, "elapsed_time": 0.0, "task": {"category": "ClickUp", "query": "Create multiple tasks in bulk"}, "is_correct": true, "target_server_name": "ClickUp", "target_tool_name": "create_bulk_tasks", "target_server_description": "1.任务管理，包括创建、更新、删除、移动和复制任务 2.列表和文件夹管理，包括创建、更新和删除 3.标签管理，包括创建、更新、删除和关联任务 4.时间跟踪，包括开始、停止和记录时间条目 5.文档管理，包括创建、获取和更新文档页面", "target_tool_description": "Create multiple tasks", "match_result": {"server": "ClickUp", "tool": {"name": "create_bulk_tasks", "server": "ClickUp", "description": "Create multiple tasks", "parameter": {"tasks[]": "(array) An array of task objects to create"}, "task": "Create a list of 5 new tasks for the upcoming project deadline, including their titles, descriptions, and due dates."}, "score": 0.7001434564590454}, "sample_size": 2656, "position_index": 1081, "selection_method": "position_index_1081"}
{"pass_at_k": 1, "elapsed_time": 0.0, "task": {"category": "ClickUp", "query": "Add comments to tasks"}, "is_correct": true, "target_server_name": "ClickUp", "target_tool_name": "create_task_comment", "target_server_description": "1.任务管理，包括创建、更新、删除、移动和复制任务 2.列表和文件夹管理，包括创建、更新和删除 3.标签管理，包括创建、更新、删除和关联任务 4.时间跟踪，包括开始、停止和记录时间条目 5.文档管理，包括创建、获取和更新文档页面", "target_tool_description": "Add a comment to a task", "match_result": {"server": "ClickUp", "tool": {"name": "create_task_comment", "server": "ClickUp", "description": "Add a comment to a task", "parameter": {"commentText": "(string) The text of the comment", "taskId": "(string) The ID of the task to add the comment to", "taskName": "(Optional, string) The name of the task to add the comment to", "listName": "(Optional, string) The name of the list containing the task"}, "task": "Add a comment with the text \"Please review the attached documents by EOD\" to the task with ID \"TASK12345\" in the \"Project Review\" list."}, "score": 0.900464653968811}, "sample_size": 2656, "position_index": 1088, "selection_method": "position_index_1088"}
{"pass_at_k": 66, "elapsed_time": 0.0, "task": {"category": "ClickUp", "query": "Create a new list in a workspace"}, "is_correct": true, "target_server_name": "ClickUp", "target_tool_name": "create_list", "target_server_description": "1.任务管理，包括创建、更新、删除、移动和复制任务 2.列表和文件夹管理，包括创建、更新和删除 3.标签管理，包括创建、更新、删除和关联任务 4.时间跟踪，包括开始、停止和记录时间条目 5.文档管理，包括创建、获取和更新文档页面", "target_tool_description": "Create list in space", "match_result": {"server": "ClickUp", "tool": {"name": "create_list", "server": "ClickUp", "description": "Create list in space", "parameter": {"name": "(string) The name of the list to create", "spaceId": "(string) The ID of the space where the list will be created", "spaceName": "(Optional, string) The name of the space where the list will be created"}, "task": "Create a new list named \"Project Tasks\" in the space with ID \"SP12345\"."}, "score": 0.5972402095794678}, "sample_size": 2656, "position_index": 1095, "selection_method": "position_index_1095"}
{"pass_at_k": 4, "elapsed_time": 0.0, "task": {"category": "ClickUp", "query": "Retrieve details of a specific list"}, "is_correct": true, "target_server_name": "ClickUp", "target_tool_name": "get_list", "target_server_description": "1.任务管理，包括创建、更新、删除、移动和复制任务 2.列表和文件夹管理，包括创建、更新和删除 3.标签管理，包括创建、更新、删除和关联任务 4.时间跟踪，包括开始、停止和记录时间条目 5.文档管理，包括创建、获取和更新文档页面", "target_tool_description": "Get list details", "match_result": {"server": "ClickUp", "tool": {"name": "get_list", "server": "ClickUp", "description": "Get list details", "parameter": {"listId": "(string) The ID of the list to get", "listName": "(Optional, string) The name of the list to get"}, "task": "Retrieve the details of the list with the ID \"L12345\" and optionally include the name if available."}, "score": 0.6889545917510986}, "sample_size": 2656, "position_index": 1101, "selection_method": "position_index_1101"}
{"pass_at_k": 1, "elapsed_time": 0.0, "task": {"category": "ClickUp", "query": "Add tags to tasks"}, "is_correct": true, "target_server_name": "ClickUp", "target_tool_name": "add_tag_to_task", "target_server_description": "1.任务管理，包括创建、更新、删除、移动和复制任务 2.列表和文件夹管理，包括创建、更新和删除 3.标签管理，包括创建、更新、删除和关联任务 4.时间跟踪，包括开始、停止和记录时间条目 5.文档管理，包括创建、获取和更新文档页面", "target_tool_description": "Add tag to task", "match_result": {"server": "ClickUp", "tool": {"name": "add_tag_to_task", "server": "ClickUp", "description": "Add tag to task", "parameter": {"tagName": "(string) The name of the tag to add", "taskId": "(string) The ID of the task to add the tag to", "taskName": "(Optional, string) The name of the task to add the tag to", "listName": "(Optional, string) The name of the list containing the task"}, "task": "Add the tag \"urgent\" to the task with ID \"TSK-2024-001\" in the \"Project Deliverables\" list."}, "score": 0.9451155662536621}, "sample_size": 2656, "position_index": 1108, "selection_method": "position_index_1108"}
{"pass_at_k": 1, "elapsed_time": 0.0, "task": {"category": "ClickUp", "query": "Retrieve active timer"}, "is_correct": true, "target_server_name": "ClickUp", "target_tool_name": "get_current_time_entry", "target_server_description": "1.任务管理，包括创建、更新、删除、移动和复制任务 2.列表和文件夹管理，包括创建、更新和删除 3.标签管理，包括创建、更新、删除和关联任务 4.时间跟踪，包括开始、停止和记录时间条目 5.文档管理，包括创建、获取和更新文档页面", "target_tool_description": "Get currently running timer", "match_result": {"server": "ClickUp", "tool": {"name": "get_current_time_entry", "server": "ClickUp", "description": "Get currently running timer", "parameter": {}, "task": "Check the details of the currently active timer."}, "score": 0.9623780250549316}, "sample_size": 2656, "position_index": 1115, "selection_method": "position_index_1115"}
{"pass_at_k": 88, "elapsed_time": 0.0, "task": {"category": "ClickUp", "query": "Create a document page in a workspace"}, "is_correct": true, "target_server_name": "ClickUp", "target_tool_name": "create_document_pages", "target_server_description": "1.任务管理，包括创建、更新、删除、移动和复制任务 2.列表和文件夹管理，包括创建、更新和删除 3.标签管理，包括创建、更新、删除和关联任务 4.时间跟踪，包括开始、停止和记录时间条目 5.文档管理，包括创建、获取和更新文档页面", "target_tool_description": "Create a document page", "match_result": {"server": "ClickUp", "tool": {"name": "create_document_pages", "server": "ClickUp", "description": "Create a document page", "parameter": {"workspaceId": "(string) The ID of the workspace", "documentId": "(string) The ID of the document", "parent_page_id": "(Optional, string) The ID of the parent page", "name": "(string) The name of the page", "sub_title": "(Optional, string) The subtitle of the page", "content": "(string) The content of the page", "content_format": "(Optional, string) The format of the content"}, "task": "Create a new page titled \"Project Timeline\" with the content \"Q2 2024 deliverables\" in the specified workspace and document, setting the content format to plain text."}, "score": 0.5729140043258667}, "sample_size": 2656, "position_index": 1121, "selection_method": "position_index_1121"}
{"pass_at_k": 33, "elapsed_time": 0.0, "task": {"category": "code-executor", "query": "Retrieve current environment settings"}, "is_correct": true, "target_server_name": "code-executor", "target_tool_name": "get_environment_config", "target_server_description": "1.在配置环境中执行Python代码 2.安装Python包 3.检查已安装的包 4.动态更改环境配置 5.获取当前环境配置", "target_tool_description": "Gets the current environment configuration.", "match_result": {"server": "code-executor", "tool": {"name": "get_environment_config", "server": "code-executor", "description": "Gets the current environment configuration.", "parameter": {}, "task": "Retrieve the current environment configuration settings for review."}, "score": 0.6407454013824463}, "sample_size": 2656, "position_index": 1128, "selection_method": "position_index_1128"}
{"pass_at_k": 2, "elapsed_time": 0.0, "task": {"category": "Consul", "query": "List active services"}, "is_correct": true, "target_server_name": "consul-mcp", "target_tool_name": "List running services", "target_server_description": "Consul服务管理,包括:服务注册与注销、健康检查管理、KV存储操作、会话管理、事件处理、查询执行、集群节点信息获取", "target_tool_description": "Lists all currently running services.", "match_result": {"server": "consul-mcp", "tool": {"name": "List running services", "server": "consul-mcp", "description": "Lists all currently running services.", "parameter": {}, "task": "List all services that are currently active and running on the system."}, "score": 0.6500238180160522}, "sample_size": 2656, "position_index": 1135, "selection_method": "position_index_1135"}
{"pass_at_k": -1, "elapsed_time": 0.0, "task": {"category": "Consul", "query": "Remove existing health checks for services"}, "is_correct": false, "target_server_name": "consul-mcp", "target_tool_name": "Deregister health checks", "target_server_description": "Consul服务管理,包括:服务注册与注销、健康检查管理、KV存储操作、会话管理、事件处理、查询执行、集群节点信息获取", "target_tool_description": "Deregisters existing health checks for services.", "match_result": {"server": "MCP Create", "tool": {"name": "list-servers", "server": "MCP Create", "description": "Get list of running servers", "parameter": {}, "task": "List all currently active servers in the infrastructure."}, "score": 0.635441780090332}, "sample_size": 2656, "position_index": 1141, "selection_method": "position_index_1141"}
{"pass_at_k": 2, "elapsed_time": 0.0, "task": {"category": "Consul", "query": "Destroy specified sessions"}, "is_correct": true, "target_server_name": "consul-mcp", "target_tool_name": "Destroy sessions", "target_server_description": "Consul服务管理,包括:服务注册与注销、健康检查管理、KV存储操作、会话管理、事件处理、查询执行、集群节点信息获取", "target_tool_description": "Destroys specified sessions.", "match_result": {"server": "consul-mcp", "tool": {"name": "Destroy sessions", "server": "consul-mcp", "description": "Destroys specified sessions.", "parameter": {}, "task": "Terminate all active sessions for the current user account."}, "score": 0.6770119071006775}, "sample_size": 2656, "position_index": 1148, "selection_method": "position_index_1148"}
{"pass_at_k": -1, "elapsed_time": 0.0, "task": {"category": "Consul", "query": "Retrieve current peer nodes in cluster"}, "is_correct": false, "target_server_name": "consul-mcp", "target_tool_name": "Get current peers", "target_server_description": "Consul服务管理,包括:服务注册与注销、健康检查管理、KV存储操作、会话管理、事件处理、查询执行、集群节点信息获取", "target_tool_description": "Retrieves the current peer nodes in the Consul cluster.", "match_result": {"server": "Kubernetes and OpenShift", "tool": {"name": "resources_get", "server": "Kubernetes and OpenShift", "description": "Get a Kubernetes resource in the current cluster", "parameter": {"apiVersion": "(Required, string) apiVersion of the resource (e.g., v1, apps/v1, networking.k8s.io/v1)", "kind": "(Required, string) kind of the resource (e.g., Pod, Service, Deployment, Ingress)", "name": "(Required, string) Name of the resource", "namespace": "(Optional, string) Namespace to retrieve the namespaced resource from. Ignored for cluster-scoped resources. Uses configured namespace if not provided."}, "task": "Retrieve the Deployment named \"frontend\" with apiVersion \"apps/v1\" from the \"production\" namespace in the current Kubernetes cluster."}, "score": 0.6551454067230225}, "sample_size": 2656, "position_index": 1154, "selection_method": "position_index_1154"}
{"pass_at_k": 3, "elapsed_time": 0.0, "task": {"category": "Cryptocurrency", "query": "Fetch active cryptocurrencies with market data"}, "is_correct": true, "target_server_name": "coin_api_mcp", "target_tool_name": "listing-coins", "target_server_description": "1.Fetch paginated list of all active cryptocurrencies with market data 2.Retrieve detailed information about a specific cryptocurrency 3.Fetch latest market quotes for cryptocurrencies", "target_tool_description": "Fetches a paginated list of all active cryptocurrencies with the latest market data.", "match_result": {"server": "coin_api_mcp", "tool": {"name": "listing-coins", "server": "coin_api_mcp", "description": "Fetches a paginated list of all active cryptocurrencies with the latest market data.", "parameter": {"start": "(integer, optional) Offset the start (1-based index) of the paginated list of items to return.", "limit": "(integer, optional) Number of results to return (default: 10, max: 5000).", "price_min": "(number, optional) Minimum USD price to filter results.", "price_max": "(number, optional) Maximum USD price to filter results.", "market_cap_min": "(number, optional) Minimum market cap to filter results.", "market_cap_max": "(number, optional) Maximum market cap to filter results.", "convert": "(string, optional) Calculate market quotes in multiple currencies.", "sort": "(string, optional) Field to sort the list of cryptocurrencies by.", "sort_dir": "(string, optional) Direction to order cryptocurrencies (asc or desc)."}, "task": "Fetch the top 50 cryptocurrencies sorted by market cap in descending order, with a minimum market cap of $1 billion and a maximum price of $1000. Include quotes in both USD and EUR."}, "score": 0.6247836351394653}, "sample_size": 2656, "position_index": 1161, "selection_method": "position_index_1161"}
{"pass_at_k": 1, "elapsed_time": 0.0, "task": {"category": "CoinMarketCap", "query": "Retrieve cryptocurrency categories"}, "is_correct": true, "target_server_name": "CoinMarketCap", "target_tool_name": "cryptoCategories", "target_server_description": "Cryptocurrency data services including: cryptocurrency mapping, metadata retrieval, market quotes, categories, exchange information, DEX data, global metrics, price conversion, API key management, Fear & Greed Index, airdrops, historical data, trending analysis, OHLCV data, price performance statistics, market pairs, news and content, community trends, and blockchain statistics", "target_tool_description": "Get list of all cryptocurrency categories", "match_result": {"server": "CoinMarketCap", "tool": {"name": "cryptoCategories", "server": "CoinMarketCap", "description": "Get list of all cryptocurrency categories", "parameter": {}, "task": "List all available cryptocurrency categories with their current market data."}, "score": 0.9623615741729736}, "sample_size": 2656, "position_index": 1168, "selection_method": "position_index_1168"}
{"pass_at_k": 2, "elapsed_time": 0.0, "task": {"category": "CoinMarketCap", "query": "Retrieve latest DEX market data"}, "is_correct": true, "target_server_name": "CoinMarketCap", "target_tool_name": "dexListingsLatest", "target_server_description": "Cryptocurrency data services including: cryptocurrency mapping, metadata retrieval, market quotes, categories, exchange information, DEX data, global metrics, price conversion, API key management, Fear & Greed Index, airdrops, historical data, trending analysis, OHLCV data, price performance statistics, market pairs, news and content, community trends, and blockchain statistics", "target_tool_description": "Get latest market data for all DEXes", "match_result": {"server": "CoinMarketCap", "tool": {"name": "dexListingsLatest", "server": "CoinMarketCap", "description": "Get latest market data for all DEXes", "parameter": {}, "task": "Retrieve the most recent market data for all decentralized exchanges (DEXes)."}, "score": 0.6622697114944458}, "sample_size": 2656, "position_index": 1174, "selection_method": "position_index_1174"}
{"pass_at_k": 1, "elapsed_time": 0.0, "task": {"category": "CoinMarketCap", "query": "Retrieve latest global cryptocurrency metrics"}, "is_correct": true, "target_server_name": "CoinMarketCap", "target_tool_name": "globalMetricsLatest", "target_server_description": "Cryptocurrency data services including: cryptocurrency mapping, metadata retrieval, market quotes, categories, exchange information, DEX data, global metrics, price conversion, API key management, Fear & Greed Index, airdrops, historical data, trending analysis, OHLCV data, price performance statistics, market pairs, news and content, community trends, and blockchain statistics", "target_tool_description": "Get latest global cryptocurrency metrics", "match_result": {"server": "CoinMarketCap", "tool": {"name": "globalMetricsLatest", "server": "CoinMarketCap", "description": "Get latest global cryptocurrency metrics", "parameter": {}, "task": "Retrieve the most recent global cryptocurrency market data, including total market capitalization, trading volume, and active cryptocurrencies."}, "score": 0.9783979654312134}, "sample_size": 2656, "position_index": 1181, "selection_method": "position_index_1181"}
{"pass_at_k": 1, "elapsed_time": 0.0, "task": {"category": "CoinMarketCap", "query": "Retrieve the latest Fear & Greed Index"}, "is_correct": true, "target_server_name": "CoinMarketCap", "target_tool_name": "fearAndGreedLatest", "target_server_description": "Cryptocurrency data services including: cryptocurrency mapping, metadata retrieval, market quotes, categories, exchange information, DEX data, global metrics, price conversion, API key management, Fear & Greed Index, airdrops, historical data, trending analysis, OHLCV data, price performance statistics, market pairs, news and content, community trends, and blockchain statistics", "target_tool_description": "Get latest Fear & Greed Index", "match_result": {"server": "CoinMarketCap", "tool": {"name": "fearAndGreedLatest", "server": "CoinMarketCap", "description": "Get latest Fear & Greed Index", "parameter": {}, "task": "Retrieve the most recent Fear & Greed Index value."}, "score": 0.9791494607925415}, "sample_size": 2656, "position_index": 1188, "selection_method": "position_index_1188"}
{"pass_at_k": 6, "elapsed_time": 0.0, "task": {"category": "CoinMarketCap", "query": "Retrieve historical cryptocurrency market data"}, "is_correct": true, "target_server_name": "CoinMarketCap", "target_tool_name": "cryptoQuotesHistoricalV3", "target_server_description": "Cryptocurrency data services including: cryptocurrency mapping, metadata retrieval, market quotes, categories, exchange information, DEX data, global metrics, price conversion, API key management, Fear & Greed Index, airdrops, historical data, trending analysis, OHLCV data, price performance statistics, market pairs, news and content, community trends, and blockchain statistics", "target_tool_description": "Get historical market quotes with advanced time-based intervals", "match_result": {"server": "CoinMarketCap", "tool": {"name": "cryptoQuotesHistoricalV3", "server": "CoinMarketCap", "description": "Get historical market quotes with advanced time-based intervals", "parameter": {}, "task": "Retrieve the historical market quotes for Bitcoin over the past 30 days with daily intervals."}, "score": 0.5931125283241272}, "sample_size": 2656, "position_index": 1194, "selection_method": "position_index_1194"}
{"pass_at_k": 1, "elapsed_time": 0.0, "task": {"category": "CoinMarketCap", "query": "Retrieve latest OHLCV data for cryptocurrencies"}, "is_correct": true, "target_server_name": "CoinMarketCap", "target_tool_name": "cryptoOhlcvLatest", "target_server_description": "Cryptocurrency data services including: cryptocurrency mapping, metadata retrieval, market quotes, categories, exchange information, DEX data, global metrics, price conversion, API key management, Fear & Greed Index, airdrops, historical data, trending analysis, OHLCV data, price performance statistics, market pairs, news and content, community trends, and blockchain statistics", "target_tool_description": "Get latest OHLCV market data for any cryptocurrency", "match_result": {"server": "CoinMarketCap", "tool": {"name": "cryptoOhlcvLatest", "server": "CoinMarketCap", "description": "Get latest OHLCV market data for any cryptocurrency", "parameter": {}, "task": "Retrieve the latest open, high, low, close, and volume data for the top 5 cryptocurrencies by market capitalization."}, "score": 0.9100756645202637}, "sample_size": 2656, "position_index": 1201, "selection_method": "position_index_1201"}
{"pass_at_k": 1, "elapsed_time": 0.0, "task": {"category": "CoinMarketCap", "query": "Get latest cryptocurrency news"}, "is_correct": true, "target_server_name": "CoinMarketCap", "target_tool_name": "contentLatest", "target_server_description": "Cryptocurrency data services including: cryptocurrency mapping, metadata retrieval, market quotes, categories, exchange information, DEX data, global metrics, price conversion, API key management, Fear & Greed Index, airdrops, historical data, trending analysis, OHLCV data, price performance statistics, market pairs, news and content, community trends, and blockchain statistics", "target_tool_description": "Get latest cryptocurrency news and content", "match_result": {"server": "CoinMarketCap", "tool": {"name": "contentLatest", "server": "CoinMarketCap", "description": "Get latest cryptocurrency news and content", "parameter": {}, "task": "Fetch the latest news and updates about cryptocurrencies."}, "score": 0.7222628593444824}, "sample_size": 2656, "position_index": 1208, "selection_method": "position_index_1208"}
{"pass_at_k": 7, "elapsed_time": 0.0, "task": {"category": "CoinMarketCap", "query": "Retrieve latest blockchain statistics"}, "is_correct": true, "target_server_name": "CoinMarketCap", "target_tool_name": "blockchainStatisticsLatest", "target_server_description": "Cryptocurrency data services including: cryptocurrency mapping, metadata retrieval, market quotes, categories, exchange information, DEX data, global metrics, price conversion, API key management, Fear & Greed Index, airdrops, historical data, trending analysis, OHLCV data, price performance statistics, market pairs, news and content, community trends, and blockchain statistics", "target_tool_description": "Get latest statistics for one or more blockchains", "match_result": {"server": "CoinMarketCap", "tool": {"name": "blockchainStatisticsLatest", "server": "CoinMarketCap", "description": "Get latest statistics for one or more blockchains", "parameter": {}, "task": "Retrieve the most recent statistics for the top 5 blockchains by market capitalization."}, "score": 0.6369516253471375}, "sample_size": 2656, "position_index": 1214, "selection_method": "position_index_1214"}
{"pass_at_k": 16, "elapsed_time": 0.0, "task": {"category": "MacOS", "query": "Open or activate an application remotely"}, "is_correct": true, "target_server_name": "Computer-Use - Remote MacOS Use", "target_tool_name": "remote_macos_open_application", "target_server_description": "Remote macOS machine interaction, including: desktop screenshot capture, keyboard input simulation, mouse movement/click/double-click/scroll/drag-and-drop operations, and application launching", "target_tool_description": "Opens/activates an application and returns its PID for further interactions.", "match_result": {"server": "Computer-Use - Remote MacOS Use", "tool": {"name": "remote_macos_open_application", "server": "Computer-Use - Remote MacOS Use", "description": "Opens/activates an application and returns its PID for further interactions.", "parameter": {}, "task": "Open the Safari web browser on the remote macOS system and retrieve its process ID."}, "score": 0.5699960589408875}, "sample_size": 2656, "position_index": 1221, "selection_method": "position_index_1221"}
{"pass_at_k": 2, "elapsed_time": 0.0, "task": {"category": "Contentful", "query": "Remove content entries"}, "is_correct": true, "target_server_name": "Contentful-mcp", "target_tool_name": "delete_entry", "target_server_description": "Contentful CMS operations including: entry search, creation, retrieval, update, deletion, publishing, unpublishing, bulk operations; asset listing, upload, retrieval, update, deletion, publishing, unpublishing; space listing and details; environment listing, creation, deletion; content type listing, creation, update, deletion, publishing", "target_tool_description": "Remove entries", "match_result": {"server": "Contentful-mcp", "tool": {"name": "delete_entry", "server": "Contentful-mcp", "description": "Remove entries", "parameter": {}, "task": "Remove the specified entry from the system."}, "score": 0.8611544966697693}, "sample_size": 2656, "position_index": 1227, "selection_method": "position_index_1227"}
{"pass_at_k": 1, "elapsed_time": 0.0, "task": {"category": "Contentful", "query": "Upload new assets with metadata"}, "is_correct": true, "target_server_name": "Contentful-mcp", "target_tool_name": "upload_asset", "target_server_description": "Contentful CMS operations including: entry search, creation, retrieval, update, deletion, publishing, unpublishing, bulk operations; asset listing, upload, retrieval, update, deletion, publishing, unpublishing; space listing and details; environment listing, creation, deletion; content type listing, creation, update, deletion, publishing", "target_tool_description": "Upload new assets with metadata", "match_result": {"server": "Contentful-mcp", "tool": {"name": "upload_asset", "server": "Contentful-mcp", "description": "Upload new assets with metadata", "parameter": {}, "task": "Upload a new asset file with the following metadata: title \"Summer Campaign 2024\", description \"Marketing materials for the summer promotion\", and tags [\"promotion\", \"summer\", \"2024\"]."}, "score": 0.9999999403953552}, "sample_size": 2656, "position_index": 1234, "selection_method": "position_index_1234"}
{"pass_at_k": 1, "elapsed_time": 0.0, "task": {"category": "Contentful", "query": "Retrieve space details"}, "is_correct": true, "target_server_name": "Contentful-mcp", "target_tool_name": "get_space", "target_server_description": "Contentful CMS operations including: entry search, creation, retrieval, update, deletion, publishing, unpublishing, bulk operations; asset listing, upload, retrieval, update, deletion, publishing, unpublishing; space listing and details; environment listing, creation, deletion; content type listing, creation, update, deletion, publishing", "target_tool_description": "Get space details", "match_result": {"server": "Contentful-mcp", "tool": {"name": "get_space", "server": "Contentful-mcp", "description": "Get space details", "parameter": {}, "task": "Retrieve the details of the available storage space."}, "score": 0.9663119912147522}, "sample_size": 2656, "position_index": 1241, "selection_method": "position_index_1241"}
{"pass_at_k": 1, "elapsed_time": 0.0, "task": {"category": "Contentful", "query": "Create new content type"}, "is_correct": true, "target_server_name": "Contentful-mcp", "target_tool_name": "create_content_type", "target_server_description": "Contentful CMS operations including: entry search, creation, retrieval, update, deletion, publishing, unpublishing, bulk operations; asset listing, upload, retrieval, update, deletion, publishing, unpublishing; space listing and details; environment listing, creation, deletion; content type listing, creation, update, deletion, publishing", "target_tool_description": "Create new content type", "match_result": {"server": "Contentful-mcp", "tool": {"name": "create_content_type", "server": "Contentful-mcp", "description": "Create new content type", "parameter": {}, "task": "Create a new content type for organizing blog posts with fields for title, author, and publication date."}, "score": 1.0000008344650269}, "sample_size": 2656, "position_index": 1247, "selection_method": "position_index_1247"}
{"pass_at_k": 6, "elapsed_time": 0.0, "task": {"category": "CryptoPanic", "query": "Fetch cryptocurrency news, analysis, or videos"}, "is_correct": true, "target_server_name": "cryptopanic-mcp-server", "target_tool_name": "get_crypto_news", "target_server_description": "Fetch cryptocurrency news, analysis, or videos from CryptoPanic", "target_tool_description": "Fetches cryptocurrency news, analysis, or videos from CryptoPanic.", "match_result": {"server": "cryptopanic-mcp-server", "tool": {"name": "get_crypto_news", "server": "cryptopanic-mcp-server", "description": "Fetches cryptocurrency news, analysis, or videos from CryptoPanic.", "parameter": {"kind": "(str) Content type (news, analysis, videos)", "num_pages": "(Optional, int) Number of pages to fetch (default: 1, max: 10)"}, "task": "Fetch the latest cryptocurrency news articles from CryptoPanic, retrieving content from the first 3 pages."}, "score": 0.5647215247154236}, "sample_size": 2656, "position_index": 1254, "selection_method": "position_index_1254"}
{"pass_at_k": 1, "elapsed_time": 0.0, "task": {"category": "Datadog", "query": "List all available dashboards"}, "is_correct": true, "target_server_name": "Datadog", "target_tool_name": "get-dashboards", "target_server_description": "1. Fetch monitors with optional filtering 2. Get details of a specific monitor by ID 3. List all dashboards 4. Get a specific dashboard by ID 5. List available metrics 6. Get metadata for a specific metric 7. Fetch events within a time range 8. List incidents with optional filtering 9. Search logs with advanced query filtering 10. Perform analytics and aggregations on log data", "target_tool_description": "List all dashboards", "match_result": {"server": "Datadog", "tool": {"name": "get-dashboards", "server": "Datadog", "description": "List all dashboards", "parameter": {}, "task": "List all available dashboards in the system."}, "score": 0.992554783821106}, "sample_size": 2656, "position_index": 1261, "selection_method": "position_index_1261"}
{"pass_at_k": 1, "elapsed_time": 0.0, "task": {"category": "Datadog", "query": "Search and filter logs with advanced queries"}, "is_correct": true, "target_server_name": "Datadog", "target_tool_name": "search-logs", "target_server_description": "1. Fetch monitors with optional filtering 2. Get details of a specific monitor by ID 3. List all dashboards 4. Get a specific dashboard by ID 5. List available metrics 6. Get metadata for a specific metric 7. Fetch events within a time range 8. List incidents with optional filtering 9. Search logs with advanced query filtering 10. Perform analytics and aggregations on log data", "target_tool_description": "Search logs with advanced query filtering", "match_result": {"server": "Datadog", "tool": {"name": "search-logs", "server": "Datadog", "description": "Search logs with advanced query filtering", "parameter": {"filter": "(object) Filter object containing query, from, and to", "sort": "(Optional, string) Sorting order (e.g., -timestamp)", "limit": "(Optional, number) Maximum number of logs to return"}, "task": "Search the logs for entries containing the keyword \"authentication error\" between 2024-01-01 and 2024-01-31, sorted by timestamp in descending order, and return a maximum of 50 logs."}, "score": 0.7983155250549316}, "sample_size": 2656, "position_index": 1267, "selection_method": "position_index_1267"}
{"pass_at_k": -1, "elapsed_time": 0.0, "task": {"category": "DaVinci Resolve", "query": "List available projects"}, "is_correct": false, "target_server_name": "DaVinci Resolve", "target_tool_name": "list_projects", "target_server_description": "DaVinci Resolve操作，包括：获取版本和当前页面信息、切换页面、项目管理（创建、打开、保存、列出）、时间线管理（创建、切换、添加标记）、媒体池操作（列出剪辑、导入媒体文件、创建媒体箱、添加剪辑到时间线）", "target_tool_description": "Lists all available projects in DaVinci Resolve.", "match_result": {"server": "Lightdash", "tool": {"name": "get_project", "server": "Lightdash", "description": "Get details of a specific project", "parameter": {}, "task": "Retrieve the details of the currently active project."}, "score": 0.8677462339401245}, "sample_size": 2656, "position_index": 1274, "selection_method": "position_index_1274"}
{"pass_at_k": 47, "elapsed_time": 0.0, "task": {"category": "DaVinci Resolve", "query": "Create a new timeline in a project"}, "is_correct": true, "target_server_name": "DaVinci Resolve", "target_tool_name": "create_new_timeline", "target_server_description": "DaVinci Resolve操作，包括：获取版本和当前页面信息、切换页面、项目管理（创建、打开、保存、列出）、时间线管理（创建、切换、添加标记）、媒体池操作（列出剪辑、导入媒体文件、创建媒体箱、添加剪辑到时间线）", "target_tool_description": "Creates a new timeline in the current project.", "match_result": {"server": "DaVinci Resolve", "tool": {"name": "create_new_timeline", "server": "DaVinci Resolve", "description": "Creates a new timeline in the current project.", "parameter": {"timeline_name": "(string) The name of the new timeline."}, "task": "Create a new timeline named \"Product Launch Q3 2024\" in the current project."}, "score": 0.6268447637557983}, "sample_size": 2656, "position_index": 1281, "selection_method": "position_index_1281"}
{"pass_at_k": 1, "elapsed_time": 0.0, "task": {"category": "DaVinci Resolve", "query": "Add media clips to timeline"}, "is_correct": true, "target_server_name": "DaVinci Resolve", "target_tool_name": "add_clip_to_timeline", "target_server_description": "DaVinci Resolve操作，包括：获取版本和当前页面信息、切换页面、项目管理（创建、打开、保存、列出）、时间线管理（创建、切换、添加标记）、媒体池操作（列出剪辑、导入媒体文件、创建媒体箱、添加剪辑到时间线）", "target_tool_description": "Adds a clip to the current timeline.", "match_result": {"server": "DaVinci Resolve", "tool": {"name": "add_clip_to_timeline", "server": "DaVinci Resolve", "description": "Adds a clip to the current timeline.", "parameter": {"clip_name": "(string) The name of the clip to add."}, "task": "Add a clip named \"Summer_Vacation_2024\" to the current editing timeline."}, "score": 0.6761295795440674}, "sample_size": 2656, "position_index": 1287, "selection_method": "position_index_1287"}
{"pass_at_k": 1, "elapsed_time": 0.0, "task": {"category": "Dataset Viewer", "query": "Filter dataset rows with SQL-like conditions"}, "is_correct": true, "target_server_name": "Dataset Viewer", "target_tool_name": "filter", "target_server_description": "1.验证数据集是否存在并可访问 2.获取数据集详细信息 3.获取数据集分页内容 4.获取数据集分割的首行 5.获取数据集分割的统计信息 6.在数据集中搜索文本 7.使用类似SQL的条件过滤行 8.以Parquet格式下载整个数据集", "target_tool_description": "Filter rows using SQL-like conditions", "match_result": {"server": "Dataset Viewer", "tool": {"name": "filter", "server": "Dataset Viewer", "description": "Filter rows using SQL-like conditions", "parameter": {"dataset": "string, Dataset identifier", "config": "string, Configuration name", "split": "string, Split name", "where": "string, SQL WHERE clause (e.g. 'score > 0.5')", "orderby": "(Optional, string) SQL ORDER BY clause", "page": "(Optional, integer) Page number (0-based)", "auth_token": "(Optional, string) For private datasets"}, "task": "Filter rows from the dataset 'customer_feedback' where the sentiment score is greater than 0.7, ordered by date in descending order, and return the first page of results."}, "score": 0.9832459688186646}, "sample_size": 2656, "position_index": 1294, "selection_method": "position_index_1294"}
{"pass_at_k": 1, "elapsed_time": 0.0, "task": {"category": "Deepseek", "query": "Generate advanced text with configurable parameters"}, "is_correct": true, "target_server_name": "Deepseek_R1", "target_tool_name": "deepseek_r1", "target_server_description": "Generate advanced text using the Deepseek R1 model with configurable parameters", "target_tool_description": "Generates advanced text using the Deepseek R1 model with configurable parameters.", "match_result": {"server": "Deepseek_R1", "tool": {"name": "deepseek_r1", "server": "Deepseek_R1", "description": "Generates advanced text using the Deepseek R1 model with configurable parameters.", "parameter": {"prompt": "(string) The input prompt for text generation", "max_tokens": "(number) Maximum tokens to generate", "temperature": "(number) Controls randomness, default is 0.2"}, "task": "Generate a creative story about a futuristic city using 500 tokens, with a randomness setting of 0.5."}, "score": 0.6833043098449707}, "sample_size": 2656, "position_index": 1300, "selection_method": "position_index_1300"}
{"pass_at_k": -1, "elapsed_time": 0.0, "task": {"category": "DevDb", "query": "Open database tables from external sources"}, "is_correct": false, "target_server_name": "DevDb", "target_tool_name": "URI Handler", "target_server_description": "1. Copy MCP settings for IDE and AI-tool integration 2. Open database tables from external applications via URI", "target_tool_description": "Enables opening specific database tables directly from external applications or links.", "match_result": {"server": "Grafana", "tool": {"name": "list_datasources", "server": "Grafana", "description": "List datasources", "parameter": {}, "task": "List all available datasources in the current system."}, "score": 0.7531465291976929}, "sample_size": 2656, "position_index": 1307, "selection_method": "position_index_1307"}
{"pass_at_k": 1, "elapsed_time": 0.0, "task": {"category": "Dicom", "query": "Extract text from PDF in DICOM files"}, "is_correct": true, "target_server_name": "Dicom", "target_tool_name": "extract_pdf_text_from_dicom", "target_server_description": "1.查询患者、研究、系列和实例数据 2.从DICOM实例中提取PDF文本 3.发送DICOM系列或研究到其他节点 4.管理DICOM节点连接和配置 5.获取元数据查询结果的详细级别", "target_tool_description": "Retrieve a specific DICOM instance containing an encapsulated PDF and extract its text content.", "match_result": {"server": "Dicom", "tool": {"name": "extract_pdf_text_from_dicom", "server": "Dicom", "description": "Retrieve a specific DICOM instance containing an encapsulated PDF and extract its text content.", "parameter": {}, "task": "Extract the text content from a DICOM instance that contains an encapsulated PDF file."}, "score": 0.7223751544952393}, "sample_size": 2656, "position_index": 1314, "selection_method": "position_index_1314"}
{"pass_at_k": 1, "elapsed_time": 0.0, "task": {"category": "Dicom", "query": "List available metadata detail levels"}, "is_correct": true, "target_server_name": "Dicom", "target_tool_name": "get_attribute_presets", "target_server_description": "1.查询患者、研究、系列和实例数据 2.从DICOM实例中提取PDF文本 3.发送DICOM系列或研究到其他节点 4.管理DICOM节点连接和配置 5.获取元数据查询结果的详细级别", "target_tool_description": "List the available levels of detail (minimal, standard, extended) for metadata query results.", "match_result": {"server": "Dicom", "tool": {"name": "get_attribute_presets", "server": "Dicom", "description": "List the available levels of detail (minimal, standard, extended) for metadata query results.", "parameter": {}, "task": "List the available levels of detail for metadata query results, specifying whether they are minimal, standard, or extended."}, "score": 0.6840463280677795}, "sample_size": 2656, "position_index": 1320, "selection_method": "position_index_1320"}
{"pass_at_k": 2, "elapsed_time": 0.0, "task": {"category": "Docker", "query": "Recreate a container"}, "is_correct": true, "target_server_name": "Docker", "target_tool_name": "recreate_container", "target_server_description": "Docker容器管理,包括:容器列表、创建、运行、重启、启动、日志获取、停止、删除; Docker镜像管理,包括:镜像列表、拉取、推送、构建、删除; Docker网络管理,包括:网络列表、创建、删除; Docker卷管理,包括:卷列表、创建、删除", "target_tool_description": "Recreates a container.", "match_result": {"server": "Docker", "tool": {"name": "recreate_container", "server": "Docker", "description": "Recreates a container.", "parameter": {}, "task": "Recreate the container with the latest configuration and settings."}, "score": 0.6390430331230164}, "sample_size": 2656, "position_index": 1327, "selection_method": "position_index_1327"}
{"pass_at_k": 2, "elapsed_time": 0.0, "task": {"category": "Docker", "query": "Push Docker images to a registry"}, "is_correct": true, "target_server_name": "Docker", "target_tool_name": "push_image", "target_server_description": "Docker容器管理,包括:容器列表、创建、运行、重启、启动、日志获取、停止、删除; Docker镜像管理,包括:镜像列表、拉取、推送、构建、删除; Docker网络管理,包括:网络列表、创建、删除; Docker卷管理,包括:卷列表、创建、删除", "target_tool_description": "Pushes a Docker image to a registry.", "match_result": {"server": "Docker", "tool": {"name": "push_image", "server": "Docker", "description": "Pushes a Docker image to a registry.", "parameter": {}, "task": "Push the Docker image named 'web-app:latest' to the default Docker registry."}, "score": 0.6624470949172974}, "sample_size": 2656, "position_index": 1334, "selection_method": "position_index_1334"}
{"pass_at_k": 1, "elapsed_time": 0.0, "task": {"category": "Docker", "query": "List all volumes in Docker"}, "is_correct": true, "target_server_name": "Docker", "target_tool_name": "list_volumes", "target_server_description": "Docker容器管理,包括:容器列表、创建、运行、重启、启动、日志获取、停止、删除; Docker镜像管理,包括:镜像列表、拉取、推送、构建、删除; Docker网络管理,包括:网络列表、创建、删除; Docker卷管理,包括:卷列表、创建、删除", "target_tool_description": "Lists all Docker volumes.", "match_result": {"server": "Docker", "tool": {"name": "list_volumes", "server": "Docker", "description": "Lists all Docker volumes.", "parameter": {}, "task": "List all available Docker volumes currently present in the system."}, "score": 0.6400327086448669}, "sample_size": 2656, "position_index": 1340, "selection_method": "position_index_1340"}
{"pass_at_k": 1, "elapsed_time": 0.0, "task": {"category": "DPLP", "query": "Calculate statistics from publication data"}, "is_correct": true, "target_server_name": "DPLP", "target_tool_name": "calculate_statistics", "target_server_description": "DBLP学术出版物检索与导出，包括：布尔查询、模糊标题匹配、作者出版物检索、出版物场地信息获取、统计计算及BibTeX导出", "target_tool_description": "Calculate statistics from a list of publication results.", "match_result": {"server": "DPLP", "tool": {"name": "calculate_statistics", "server": "DPLP", "description": "Calculate statistics from a list of publication results.", "parameter": {"results": "(array, required) An array of publication objects, each with at least 'title', 'authors', 'venue', and 'year'"}, "task": "Calculate the average number of publications per year from the provided list of research papers, ensuring each paper includes 'title', 'authors', 'venue', and 'year' details."}, "score": 0.7337504625320435}, "sample_size": 2656, "position_index": 1347, "selection_method": "position_index_1347"}
{"pass_at_k": 19, "elapsed_time": 0.0, "task": {"category": "ElevenLabs", "query": "Delete a specific job"}, "is_correct": true, "target_server_name": "ElevenLabs", "target_tool_name": "delete_job", "target_server_description": "1.使用默认语音设置从纯文本生成音频 2.从结构化脚本生成多语音和演员的音频 3.按ID删除作业 4.按ID获取音频文件 5.列出所有可用语音 6.获取语音作业历史记录", "target_tool_description": "Delete a job by its ID", "match_result": {"server": "ElevenLabs", "tool": {"name": "delete_job", "server": "ElevenLabs", "description": "Delete a job by its ID", "parameter": {}, "task": "Delete the job with ID 'JOB12345'."}, "score": 0.6484628915786743}, "sample_size": 2656, "position_index": 1354, "selection_method": "position_index_1354"}
{"pass_at_k": 2, "elapsed_time": 0.0, "task": {"category": "Ethereum", "query": "Transfer ERC20 tokens between addresses"}, "is_correct": true, "target_server_name": "EVM MCP Server", "target_tool_name": "transfer-token", "target_server_description": "1.获取ERC20代币元数据 2.检查ERC20代币余额 3.转移ERC20代币 4.批准代币支出 5.获取NFT元数据 6.验证NFT所有权 7.转移NFT 8.计算拥有的NFT数量 9.获取ERC1155元数据 10.检查ERC1155余额 11.转移ERC1155代币 12.获取网络信息 13.获取原生代币余额 14.发送原生代币 15.获取交易详情 16.读取智能合约状态 17.写入智能合约 18.检查地址是否为合约 19.解析ENS名称到地址", "target_tool_description": "Transfer ERC20 tokens", "match_result": {"server": "EVM MCP Server", "tool": {"name": "transfer-token", "server": "EVM MCP Server", "description": "Transfer ERC20 tokens", "parameter": {"privateKey": "(string) The private key of the sender", "tokenAddress": "(address/ENS) The address or ENS name of the token", "toAddress": "(address/ENS) The address or ENS name of the recipient", "amount": "(number) The amount of tokens to transfer", "network": "(string) The network identifier"}, "task": "Transfer 100 USDT tokens from the sender's wallet to the recipient's address on the Ethereum mainnet."}, "score": 0.742184042930603}, "sample_size": 2656, "position_index": 1360, "selection_method": "position_index_1360"}
{"pass_at_k": 2, "elapsed_time": 0.0, "task": {"category": "Ethereum", "query": "Check balance of ERC1155 tokens"}, "is_correct": true, "target_server_name": "EVM MCP Server", "target_tool_name": "get-erc1155-balance", "target_server_description": "1.获取ERC20代币元数据 2.检查ERC20代币余额 3.转移ERC20代币 4.批准代币支出 5.获取NFT元数据 6.验证NFT所有权 7.转移NFT 8.计算拥有的NFT数量 9.获取ERC1155元数据 10.检查ERC1155余额 11.转移ERC1155代币 12.获取网络信息 13.获取原生代币余额 14.发送原生代币 15.获取交易详情 16.读取智能合约状态 17.写入智能合约 18.检查地址是否为合约 19.解析ENS名称到地址", "target_tool_description": "Check ERC1155 balance", "match_result": {"server": "EVM MCP Server", "tool": {"name": "get-erc1155-balance", "server": "EVM MCP Server", "description": "Check ERC1155 balance", "parameter": {"tokenAddress": "(address/ENS) The address or ENS name of the ERC1155 token", "tokenId": "(string) The token ID", "ownerAddress": "(address/ENS) The address or ENS name of the owner", "network": "(string) The network identifier"}, "task": "Check the balance of token ID \"12345\" owned by \"0x123abc\" on the Ethereum mainnet for the ERC1155 token at address \"0x456def\"."}, "score": 0.8032208681106567}, "sample_size": 2656, "position_index": 1367, "selection_method": "position_index_1367"}
{"pass_at_k": 3, "elapsed_time": 0.0, "task": {"category": "EVM", "query": "Read state from a smart contract"}, "is_correct": true, "target_server_name": "EVM MCP Server", "target_tool_name": "read-contract", "target_server_description": "1.获取ERC20代币元数据 2.检查ERC20代币余额 3.转移ERC20代币 4.批准代币支出 5.获取NFT元数据 6.验证NFT所有权 7.转移NFT 8.计算拥有的NFT数量 9.获取ERC1155元数据 10.检查ERC1155余额 11.转移ERC1155代币 12.获取网络信息 13.获取原生代币余额 14.发送原生代币 15.获取交易详情 16.读取智能合约状态 17.写入智能合约 18.检查地址是否为合约 19.解析ENS名称到地址", "target_tool_description": "Read smart contract state", "match_result": {"server": "EVM MCP Server", "tool": {"name": "read-contract", "server": "EVM MCP Server", "description": "Read smart contract state", "parameter": {"contractAddress": "(address/ENS) The address or ENS name of the contract", "abi": "(array) The ABI of the contract", "functionName": "(string) The name of the function to call", "args": "(array) The arguments to pass to the function", "network": "(string) The network identifier"}, "task": "Retrieve the current owner of the smart contract deployed at 0x123... on the Ethereum mainnet using the provided ABI and function call."}, "score": 0.7241339683532715}, "sample_size": 2656, "position_index": 1373, "selection_method": "position_index_1373"}
{"pass_at_k": 1, "elapsed_time": 0.0, "task": {"category": "Fantasy PL", "query": "Retrieve details on upcoming blank gameweeks"}, "is_correct": true, "target_server_name": "Fantasy PL", "target_tool_name": "get_blank_gameweeks", "target_server_description": "Fantasy Premier League (FPL) data analysis and management, including: gameweek status retrieval, player fixture analysis, blank/double gameweek information, player comparison, team viewing, and authentication checks", "target_tool_description": "Get information about upcoming blank gameweeks", "match_result": {"server": "Fantasy PL", "tool": {"name": "get_blank_gameweeks", "server": "Fantasy PL", "description": "Get information about upcoming blank gameweeks", "parameter": {}, "task": "Check the schedule for upcoming blank gameweeks in the current season."}, "score": 0.9702678918838501}, "sample_size": 2656, "position_index": 1380, "selection_method": "position_index_1380"}
{"pass_at_k": 13, "elapsed_time": 0.0, "task": {"category": "Fantasy PL", "query": "View team details by ID"}, "is_correct": true, "target_server_name": "Fantasy PL", "target_tool_name": "get_team", "target_server_description": "Fantasy Premier League (FPL) data analysis and management, including: gameweek status retrieval, player fixture analysis, blank/double gameweek information, player comparison, team viewing, and authentication checks", "target_tool_description": "View any team with a specific ID (requires authentication)", "match_result": {"server": "Fantasy PL", "tool": {"name": "get_team", "server": "Fantasy PL", "description": "View any team with a specific ID (requires authentication)", "parameter": {}, "task": "Retrieve the details of the team with ID \"T12345\" (requires authentication)."}, "score": 0.6584283709526062}, "sample_size": 2656, "position_index": 1387, "selection_method": "position_index_1387"}
{"pass_at_k": 15, "elapsed_time": 0.0, "task": {"category": "Firebase", "query": "Upload files to cloud storage"}, "is_correct": true, "target_server_name": "Firebase", "target_tool_name": "storage_upload", "target_server_description": "1.文件上传与管理，包括从文本、base64内容或本地路径上传文件，以及从外部URL导入文件 2.Firestore文档操作，包括添加、列出、获取、更新、删除文档，以及列出根集合和查询子集合 3.文件系统操作，包括列出目录中的文件和获取文件元数据及URL 4.用户认证，包括通过ID或电子邮件获取用户信息", "target_tool_description": "Upload files from text, base64 content, or local file paths", "match_result": {"server": "Firebase", "tool": {"name": "storage_upload", "server": "Firebase", "description": "Upload files from text, base64 content, or local file paths", "parameter": {"filePath": "(string) The path where the file will be stored in Firebase Storage", "content": "(string) The content of the file to upload, can be a local file path, base64 data URL, or plain text"}, "task": "Upload a text file containing \"Project Report 2024\" to the \"reports\" directory in Firebase Storage."}, "score": 0.6038975119590759}, "sample_size": 2656, "position_index": 1393, "selection_method": "position_index_1393"}
{"pass_at_k": 45, "elapsed_time": 0.0, "task": {"category": "Firebase", "query": "List root collections in Firestore"}, "is_correct": true, "target_server_name": "Firebase", "target_tool_name": "firestore_list_collections", "target_server_description": "1.文件上传与管理，包括从文本、base64内容或本地路径上传文件，以及从外部URL导入文件 2.Firestore文档操作，包括添加、列出、获取、更新、删除文档，以及列出根集合和查询子集合 3.文件系统操作，包括列出目录中的文件和获取文件元数据及URL 4.用户认证，包括通过ID或电子邮件获取用户信息", "target_tool_description": "List root collections", "match_result": {"server": "Firebase", "tool": {"name": "firestore_list_collections", "server": "Firebase", "description": "List root collections", "parameter": {}, "task": "List all root collections in the Firestore database."}, "score": 0.5581955909729004}, "sample_size": 2656, "position_index": 1400, "selection_method": "position_index_1400"}
{"pass_at_k": 3, "elapsed_time": 0.0, "task": {"category": "FireCrawl", "query": "Check the status of a batch operation"}, "is_correct": true, "target_server_name": "FireCrawl", "target_tool_name": "firecrawl_check_batch_status", "target_server_description": "Firecrawl web content scraping and analysis, including: single URL scraping, batch URL scraping with rate limiting, batch operation status checking, web search with content extraction, asynchronous crawling, structured information extraction using LLM, deep web research with LLM analysis, and llms.txt file generation", "target_tool_description": "Check the status of a batch operation.", "match_result": {"server": "FireCrawl", "tool": {"name": "firecrawl_check_batch_status", "server": "FireCrawl", "description": "Check the status of a batch operation.", "parameter": {"id": "(string) The ID of the batch operation to check."}, "task": "Check the status of the batch operation with ID \"BATCH12345\"."}, "score": 0.7432390451431274}, "sample_size": 2656, "position_index": 1407, "selection_method": "position_index_1407"}
{"pass_at_k": 14, "elapsed_time": 0.0, "task": {"category": "Ghost", "query": "List and filter posts"}, "is_correct": true, "target_server_name": "Ghost", "target_tool_name": "Browse Posts", "target_server_description": "1.管理文章、成员、新闻简报、优惠、邀请、角色、标签、层级、用户和Webhooks的增删改查操作", "target_tool_description": "List posts with optional filters, pagination, and ordering.", "match_result": {"server": "Ghost", "tool": {"name": "Browse Posts", "server": "Ghost", "description": "List posts with optional filters, pagination, and ordering.", "parameter": {}, "task": "List the latest 10 posts sorted by creation date in descending order."}, "score": 0.592119574546814}, "sample_size": 2656, "position_index": 1413, "selection_method": "position_index_1413"}
{"pass_at_k": 1, "elapsed_time": 0.0, "task": {"category": "Ghost", "query": "Create a new member"}, "is_correct": true, "target_server_name": "Ghost", "target_tool_name": "Add Member", "target_server_description": "1.管理文章、成员、新闻简报、优惠、邀请、角色、标签、层级、用户和Webhooks的增删改查操作", "target_tool_description": "Create a new member.", "match_result": {"server": "Ghost", "tool": {"name": "Add Member", "server": "Ghost", "description": "Create a new member.", "parameter": {}, "task": "Add a new member to the system with the provided details."}, "score": 0.6901503801345825}, "sample_size": 2656, "position_index": 1420, "selection_method": "position_index_1420"}
{"pass_at_k": 1, "elapsed_time": 0.0, "task": {"category": "Ghost", "query": "Delete a newsletter"}, "is_correct": true, "target_server_name": "Ghost", "target_tool_name": "Delete Newsletter", "target_server_description": "1.管理文章、成员、新闻简报、优惠、邀请、角色、标签、层级、用户和Webhooks的增删改查操作", "target_tool_description": "Remove a newsletter.", "match_result": {"server": "Ghost", "tool": {"name": "Delete Newsletter", "server": "Ghost", "description": "Remove a newsletter.", "parameter": {}, "task": "Delete the latest newsletter from the system."}, "score": 0.7807519435882568}, "sample_size": 2656, "position_index": 1427, "selection_method": "position_index_1427"}
{"pass_at_k": 4, "elapsed_time": 0.0, "task": {"category": "Ghost", "query": "List available invites"}, "is_correct": true, "target_server_name": "Ghost", "target_tool_name": "Browse Invites", "target_server_description": "1.管理文章、成员、新闻简报、优惠、邀请、角色、标签、层级、用户和Webhooks的增删改查操作", "target_tool_description": "List invites.", "match_result": {"server": "Ghost", "tool": {"name": "Browse Invites", "server": "Ghost", "description": "List invites.", "parameter": {}, "task": "List all pending invites in the system."}, "score": 0.7346396446228027}, "sample_size": 2656, "position_index": 1433, "selection_method": "position_index_1433"}
{"pass_at_k": 7, "elapsed_time": 0.0, "task": {"category": "Ghost", "query": "Create a new tag"}, "is_correct": true, "target_server_name": "Ghost", "target_tool_name": "Add Tag", "target_server_description": "1.管理文章、成员、新闻简报、优惠、邀请、角色、标签、层级、用户和Webhooks的增删改查操作", "target_tool_description": "Create a new tag.", "match_result": {"server": "Ghost", "tool": {"name": "Add Tag", "server": "Ghost", "description": "Create a new tag.", "parameter": {}, "task": "Create a new tag labeled \"Important\" for organizing project files."}, "score": 0.6707794666290283}, "sample_size": 2656, "position_index": 1440, "selection_method": "position_index_1440"}
{"pass_at_k": 4, "elapsed_time": 0.0, "task": {"category": "Ghost", "query": "Update membership tier details"}, "is_correct": true, "target_server_name": "Ghost", "target_tool_name": "Edit Tier", "target_server_description": "1.管理文章、成员、新闻简报、优惠、邀请、角色、标签、层级、用户和Webhooks的增删改查操作", "target_tool_description": "Update tier details.", "match_result": {"server": "Ghost", "tool": {"name": "Edit Tier", "server": "Ghost", "description": "Update tier details.", "parameter": {}, "task": "Update the tier details for the premium membership level to include additional benefits and adjust the pricing structure."}, "score": 0.6956220865249634}, "sample_size": 2656, "position_index": 1446, "selection_method": "position_index_1446"}
{"pass_at_k": 1, "elapsed_time": 0.0, "task": {"category": "Ghost", "query": "Create a new webhook"}, "is_correct": true, "target_server_name": "Ghost", "target_tool_name": "Add Webhook", "target_server_description": "1.管理文章、成员、新闻简报、优惠、邀请、角色、标签、层级、用户和Webhooks的增删改查操作", "target_tool_description": "Create a new webhook.", "match_result": {"server": "Ghost", "tool": {"name": "Add Webhook", "server": "Ghost", "description": "Create a new webhook.", "parameter": {}, "task": "Set up a new webhook to receive real-time notifications for repository events."}, "score": 0.6918562650680542}, "sample_size": 2656, "position_index": 1453, "selection_method": "position_index_1453"}
{"pass_at_k": 1, "elapsed_time": 0.0, "task": {"category": "Git", "query": "Add files to the staging area"}, "is_correct": true, "target_server_name": "Git", "target_tool_name": "git_add", "target_server_description": "Git版本控制操作,包括:状态查看、差异比较、提交记录、分支管理、仓库初始化、推送至远程仓库", "target_tool_description": "Adds file contents to the staging area", "match_result": {"server": "Git", "tool": {"name": "git_add", "server": "Git", "description": "Adds file contents to the staging area", "parameter": {}, "task": "Add all modified files in the current directory to the staging area for the next commit."}, "score": 0.9741721153259277}, "sample_size": 2656, "position_index": 1460, "selection_method": "position_index_1460"}
{"pass_at_k": 1, "elapsed_time": 0.0, "task": {"category": "Git", "query": "Initialize a new repository"}, "is_correct": true, "target_server_name": "Git", "target_tool_name": "git_init", "target_server_description": "Git版本控制操作,包括:状态查看、差异比较、提交记录、分支管理、仓库初始化、推送至远程仓库", "target_tool_description": "Initialize a new Git repository", "match_result": {"server": "Git", "tool": {"name": "git_init", "server": "Git", "description": "Initialize a new Git repository", "parameter": {}, "task": "Initialize a new Git repository in the current project directory."}, "score": 0.878532886505127}, "sample_size": 2656, "position_index": 1466, "selection_method": "position_index_1466"}
{"pass_at_k": 1, "elapsed_time": 0.0, "task": {"category": "Github Actions", "query": "Retrieve details of a workflow run"}, "is_correct": true, "target_server_name": "Github Actions", "target_tool_name": "get_workflow_run", "target_server_description": "GitHub workflows management, including: listing workflows, getting workflow details and usage statistics, listing and managing workflow runs, triggering, canceling, and re-running workflows", "target_tool_description": "Get details of a specific workflow run", "match_result": {"server": "Github Actions", "tool": {"name": "get_workflow_run", "server": "Github Actions", "description": "Get details of a specific workflow run", "parameter": {"owner": "(string) Repository owner (username or organization)", "repo": "(string) Repository name", "runId": "(number) The ID of the workflow run"}, "task": "Retrieve the details of workflow run with ID 12345 from the repository named \"example-repo\" owned by the organization \"github-org\"."}, "score": 0.9927117228507996}, "sample_size": 2656, "position_index": 1473, "selection_method": "position_index_1473"}
{"pass_at_k": -1, "elapsed_time": 0.0, "task": {"category": "Gmail", "query": "Send an email with recipients, subject, and body"}, "is_correct": false, "target_server_name": "Gmail", "target_tool_name": "send_email", "target_server_description": "Gmail邮件管理，包括：发送邮件、草稿创建、邮件内容检索、邮件搜索、标签管理（创建/更新/删除）、批量邮件操作（标签修改/删除）", "target_tool_description": "Sends a new email immediately.", "match_result": {"server": "Everything", "tool": {"name": "echo", "server": "Everything", "description": "Simple tool to echo back input messages", "parameter": {"message": "(string) Message to echo back"}, "task": "Echo back the message \"Hello, how are you today?\" exactly as provided."}, "score": 0.6461995840072632}, "sample_size": 2656, "position_index": 1480, "selection_method": "position_index_1480"}
{"pass_at_k": 3, "elapsed_time": 0.0, "task": {"category": "Gmail", "query": "Retrieve all email labels"}, "is_correct": true, "target_server_name": "Gmail", "target_tool_name": "list_email_labels", "target_server_description": "Gmail邮件管理，包括：发送邮件、草稿创建、邮件内容检索、邮件搜索、标签管理（创建/更新/删除）、批量邮件操作（标签修改/删除）", "target_tool_description": "Retrieves all available Gmail labels.", "match_result": {"server": "Gmail", "tool": {"name": "list_email_labels", "server": "Gmail", "description": "Retrieves all available Gmail labels.", "parameter": {}, "task": "List all available labels in the connected Gmail account."}, "score": 0.67486172914505}, "sample_size": 2656, "position_index": 1486, "selection_method": "position_index_1486"}
{"pass_at_k": 15, "elapsed_time": 0.0, "task": {"category": "Gmail", "query": "Refresh access token for Gmail API"}, "is_correct": true, "target_server_name": "Gmail Headless", "target_tool_name": "gmail_refresh_token", "target_server_description": "Gmail邮件操作,包括:刷新访问令牌、获取最近邮件、获取完整邮件内容、发送邮件", "target_tool_description": "Refreshes the access token using the refresh token, client ID, and client secret.", "match_result": {"server": "Gmail Headless", "tool": {"name": "gmail_refresh_token", "server": "Gmail Headless", "description": "Refreshes the access token using the refresh token, client ID, and client secret.", "parameter": {"google_refresh_token": "(string) The refresh token used to obtain a new access token.", "google_client_id": "(string) The client ID obtained from Google API credentials.", "google_client_secret": "(string) The client secret obtained from Google API credentials."}, "task": "Generate a new access token using the provided refresh token, client ID, and client secret for Gmail API authentication."}, "score": 0.5097122192382812}, "sample_size": 2656, "position_index": 1493, "selection_method": "position_index_1493"}
{"pass_at_k": 37, "elapsed_time": 0.0, "task": {"category": "Starknet", "query": "Swap tokens on blockchain"}, "is_correct": true, "target_server_name": "GOAT", "target_tool_name": "Swap tokens on Starknet", "target_server_description": "1. Token swapping and liquidity provision on various platforms (0x, Starknet, Balancer, Balmy, Jupiter, KIM, Uniswap) 2. Wallet and token management (1inch, Crossmint, DeBridge, ERC20/ERC721, SPL, Starknet tokens) 3. NFT operations (Crossmint, Magic Eden, OpenSea, Solana NFTs) 4. Financial services (Hedgey rewards, Ionic borrowing/lending, Lulo USDC deposits, Polymarket betting, Pump.fun token launches) 5. Data and insights (Allora price predictions, BirdEye/BMX token insights, CoinGecko/Coinmarketcap coin info, Dexscreener token info, Nansen info, Synth Subnet price data) 6. Blockchain interactions (Cosmos tokens, Irys datachain, JSON RPC, SNS, Zilliqa) 7. Governance and proposals (Mode governance, voting, token spraying) 8. Casino games (BetSwirl) 9. Physical asset purchases (Worldstore) 10. Address management (ENS resolution, ZeroDev global address)", "target_tool_description": "Enables token swapping on the Starknet network.", "match_result": {"server": "GOAT", "tool": {"name": "Swap tokens on Starknet", "server": "GOAT", "description": "Enables token swapping on the Starknet network.", "parameter": {}, "task": "Swap 100 USDC for ETH on the Starknet network."}, "score": 0.5300915241241455}, "sample_size": 2656, "position_index": 1500, "selection_method": "position_index_1500"}
{"pass_at_k": 40, "elapsed_time": 0.0, "task": {"category": "CoinGecko", "query": "Retrieve cryptocurrency information"}, "is_correct": true, "target_server_name": "GOAT", "target_tool_name": "Get coin information using CoinGecko API", "target_server_description": "1. Token swapping and liquidity provision on various platforms (0x, Starknet, Balancer, Balmy, Jupiter, KIM, Uniswap) 2. Wallet and token management (1inch, Crossmint, DeBridge, ERC20/ERC721, SPL, Starknet tokens) 3. NFT operations (Crossmint, Magic Eden, OpenSea, Solana NFTs) 4. Financial services (Hedgey rewards, Ionic borrowing/lending, Lulo USDC deposits, Polymarket betting, Pump.fun token launches) 5. Data and insights (Allora price predictions, BirdEye/BMX token insights, CoinGecko/Coinmarketcap coin info, Dexscreener token info, Nansen info, Synth Subnet price data) 6. Blockchain interactions (Cosmos tokens, Irys datachain, JSON RPC, SNS, Zilliqa) 7. Governance and proposals (Mode governance, voting, token spraying) 8. Casino games (BetSwirl) 9. Physical asset purchases (Worldstore) 10. Address management (ENS resolution, ZeroDev global address)", "target_tool_description": "Retrieves coin information using the CoinGecko API.", "match_result": {"server": "GOAT", "tool": {"name": "Get coin information using CoinGecko API", "server": "GOAT", "description": "Retrieves coin information using the CoinGecko API.", "parameter": {}, "task": "Retrieve the latest market data for Bitcoin using the CoinGecko API."}, "score": 0.5759143829345703}, "sample_size": 2656, "position_index": 1506, "selection_method": "position_index_1506"}
{"pass_at_k": -1, "elapsed_time": 0.0, "task": {"category": "GOAT", "query": "Enable real-time data streaming"}, "is_correct": false, "target_server_name": "GOAT", "target_tool_name": "Push based real time data streams", "target_server_description": "1. Token swapping and liquidity provision on various platforms (0x, Starknet, Balancer, Balmy, Jupiter, KIM, Uniswap) 2. Wallet and token management (1inch, Crossmint, DeBridge, ERC20/ERC721, SPL, Starknet tokens) 3. NFT operations (Crossmint, Magic Eden, OpenSea, Solana NFTs) 4. Financial services (Hedgey rewards, Ionic borrowing/lending, Lulo USDC deposits, Polymarket betting, Pump.fun token launches) 5. Data and insights (Allora price predictions, BirdEye/BMX token insights, CoinGecko/Coinmarketcap coin info, Dexscreener token info, Nansen info, Synth Subnet price data) 6. Blockchain interactions (Cosmos tokens, Irys datachain, JSON RPC, SNS, Zilliqa) 7. Governance and proposals (Mode governance, voting, token spraying) 8. Casino games (BetSwirl) 9. Physical asset purchases (Worldstore) 10. Address management (ENS resolution, ZeroDev global address)", "target_tool_description": "Enables push-based real-time data streams.", "match_result": {"server": "Grafana", "tool": {"name": "query_loki_stats", "server": "Grafana", "description": "Get statistics about log streams", "parameter": {}, "task": "Retrieve the latest statistics for all active log streams in the Loki logging system."}, "score": 0.6663615703582764}, "sample_size": 2656, "position_index": 1513, "selection_method": "position_index_1513"}
{"pass_at_k": 1, "elapsed_time": 0.0, "task": {"category": "Farcaster", "query": "Interact with Farcaster platform"}, "is_correct": true, "target_server_name": "GOAT", "target_tool_name": "Read and post casts on Farcaster", "target_server_description": "1. Token swapping and liquidity provision on various platforms (0x, Starknet, Balancer, Balmy, Jupiter, KIM, Uniswap) 2. Wallet and token management (1inch, Crossmint, DeBridge, ERC20/ERC721, SPL, Starknet tokens) 3. NFT operations (Crossmint, Magic Eden, OpenSea, Solana NFTs) 4. Financial services (Hedgey rewards, Ionic borrowing/lending, Lulo USDC deposits, Polymarket betting, Pump.fun token launches) 5. Data and insights (Allora price predictions, BirdEye/BMX token insights, CoinGecko/Coinmarketcap coin info, Dexscreener token info, Nansen info, Synth Subnet price data) 6. Blockchain interactions (Cosmos tokens, Irys datachain, JSON RPC, SNS, Zilliqa) 7. Governance and proposals (Mode governance, voting, token spraying) 8. Casino games (BetSwirl) 9. Physical asset purchases (Worldstore) 10. Address management (ENS resolution, ZeroDev global address)", "target_tool_description": "Enables reading and posting casts on the Farcaster platform.", "match_result": {"server": "GOAT", "tool": {"name": "Read and post casts on Farcaster", "server": "GOAT", "description": "Enables reading and posting casts on the Farcaster platform.", "parameter": {}, "task": "Read the latest 10 casts from the Farcaster platform and post a new cast with the content \"Excited to join the Farcaster community!\"."}, "score": 0.7337368726730347}, "sample_size": 2656, "position_index": 1519, "selection_method": "position_index_1519"}
{"pass_at_k": 9, "elapsed_time": 0.0, "task": {"category": "KIM", "query": "Swap tokens on a decentralized platform"}, "is_correct": true, "target_server_name": "GOAT", "target_tool_name": "Swap tokens on KIM", "target_server_description": "1. Token swapping and liquidity provision on various platforms (0x, Starknet, Balancer, Balmy, Jupiter, KIM, Uniswap) 2. Wallet and token management (1inch, Crossmint, DeBridge, ERC20/ERC721, SPL, Starknet tokens) 3. NFT operations (Crossmint, Magic Eden, OpenSea, Solana NFTs) 4. Financial services (Hedgey rewards, Ionic borrowing/lending, Lulo USDC deposits, Polymarket betting, Pump.fun token launches) 5. Data and insights (Allora price predictions, BirdEye/BMX token insights, CoinGecko/Coinmarketcap coin info, Dexscreener token info, Nansen info, Synth Subnet price data) 6. Blockchain interactions (Cosmos tokens, Irys datachain, JSON RPC, SNS, Zilliqa) 7. Governance and proposals (Mode governance, voting, token spraying) 8. Casino games (BetSwirl) 9. Physical asset purchases (Worldstore) 10. Address management (ENS resolution, ZeroDev global address)", "target_tool_description": "Allows token swapping on the KIM platform.", "match_result": {"server": "GOAT", "tool": {"name": "Swap tokens on KIM", "server": "GOAT", "description": "Allows token swapping on the KIM platform.", "parameter": {}, "task": "Swap 100 KIM tokens for the equivalent amount of ETH on the KIM platform."}, "score": 0.6107392311096191}, "sample_size": 2656, "position_index": 1526, "selection_method": "position_index_1526"}
{"pass_at_k": -1, "elapsed_time": 0.0, "task": {"category": "Nansen", "query": "Retrieve information via API"}, "is_correct": false, "target_server_name": "GOAT", "target_tool_name": "Get Nansen information using Nansen API", "target_server_description": "1. Token swapping and liquidity provision on various platforms (0x, Starknet, Balancer, Balmy, Jupiter, KIM, Uniswap) 2. Wallet and token management (1inch, Crossmint, DeBridge, ERC20/ERC721, SPL, Starknet tokens) 3. NFT operations (Crossmint, Magic Eden, OpenSea, Solana NFTs) 4. Financial services (Hedgey rewards, Ionic borrowing/lending, Lulo USDC deposits, Polymarket betting, Pump.fun token launches) 5. Data and insights (Allora price predictions, BirdEye/BMX token insights, CoinGecko/Coinmarketcap coin info, Dexscreener token info, Nansen info, Synth Subnet price data) 6. Blockchain interactions (Cosmos tokens, Irys datachain, JSON RPC, SNS, Zilliqa) 7. Governance and proposals (Mode governance, voting, token spraying) 8. Casino games (BetSwirl) 9. Physical asset purchases (Worldstore) 10. Address management (ENS resolution, ZeroDev global address)", "target_tool_description": "Retrieves information using the Nansen API.", "match_result": {"server": "CoinMarketCap", "tool": {"name": "getPostmanCollection", "server": "CoinMarketCap", "description": "Get Postman collection for the API", "parameter": {}, "task": "Retrieve the Postman collection containing all available API endpoints and their configurations."}, "score": 0.7477350234985352}, "sample_size": 2656, "position_index": 1533, "selection_method": "position_index_1533"}
{"pass_at_k": -1, "elapsed_time": 0.0, "task": {"category": "Renzo", "query": "Create positions on a platform"}, "is_correct": false, "target_server_name": "GOAT", "target_tool_name": "Create a position on Renzo", "target_server_description": "1. Token swapping and liquidity provision on various platforms (0x, Starknet, Balancer, Balmy, Jupiter, KIM, Uniswap) 2. Wallet and token management (1inch, Crossmint, DeBridge, ERC20/ERC721, SPL, Starknet tokens) 3. NFT operations (Crossmint, Magic Eden, OpenSea, Solana NFTs) 4. Financial services (Hedgey rewards, Ionic borrowing/lending, Lulo USDC deposits, Polymarket betting, Pump.fun token launches) 5. Data and insights (Allora price predictions, BirdEye/BMX token insights, CoinGecko/Coinmarketcap coin info, Dexscreener token info, Nansen info, Synth Subnet price data) 6. Blockchain interactions (Cosmos tokens, Irys datachain, JSON RPC, SNS, Zilliqa) 7. Governance and proposals (Mode governance, voting, token spraying) 8. Casino games (BetSwirl) 9. Physical asset purchases (Worldstore) 10. Address management (ENS resolution, ZeroDev global address)", "target_tool_description": "Enables the creation of positions on Renzo.", "match_result": {"server": "Contentful-mcp", "tool": {"name": "create_environment", "server": "Contentful-mcp", "description": "Create new environment", "parameter": {}, "task": "Create a new development environment with default configurations."}, "score": 0.665164589881897}, "sample_size": 2656, "position_index": 1539, "selection_method": "position_index_1539"}
{"pass_at_k": -1, "elapsed_time": 0.0, "task": {"category": "Superfluid", "query": "Create streams"}, "is_correct": false, "target_server_name": "GOAT", "target_tool_name": "Create streams with Superfluid", "target_server_description": "1. Token swapping and liquidity provision on various platforms (0x, Starknet, Balancer, Balmy, Jupiter, KIM, Uniswap) 2. Wallet and token management (1inch, Crossmint, DeBridge, ERC20/ERC721, SPL, Starknet tokens) 3. NFT operations (Crossmint, Magic Eden, OpenSea, Solana NFTs) 4. Financial services (Hedgey rewards, Ionic borrowing/lending, Lulo USDC deposits, Polymarket betting, Pump.fun token launches) 5. Data and insights (Allora price predictions, BirdEye/BMX token insights, CoinGecko/Coinmarketcap coin info, Dexscreener token info, Nansen info, Synth Subnet price data) 6. Blockchain interactions (Cosmos tokens, Irys datachain, JSON RPC, SNS, Zilliqa) 7. Governance and proposals (Mode governance, voting, token spraying) 8. Casino games (BetSwirl) 9. Physical asset purchases (Worldstore) 10. Address management (ENS resolution, ZeroDev global address)", "target_tool_description": "Facilitates the creation of streams using Superfluid.", "match_result": {"server": "Bitrise", "tool": {"name": "rebuild_pipeline", "server": "Bitrise", "description": "Rebuild a pipeline", "parameter": {"app_slug": "(string) Identifier of the Bitrise app", "pipeline_id": "(string) Identifier of the pipeline"}, "task": "Rebuild the Bitrise pipeline with the identifier \"pipeline123\" for the application identified by \"app456\"."}, "score": 0.6648603081703186}, "sample_size": 2656, "position_index": 1546, "selection_method": "position_index_1546"}
{"pass_at_k": -1, "elapsed_time": 0.0, "task": {"category": "Zilliqa", "query": "Interact with blockchain network"}, "is_correct": false, "target_server_name": "GOAT", "target_tool_name": "Interact with Zilliqa", "target_server_description": "1. Token swapping and liquidity provision on various platforms (0x, Starknet, Balancer, Balmy, Jupiter, KIM, Uniswap) 2. Wallet and token management (1inch, Crossmint, DeBridge, ERC20/ERC721, SPL, Starknet tokens) 3. NFT operations (Crossmint, Magic Eden, OpenSea, Solana NFTs) 4. Financial services (Hedgey rewards, Ionic borrowing/lending, Lulo USDC deposits, Polymarket betting, Pump.fun token launches) 5. Data and insights (Allora price predictions, BirdEye/BMX token insights, CoinGecko/Coinmarketcap coin info, Dexscreener token info, Nansen info, Synth Subnet price data) 6. Blockchain interactions (Cosmos tokens, Irys datachain, JSON RPC, SNS, Zilliqa) 7. Governance and proposals (Mode governance, voting, token spraying) 8. Casino games (BetSwirl) 9. Physical asset purchases (Worldstore) 10. Address management (ENS resolution, ZeroDev global address)", "target_tool_description": "Enables interaction with the Zilliqa network.", "match_result": {"server": "EVM MCP Server", "tool": {"name": "get-chain-info", "server": "EVM MCP Server", "description": "Get network information", "parameter": {"network": "(string) The network identifier"}, "task": "Retrieve the current network information for the blockchain identified as \"Ethereum Mainnet\"."}, "score": 0.6588936448097229}, "sample_size": 2656, "position_index": 1553, "selection_method": "position_index_1553"}
{"pass_at_k": 1, "elapsed_time": 0.0, "task": {"category": "Godot", "query": "Find projects in a directory"}, "is_correct": true, "target_server_name": "Godot", "target_tool_name": "list_projects", "target_server_description": "Godot游戏引擎操作,包括:项目编辑与执行、调试输出获取、版本查询、项目管理、场景创建与节点操作、资源加载与导出、UID管理", "target_tool_description": "Find Godot projects in a specified directory", "match_result": {"server": "Godot", "tool": {"name": "list_projects", "server": "Godot", "description": "Find Godot projects in a specified directory", "parameter": {}, "task": "List all Godot project files located in the \"Documents/GameDev\" directory."}, "score": 0.9089370965957642}, "sample_size": 2656, "position_index": 1559, "selection_method": "position_index_1559"}
{"pass_at_k": 1, "elapsed_time": 0.0, "task": {"category": "Godot", "query": "Retrieve UID for files in Godot engine"}, "is_correct": true, "target_server_name": "Godot", "target_tool_name": "get_uid", "target_server_description": "Godot游戏引擎操作,包括:项目编辑与执行、调试输出获取、版本查询、项目管理、场景创建与节点操作、资源加载与导出、UID管理", "target_tool_description": "Get UID for specific files (for Godot 4.4+)", "match_result": {"server": "Godot", "tool": {"name": "get_uid", "server": "Godot", "description": "Get UID for specific files (for Godot 4.4+)", "parameter": {}, "task": "Get the UID for all files in the current Godot 4.4+ project directory."}, "score": 0.8059352040290833}, "sample_size": 2656, "position_index": 1566, "selection_method": "position_index_1566"}
{"pass_at_k": 1, "elapsed_time": 0.0, "task": {"category": "Golang", "query": "Move or rename files and directories"}, "is_correct": true, "target_server_name": "Golang Filesystem Server", "target_tool_name": "move_file", "target_server_description": "File system operations including: reading single/multiple files, writing files, creating directories, listing directory contents, moving/renaming files, searching files/directories, retrieving file metadata, displaying directory structure, and listing accessible directories", "target_tool_description": "Move or rename files and directories", "match_result": {"server": "Golang Filesystem Server", "tool": {"name": "move_file", "server": "Golang Filesystem Server", "description": "Move or rename files and directories", "parameter": {"source": "(string) Source path", "destination": "(string) Destination path"}, "task": "Move the file located at \"/documents/report.txt\" to the \"/archive/2024/reports/\" directory."}, "score": 1.000000238418579}, "sample_size": 2656, "position_index": 1573, "selection_method": "position_index_1573"}
{"pass_at_k": 2, "elapsed_time": 0.0, "task": {"category": "Google Calendar", "query": "List events within a time range"}, "is_correct": true, "target_server_name": "Google Calendar", "target_tool_name": "list_events", "target_server_description": "Calendar event operations, including: listing events, creating events, updating events, deleting events, and finding free time slots", "target_tool_description": "List calendar events within a specified time range", "match_result": {"server": "Google Calendar", "tool": {"name": "list_events", "server": "Google Calendar", "description": "List calendar events within a specified time range", "parameter": {}, "task": "List all calendar events scheduled between 2024-01-01 and 2024-12-31."}, "score": 0.9355341792106628}, "sample_size": 2656, "position_index": 1579, "selection_method": "position_index_1579"}
{"pass_at_k": 1, "elapsed_time": 0.0, "task": {"category": "Google Sheets", "query": "List available spreadsheets"}, "is_correct": true, "target_server_name": "Google Sheets", "target_tool_name": "list_spreadsheets", "target_server_description": "Google Sheets operations, including: listing spreadsheets, creating spreadsheets, reading/writing data, batch updates, adding rows, managing sheets, fetching multi-sheet data, sharing spreadsheets, and retrieving metadata", "target_tool_description": "Lists spreadsheets in the configured Drive folder (Service Account) or accessible by the user (OAuth).", "match_result": {"server": "Google Sheets", "tool": {"name": "list_spreadsheets", "server": "Google Sheets", "description": "Lists spreadsheets in the configured Drive folder (Service Account) or accessible by the user (OAuth).", "parameter": {}, "task": "List all spreadsheets available in the configured Drive folder or accessible by the current user."}, "score": 0.7700036764144897}, "sample_size": 2656, "position_index": 1586, "selection_method": "position_index_1586"}
{"pass_at_k": 2, "elapsed_time": 0.0, "task": {"category": "Google Sheets", "query": "Add a new sheet to a spreadsheet"}, "is_correct": true, "target_server_name": "Google Sheets", "target_tool_name": "create_sheet", "target_server_description": "Google Sheets operations, including: listing spreadsheets, creating spreadsheets, reading/writing data, batch updates, adding rows, managing sheets, fetching multi-sheet data, sharing spreadsheets, and retrieving metadata", "target_tool_description": "Adds a new sheet (tab) to a spreadsheet.", "match_result": {"server": "Google Sheets", "tool": {"name": "create_sheet", "server": "Google Sheets", "description": "Adds a new sheet (tab) to a spreadsheet.", "parameter": {"spreadsheet_id": "(string)", "title": "(string) Name for the new sheet."}, "task": "Add a new sheet named \"Q2 Financials\" to the specified spreadsheet."}, "score": 0.6869037747383118}, "sample_size": 2656, "position_index": 1593, "selection_method": "position_index_1593"}
{"pass_at_k": 26, "elapsed_time": 0.0, "task": {"category": "Google Tasks", "query": "List all tasks"}, "is_correct": true, "target_server_name": "Google Tasks", "target_tool_name": "list", "target_server_description": "Google Tasks operations, including: search, list, create, update, delete, and clear completed tasks", "target_tool_description": "List all tasks in Google Tasks", "match_result": {"server": "Google Tasks", "tool": {"name": "list", "server": "Google Tasks", "description": "List all tasks in Google Tasks", "parameter": {"cursor": "(Optional, string): Cursor for pagination"}, "task": "List all tasks in the connected Google Tasks account, starting from the specified cursor for pagination."}, "score": 0.6639502048492432}, "sample_size": 2656, "position_index": 1599, "selection_method": "position_index_1599"}
{"pass_at_k": 32, "elapsed_time": 0.0, "task": {"category": "GraphQL", "query": "Retrieve detailed definition of a query field"}, "is_correct": true, "target_server_name": "GraphQL Schema", "target_tool_name": "get-query-field", "target_server_description": "GraphQL schema exploration and documentation, including: listing query/mutation/subscription fields, getting field definitions in SDL format, listing schema types, getting type definitions, and searching schema by name pattern", "target_tool_description": "Gets detailed definition for a specific query field in SDL format", "match_result": {"server": "GraphQL Schema", "tool": {"name": "get-query-field", "server": "GraphQL Schema", "description": "Gets detailed definition for a specific query field in SDL format", "parameter": {}, "task": "Retrieve the detailed SDL definition for the specified query field."}, "score": 0.5608353614807129}, "sample_size": 2656, "position_index": 1606, "selection_method": "position_index_1606"}
{"pass_at_k": -1, "elapsed_time": 0.0, "task": {"category": "GraphQL", "query": "Retrieve detailed type definitions"}, "is_correct": false, "target_server_name": "GraphQL Schema", "target_tool_name": "get-type", "target_server_description": "GraphQL schema exploration and documentation, including: listing query/mutation/subscription fields, getting field definitions in SDL format, listing schema types, getting type definitions, and searching schema by name pattern", "target_tool_description": "Gets detailed definition for a specific GraphQL type in SDL format", "match_result": {"server": "Contentful-mcp", "tool": {"name": "get_content_type", "server": "Contentful-mcp", "description": "Get content type details", "parameter": {}, "task": "Retrieve the content type details of the specified resource."}, "score": 0.6896528005599976}, "sample_size": 2656, "position_index": 1612, "selection_method": "position_index_1612"}
{"pass_at_k": 1, "elapsed_time": 0.0, "task": {"category": "LinkedIn", "query": "Retrieve user reactions from LinkedIn"}, "is_correct": true, "target_server_name": "HDW LinkedIn", "target_tool_name": "get_linkedin_user_reactions", "target_server_description": "LinkedIn用户和公司信息检索与管理，包括：用户搜索、个人资料获取、电子邮件查找、帖子检索、反应获取、聊天消息管理、连接邀请发送、帖子评论、连接列表获取、公司搜索和员工检索", "target_tool_description": "Retrieve reactions for a LinkedIn user by URN.", "match_result": {"server": "HDW LinkedIn", "tool": {"name": "get_linkedin_user_reactions", "server": "HDW LinkedIn", "description": "Retrieve reactions for a LinkedIn user by URN.", "parameter": {"urn": "(required)", "count": "(optional, default: 10)", "timeout": "(optional, default: 300)"}, "task": "Retrieve the latest 15 reactions for the LinkedIn user with the specified URN, using a timeout of 200 seconds."}, "score": 0.637019693851471}, "sample_size": 2656, "position_index": 1619, "selection_method": "position_index_1619"}
{"pass_at_k": 2, "elapsed_time": 0.0, "task": {"category": "LinkedIn", "query": "Retrieve comments from a LinkedIn post"}, "is_correct": true, "target_server_name": "HDW LinkedIn", "target_tool_name": "get_linkedin_post_comments", "target_server_description": "LinkedIn用户和公司信息检索与管理，包括：用户搜索、个人资料获取、电子邮件查找、帖子检索、反应获取、聊天消息管理、连接邀请发送、帖子评论、连接列表获取、公司搜索和员工检索", "target_tool_description": "Retrieve comments for a LinkedIn post.", "match_result": {"server": "HDW LinkedIn", "tool": {"name": "get_linkedin_post_comments", "server": "HDW LinkedIn", "description": "Retrieve comments for a LinkedIn post.", "parameter": {"urn": "(required)", "sort": "(optional, default: relevance; allowed values: relevance, recent)", "count": "(optional, default: 10)", "timeout": "(optional, default: 300)"}, "task": "Retrieve the 15 most recent comments for a specified LinkedIn post, sorted by relevance."}, "score": 0.7590199112892151}, "sample_size": 2656, "position_index": 1626, "selection_method": "position_index_1626"}
{"pass_at_k": 13, "elapsed_time": 0.0, "task": {"category": "CoinGecko", "query": "Retrieve trending cryptocurrencies"}, "is_correct": true, "target_server_name": "Heurist Mesh Agent", "target_tool_name": "get_trending_coins", "target_server_description": "1. Search for token information and market data using CoinGecko ID 2. Get trading pair info and basic token info from DexScreener 3. Search and analyze Twitter accounts and mentions 4. Perform web search and answer operations using Exa's API 5. Fetch security details of blockchain token contracts", "target_tool_description": "Get the current top trending cryptocurrencies on CoinGecko", "match_result": {"server": "Heurist Mesh Agent", "tool": {"name": "get_trending_coins", "server": "Heurist Mesh Agent", "description": "Get the current top trending cryptocurrencies on CoinGecko", "parameter": {}, "task": "Retrieve the top 5 trending cryptocurrencies by market interest from CoinGecko."}, "score": 0.6869890689849854}, "sample_size": 2656, "position_index": 1632, "selection_method": "position_index_1632"}
{"pass_at_k": 39, "elapsed_time": 0.0, "task": {"category": "Twitter", "query": "Search for mentions of specific topics or keywords"}, "is_correct": true, "target_server_name": "Heurist Mesh Agent", "target_tool_name": "search_mentions", "target_server_description": "1. Search for token information and market data using CoinGecko ID 2. Get trading pair info and basic token info from DexScreener 3. Search and analyze Twitter accounts and mentions 4. Perform web search and answer operations using Exa's API 5. Fetch security details of blockchain token contracts", "target_tool_description": "Search for mentions of specific tokens or topics on Twitter", "match_result": {"server": "Heurist Mesh Agent", "tool": {"name": "search_mentions", "server": "Heurist Mesh Agent", "description": "Search for mentions of specific tokens or topics on Twitter", "parameter": {"keywords": "(array) List of keywords to search for", "days_ago": "(integer) Number of days to look back", "limit": "(integer) Maximum number of results (minimum: 20)"}, "task": "Search for recent mentions of \"climate change\" and \"renewable energy\" on Twitter from the past 7 days, retrieving a maximum of 50 results."}, "score": 0.5694011449813843}, "sample_size": 2656, "position_index": 1639, "selection_method": "position_index_1639"}
{"pass_at_k": 1, "elapsed_time": 0.0, "task": {"category": "Holaspirit", "query": "List all tasks in an organization"}, "is_correct": true, "target_server_name": "Holaspirit", "target_tool_name": "holaspirit_list_tasks", "target_server_description": "Holaspirit组织管理工具集，包括：任务列表、指标列表、圈子列表与详情、角色列表与详情、域列表、政策列表、会议列表与详情、成员动态获取、会议紧张关系获取、成员搜索", "target_tool_description": "List all tasks in the organization", "match_result": {"server": "Holaspirit", "tool": {"name": "holaspirit_list_tasks", "server": "Holaspirit", "description": "List all tasks in the organization", "parameter": {}, "task": "List all tasks currently assigned within the organization."}, "score": 0.9766885042190552}, "sample_size": 2656, "position_index": 1646, "selection_method": "position_index_1646"}
{"pass_at_k": 1, "elapsed_time": 0.0, "task": {"category": "Holaspirit", "query": "List all domains in an organization"}, "is_correct": true, "target_server_name": "Holaspirit", "target_tool_name": "holaspirit_list_domains", "target_server_description": "Holaspirit组织管理工具集，包括：任务列表、指标列表、圈子列表与详情、角色列表与详情、域列表、政策列表、会议列表与详情、成员动态获取、会议紧张关系获取、成员搜索", "target_tool_description": "List all domains in the organization", "match_result": {"server": "Holaspirit", "tool": {"name": "holaspirit_list_domains", "server": "Holaspirit", "description": "List all domains in the organization", "parameter": {}, "task": "List all organizational domains currently defined in the system."}, "score": 0.9707485437393188}, "sample_size": 2656, "position_index": 1652, "selection_method": "position_index_1652"}
{"pass_at_k": 30, "elapsed_time": 0.0, "task": {"category": "Home Assistant", "query": "Control smart home devices"}, "is_correct": true, "target_server_name": "Home Assistant", "target_tool_name": "control", "target_server_description": "1.控制Home Assistant设备 2.管理Home Assistant插件 3.管理HACS包 4.管理Home Assistant自动化配置 5.执行指定动作 6.批量执行动作", "target_tool_description": "Controls Home Assistant devices with various commands.", "match_result": {"server": "Home Assistant", "tool": {"name": "control", "server": "Home Assistant", "description": "Controls Home Assistant devices with various commands.", "parameter": {"command": "(string) The command to execute (e.g., 'turn_on', 'turn_off', 'toggle')", "entity_id": "(string) The ID of the entity to control", "brightness": "(Optional, number) Brightness level for lights", "color_temp": "(Optional, number) Color temperature for lights", "rgb_color": "(Optional, array) RGB color for lights"}, "task": "Turn on the living room light and set its brightness to 75% using Home Assistant."}, "score": 0.5524619221687317}, "sample_size": 2656, "position_index": 1659, "selection_method": "position_index_1659"}
{"pass_at_k": 1, "elapsed_time": 0.0, "task": {"category": "HubSpot", "query": "Create new companies with duplicate prevention"}, "is_correct": true, "target_server_name": "HubSpot", "target_tool_name": "hubspot_create_company", "target_server_description": "HubSpot CRM operations, including: contact/company creation with duplicate prevention, retrieving company/contact activity, fetching recent conversations, and semantic search across HubSpot data", "target_tool_description": "Create companies with duplicate prevention", "match_result": {"server": "HubSpot", "tool": {"name": "hubspot_create_company", "server": "HubSpot", "description": "Create companies with duplicate prevention", "parameter": {}, "task": "Create a new company record in HubSpot, ensuring no duplicates exist in the system."}, "score": 0.9564549922943115}, "sample_size": 2656, "position_index": 1666, "selection_method": "position_index_1666"}
{"pass_at_k": 7, "elapsed_time": 0.0, "task": {"category": "HuggingFace", "query": "Identify objects or people in an image"}, "is_correct": true, "target_server_name": "HuggingFace Spaces", "target_tool_name": "use paligemma", "target_server_description": "1.使用merve/paligemma2-vqav2空间查询图像中的对象或人物 2.使用microsoft/OmniParser空间分析图像并生成带注释的图像 3.使用shuttleai/shuttle-jaguar空间生成图像 4.使用black-forest-labs/FLUX.1-schnell空间生成图像 5.使用hf-audio/whisper-large-v3-turbo空间转录音频 6.使用Qwen/Qwen2.5-72B-Instruct空间提供聊天功能 7.使用DawnC/PawMatchAI空间执行视觉任务", "target_tool_description": "Queries an image using the `merve/paligemma2-vqav2` space to identify objects or people in the image.", "match_result": {"server": "HuggingFace Spaces", "tool": {"name": "use paligemma", "server": "HuggingFace Spaces", "description": "Queries an image using the `merve/paligemma2-vqav2` space to identify objects or people in the image.", "parameter": {"filename": "(string) The filename of the image in the working directory.", "url": "(Optional, string) A URL to an image."}, "task": "Identify the objects or people present in the provided image file located in the working directory."}, "score": 0.583253026008606}, "sample_size": 2656, "position_index": 1672, "selection_method": "position_index_1672"}
{"pass_at_k": 39, "elapsed_time": 0.0, "task": {"category": "Hyperliquid", "query": "Retrieve mid prices for all coins"}, "is_correct": true, "target_server_name": "Hyperliquid", "target_tool_name": "get_all_mids", "target_server_description": "1. Retrieve mid prices for all coins on Hyperliquid 2. Get historical candlestick data for any token 3. Access the L2 order book for any token", "target_tool_description": "Retrieve mid prices for all coins on Hyperliquid", "match_result": {"server": "Hyperliquid", "tool": {"name": "get_all_mids", "server": "Hyperliquid", "description": "Retrieve mid prices for all coins on Hyperliquid", "parameter": {}, "task": "Retrieve the current mid prices for all available cryptocurrencies on the Hyperliquid exchange."}, "score": 0.563649594783783}, "sample_size": 2656, "position_index": 1679, "selection_method": "position_index_1679"}
{"pass_at_k": 1, "elapsed_time": 0.0, "task": {"category": "InfluxDB", "query": "Create a new storage bucket"}, "is_correct": true, "target_server_name": "InfluxDB", "target_tool_name": "create-bucket", "target_server_description": "1. Write time-series data in line protocol format 2. Execute Flux queries 3. Create a new bucket 4. Create a new organization", "target_tool_description": "Create a new bucket", "match_result": {"server": "InfluxDB", "tool": {"name": "create-bucket", "server": "InfluxDB", "description": "Create a new bucket", "parameter": {"name": "(string) The name of the new bucket", "orgID": "(string) The ID of the organization", "retentionPeriodSeconds": "(Optional, number) The retention period in seconds"}, "task": "Create a new storage bucket named \"project-backups\" for organization ID \"org-12345\" with a retention period of 30 days."}, "score": 0.9311647415161133}, "sample_size": 2656, "position_index": 1685, "selection_method": "position_index_1685"}
{"pass_at_k": 4, "elapsed_time": 0.0, "task": {"category": "Intercom", "query": "Retrieve conversations within a date range"}, "is_correct": true, "target_server_name": "Intercom", "target_tool_name": "list_conversations", "target_server_description": "1. Retrieve conversations within a date range with content filtering 2. Find conversations for a specific customer 3. Retrieve tickets by status 4. Find tickets associated with a specific customer", "target_tool_description": "Retrieves all conversations within a date range with content filtering.", "match_result": {"server": "Intercom", "tool": {"name": "list_conversations", "server": "Intercom", "description": "Retrieves all conversations within a date range with content filtering.", "parameter": {"startDate": "(DD/MM/YYYY) Start date (required)", "endDate": "(DD/MM/YYYY) End date (required)", "keyword": "(string) Filter to include conversations with this text", "exclude": "(string) Filter to exclude conversations with this text"}, "task": "Retrieve all conversations between 01/01/2024 and 31/01/2024 that include the keyword \"urgent\" but exclude any containing the word \"meeting\"."}, "score": 0.6568447351455688}, "sample_size": 2656, "position_index": 1692, "selection_method": "position_index_1692"}
{"pass_at_k": 1, "elapsed_time": 0.0, "task": {"category": "iTerm", "query": "Send control character to terminal"}, "is_correct": true, "target_server_name": "iTerm MCP", "target_tool_name": "send_control_character", "target_server_description": "1.在iTerm终端中写入命令并返回输出行数 2.从iTerm终端读取指定行数的输出 3.向iTerm终端发送控制字符", "target_tool_description": "Sends a control character to the active iTerm terminal.", "match_result": {"server": "iTerm MCP", "tool": {"name": "send_control_character", "server": "iTerm MCP", "description": "Sends a control character to the active iTerm terminal.", "parameter": {}, "task": "Send a control character to the currently active terminal session in iTerm."}, "score": 0.643660843372345}, "sample_size": 2656, "position_index": 1699, "selection_method": "position_index_1699"}
{"pass_at_k": 32, "elapsed_time": 0.0, "task": {"category": "JDBC", "query": "Manage Docker/Podman/OCI compatible containers"}, "is_correct": true, "target_server_name": "JDBC", "target_tool_name": "containers", "target_server_description": "1.通过JDBC URL存储和检索数据库数据 2.检查运行中的JVM进程 3.从文件系统提供文件服务 4.使用JavaFX创建绘图画布 5.与Kubernetes集群交互 6.使用Docker/Podman/OCI兼容容器引擎 7.通过Wolfram Alpha LLM API进行优化的网络搜索", "target_tool_description": "A server for working with Docker/Podman/OCI compatible container engines.", "match_result": {"server": "JDBC", "tool": {"name": "containers", "server": "JDBC", "description": "A server for working with Docker/Podman/OCI compatible container engines.", "parameter": {}, "task": "Run a containerized application using a compatible container engine."}, "score": 0.52948397397995}, "sample_size": 2656, "position_index": 1705, "selection_method": "position_index_1705"}
{"pass_at_k": 12, "elapsed_time": 0.0, "task": {"category": "Keycloak", "query": "Remove a user from a realm"}, "is_correct": true, "target_server_name": "Keycloak MCP", "target_tool_name": "delete-user", "target_server_description": "1.在指定领域创建新用户 2.从指定领域删除用户 3.列出所有可用领域 4.列出指定领域的所有用户", "target_tool_description": "Deletes a user from a specified realm.", "match_result": {"server": "Keycloak MCP", "tool": {"name": "delete-user", "server": "Keycloak MCP", "description": "Deletes a user from a specified realm.", "parameter": {"realm": "(string) The realm name", "userId": "(string) The ID of the user to delete"}, "task": "Delete the user with ID 'abc123' from the 'customer_support' realm."}, "score": 0.5825141668319702}, "sample_size": 2656, "position_index": 1712, "selection_method": "position_index_1712"}
{"pass_at_k": 7, "elapsed_time": 0.0, "task": {"category": "Kong Konnect", "query": "Retrieve list of consumers for a control plane"}, "is_correct": true, "target_server_name": "Kong Konnect", "target_tool_name": "List Consumers", "target_server_description": "Kong API Gateway operations, including: querying API requests, analyzing consumer requests, listing services/routes/consumers/plugins/control planes, and checking control plane group memberships", "target_tool_description": "List all consumers associated with a control plane.", "match_result": {"server": "Kong Konnect", "tool": {"name": "List Consumers", "server": "Kong Konnect", "description": "List all consumers associated with a control plane.", "parameter": {"controlPlaneId": "(string) ID of the control plane", "size": "(number) Number of consumers to return", "offset": "(string) Pagination offset token"}, "task": "List the first 50 consumers associated with the control plane with ID \"CP-12345\"."}, "score": 0.6213504076004028}, "sample_size": 2656, "position_index": 1719, "selection_method": "position_index_1719"}
{"pass_at_k": 1, "elapsed_time": 0.0, "task": {"category": "Kubernetes", "query": "Retrieve Kubernetes configuration in YAML format"}, "is_correct": true, "target_server_name": "Kubernetes and OpenShift", "target_tool_name": "configuration_view", "target_server_description": "Kubernetes集群管理，包括：配置查看、事件列表、命名空间管理、Pod操作（创建/删除/执行命令/获取日志）、资源管理（创建/更新/删除/获取/列表）", "target_tool_description": "Get the current Kubernetes configuration content as a kubeconfig YAML", "match_result": {"server": "Kubernetes and OpenShift", "tool": {"name": "configuration_view", "server": "Kubernetes and OpenShift", "description": "Get the current Kubernetes configuration content as a kubeconfig YAML", "parameter": {"minified": "(Optional, boolean) Return a minified version of the configuration. Default is true."}, "task": "Retrieve the current Kubernetes configuration in YAML format, ensuring the output is minified."}, "score": 0.7025470733642578}, "sample_size": 2656, "position_index": 1725, "selection_method": "position_index_1725"}
{"pass_at_k": 6, "elapsed_time": 0.0, "task": {"category": "Kubernetes", "query": "List pods in a specific namespace"}, "is_correct": true, "target_server_name": "Kubernetes and OpenShift", "target_tool_name": "pods_list_in_namespace", "target_server_description": "Kubernetes集群管理，包括：配置查看、事件列表、命名空间管理、Pod操作（创建/删除/执行命令/获取日志）、资源管理（创建/更新/删除/获取/列表）", "target_tool_description": "List all the Kubernetes pods in the specified namespace in the current cluster", "match_result": {"server": "Kubernetes and OpenShift", "tool": {"name": "pods_list_in_namespace", "server": "Kubernetes and OpenShift", "description": "List all the Kubernetes pods in the specified namespace in the current cluster", "parameter": {"namespace": "(Required, string) Namespace to list pods from"}, "task": "List all the Kubernetes pods in the \"production\" namespace of the current cluster."}, "score": 0.6982414722442627}, "sample_size": 2656, "position_index": 1732, "selection_method": "position_index_1732"}
{"pass_at_k": 1, "elapsed_time": 0.0, "task": {"category": "Kubernetes", "query": "List resources and objects in a cluster"}, "is_correct": true, "target_server_name": "Kubernetes and OpenShift", "target_tool_name": "resources_list", "target_server_description": "Kubernetes集群管理，包括：配置查看、事件列表、命名空间管理、Pod操作（创建/删除/执行命令/获取日志）、资源管理（创建/更新/删除/获取/列表）", "target_tool_description": "List Kubernetes resources and objects in the current cluster", "match_result": {"server": "Kubernetes and OpenShift", "tool": {"name": "resources_list", "server": "Kubernetes and OpenShift", "description": "List Kubernetes resources and objects in the current cluster", "parameter": {"apiVersion": "(Required, string) apiVersion of the resources (e.g., v1, apps/v1, networking.k8s.io/v1)", "kind": "(Required, string) kind of the resources (e.g., Pod, Service, Deployment, Ingress)", "namespace": "(Optional, string) Namespace to retrieve the namespaced resources from. Ignored for cluster-scoped resources. Lists resources from all namespaces if not provided."}, "task": "List all Deployment resources with apiVersion 'apps/v1' across all namespaces in the current Kubernetes cluster."}, "score": 0.8911467790603638}, "sample_size": 2656, "position_index": 1739, "selection_method": "position_index_1739"}
{"pass_at_k": 1, "elapsed_time": 0.0, "task": {"category": "Lightdash", "query": "List all dashboards in a project"}, "is_correct": true, "target_server_name": "Lightdash", "target_tool_name": "list_dashboards", "target_server_description": "Lightdash organization operations, including: listing projects, getting project details, listing spaces, listing charts, listing dashboards, getting custom metrics, getting catalog, getting metrics catalog, getting charts as code, and getting dashboards as code", "target_tool_description": "List all dashboards in a project", "match_result": {"server": "Lightdash", "tool": {"name": "list_dashboards", "server": "Lightdash", "description": "List all dashboards in a project", "parameter": {}, "task": "List all dashboards available in the current project."}, "score": 0.9999991655349731}, "sample_size": 2656, "position_index": 1745, "selection_method": "position_index_1745"}
{"pass_at_k": -1, "elapsed_time": 0.0, "task": {"category": "lsp-mcp", "query": "Get code completion suggestions for a file"}, "is_correct": false, "target_server_name": "lsp-mcp", "target_tool_name": "get_completions", "target_server_description": "Language Server Protocol (LSP) operations, including: hover information retrieval, code completion suggestions, code actions, document opening/closing, diagnostics retrieval, LSP server start/restart, and log level configuration", "target_tool_description": "Gets completion suggestions at a specific location in a file.", "match_result": {"server": "Logfire", "tool": {"name": "find_exceptions_in_file", "server": "Logfire", "description": "Get detailed trace information about exceptions in a specific file", "parameter": {"filepath": "(string) Path to the file to analyze", "age": "(int) Number of minutes to look back (max 7 days)"}, "task": "Retrieve detailed trace information for exceptions found in the file located at \"/var/log/app/error.log\" within the last 60 minutes."}, "score": 0.7590172290802002}, "sample_size": 2656, "position_index": 1752, "selection_method": "position_index_1752"}
{"pass_at_k": -1, "elapsed_time": 0.0, "task": {"category": "LSP", "query": "Restart LSP server process"}, "is_correct": false, "target_server_name": "lsp-mcp", "target_tool_name": "restart_lsp_server", "target_server_description": "Language Server Protocol (LSP) operations, including: hover information retrieval, code completion suggestions, code actions, document opening/closing, diagnostics retrieval, LSP server start/restart, and log level configuration", "target_tool_description": "Restarts the LSP server process without restarting the MCP server. This is useful for recovering from LSP server issues or for applying changes to the LSP server configuration.", "match_result": {"server": "Meilisearch", "tool": {"name": "update-connection-settings", "server": "Meilisearch", "description": "Update URL and/or API key to connect to a different instance", "parameter": {"url": "(string) New Meilisearch instance URL", "api_key": "(string) New Meilisearch API key"}, "task": "Update the connection settings to a new Meilisearch instance with the URL \"https://search.example.com\" and the API key \"abc123xyz\"."}, "score": 0.6444814801216125}, "sample_size": 2656, "position_index": 1758, "selection_method": "position_index_1758"}
{"pass_at_k": -1, "elapsed_time": 0.0, "task": {"category": "Linear", "query": "Create a new issue with details"}, "is_correct": false, "target_server_name": "Linear (Go)", "target_tool_name": "linear_create_issue", "target_server_description": "Linear issue management, including: issue creation, update, search, retrieval by user/ID, comment addition, and team retrieval", "target_tool_description": "Creates a new Linear issue with specified details. Supports creating sub-issues and assigning labels.", "match_result": {"server": "Gitee", "tool": {"name": "create_issue", "server": "Gitee", "description": "Create an issue", "parameter": {}, "task": "Create a new issue in the project management system with the title \"Update Documentation\" and the description \"Review and update all API documentation to reflect recent changes.\""}, "score": 0.721200704574585}, "sample_size": 2656, "position_index": 1765, "selection_method": "position_index_1765"}
{"pass_at_k": 1, "elapsed_time": 0.0, "task": {"category": "LLM", "query": "Initialize project settings"}, "is_correct": true, "target_server_name": "llm-context", "target_tool_name": "lc-init", "target_server_description": "1. Initialize project configuration 2. Switch rules 3. Select files for inclusion and outline generation 4. Generate and copy context 5. Generate project instructions for LLMs 6. Process LLM file requests 7. List modified files 8. Generate outlines for code files 9. Extract code implementations requested by LLMs", "target_tool_description": "Initialize project configuration", "match_result": {"server": "llm-context", "tool": {"name": "lc-init", "server": "llm-context", "description": "Initialize project configuration", "parameter": {}, "task": "Initialize the project configuration for a new development environment."}, "score": 0.8712704181671143}, "sample_size": 2656, "position_index": 1772, "selection_method": "position_index_1772"}
{"pass_at_k": 8, "elapsed_time": 0.0, "task": {"category": "LLM", "query": "Handle file processing requests for LLM"}, "is_correct": true, "target_server_name": "llm-context", "target_tool_name": "lc-clip-files", "target_server_description": "1. Initialize project configuration 2. Switch rules 3. Select files for inclusion and outline generation 4. Generate and copy context 5. Generate project instructions for LLMs 6. Process LLM file requests 7. List modified files 8. Generate outlines for code files 9. Extract code implementations requested by LLMs", "target_tool_description": "Process LLM file requests", "match_result": {"server": "llm-context", "tool": {"name": "lc-clip-files", "server": "llm-context", "description": "Process LLM file requests", "parameter": {}, "task": "Process a batch of files requested by a large language model for further analysis."}, "score": 0.6105742454528809}, "sample_size": 2656, "position_index": 1778, "selection_method": "position_index_1778"}
{"pass_at_k": 14, "elapsed_time": 0.0, "task": {"category": "Lucene", "query": "Delete documents from index"}, "is_correct": true, "target_server_name": "lucene-mcp-server", "target_tool_name": "POST /mcp/v1/delete", "target_server_description": "1.查询服务器状态 2.在Lucene索引中插入或更新文档 3.查询Lucene索引 4.从Lucene索引中删除文档 5.列出Lucene索引中的文档", "target_tool_description": "Deletes documents from the Lucene index.", "match_result": {"server": "lucene-mcp-server", "tool": {"name": "POST /mcp/v1/delete", "server": "lucene-mcp-server", "description": "Deletes documents from the Lucene index.", "parameter": {"ids": "(array) An array of document IDs to delete."}, "task": "Delete the documents with IDs [\"doc123\", \"doc456\", \"doc789\"] from the Lucene index."}, "score": 0.6365163326263428}, "sample_size": 2656, "position_index": 1785, "selection_method": "position_index_1785"}
{"pass_at_k": 1, "elapsed_time": 0.0, "task": {"category": "MCP", "query": "Retrieve list of server tools"}, "is_correct": true, "target_server_name": "MCP Create", "target_tool_name": "get-server-tools", "target_server_description": "1.从模板创建MCP服务器 2.在服务器上执行工具 3.获取服务器工具列表 4.删除服务器 5.获取运行中的服务器列表", "target_tool_description": "Get list of server tools", "match_result": {"server": "MCP Create", "tool": {"name": "get-server-tools", "server": "MCP Create", "description": "Get list of server tools", "parameter": {"serverId": "(string) The ID of the server"}, "task": "Retrieve the list of tools installed on the server with ID \"SRV-12345\"."}, "score": 0.98974609375}, "sample_size": 2656, "position_index": 1792, "selection_method": "position_index_1792"}
{"pass_at_k": 8, "elapsed_time": 0.0, "task": {"category": "Kubernetes", "query": "List available nodes in a Kubernetes cluster"}, "is_correct": true, "target_server_name": "mcp-k8s-go", "target_tool_name": "List Kubernetes nodes", "target_server_description": "Kubernetes资源管理，包括：上下文列表、命名空间列表、资源检索（如pods/services/deployments）、节点列表、事件获取、pod日志检索及pod内命令执行", "target_tool_description": "Lists available Kubernetes nodes.", "match_result": {"server": "mcp-k8s-go", "tool": {"name": "List Kubernetes nodes", "server": "mcp-k8s-go", "description": "Lists available Kubernetes nodes.", "parameter": {}, "task": "List all available nodes in the Kubernetes cluster."}, "score": 0.6629180312156677}, "sample_size": 2656, "position_index": 1798, "selection_method": "position_index_1798"}
{"pass_at_k": 2, "elapsed_time": 0.0, "task": {"category": "mcp-proxy", "query": "Proxy server for connecting SSE to local stdio server"}, "is_correct": true, "target_server_name": "mcp-proxy", "target_tool_name": "SSE to stdio", "target_server_description": "1.运行代理服务器从stdio连接到远程SSE服务器 2.运行代理服务器暴露SSE服务器连接到本地stdio服务器", "target_tool_description": "Runs a proxy server exposing a SSE server that connects to a local stdio server, allowing remote connections to the local stdio server.", "match_result": {"server": "mcp-proxy", "tool": {"name": "SSE to stdio", "server": "mcp-proxy", "description": "Runs a proxy server exposing a SSE server that connects to a local stdio server, allowing remote connections to the local stdio server.", "parameter": {"command_or_url": "(string) The command to spawn the MCP stdio server", "--sse-port": "(Optional, int) The SSE server port to listen on", "--sse-host": "(Optional, string) The host IP address that the SSE server will listen on", "--env": "(Optional, string) Additional environment variables to pass to the MCP stdio server", "--pass-environment": "(Optional, flag) Pass through all environment variables when spawning the server", "--allow-origin": "(Optional, string) Allowed origins for the SSE server"}, "task": "Run a proxy server to expose a local stdio server via SSE, listening on port 8080 and allowing connections from any origin."}, "score": 0.6788583397865295}, "sample_size": 2656, "position_index": 1805, "selection_method": "position_index_1805"}
{"pass_at_k": 7, "elapsed_time": 0.0, "task": {"category": "Membase", "query": "Retrieve recent messages from conversation"}, "is_correct": true, "target_server_name": "Membase", "target_tool_name": "get_messages", "target_server_description": "1.获取当前会话ID 2.切换到不同会话 3.保存消息到当前会话 4.获取当前会话的最后n条消息", "target_tool_description": "Get the last n messages from the current conversation.", "match_result": {"server": "Membase", "tool": {"name": "get_messages", "server": "Membase", "description": "Get the last n messages from the current conversation.", "parameter": {}, "task": "Retrieve the last 5 messages from the ongoing conversation."}, "score": 0.6046544313430786}, "sample_size": 2656, "position_index": 1812, "selection_method": "position_index_1812"}
{"pass_at_k": 8, "elapsed_time": 0.0, "task": {"category": "Markdownify", "query": "Convert audio files to Markdown format"}, "is_correct": true, "target_server_name": "Markdownify", "target_tool_name": "audio-to-markdown", "target_server_description": "Convert various file types (YouTube videos, PDF, Bing search results, web pages, images, audio, DOCX, XLSX, PPTX) to Markdown format and retrieve existing Markdown files", "target_tool_description": "Convert audio files to Markdown with transcription", "match_result": {"server": "Markdownify", "tool": {"name": "audio-to-markdown", "server": "Markdownify", "description": "Convert audio files to Markdown with transcription", "parameter": {}, "task": "Transcribe the provided audio recording into a formatted Markdown document."}, "score": 0.6871944069862366}, "sample_size": 2656, "position_index": 1818, "selection_method": "position_index_1818"}
{"pass_at_k": 9, "elapsed_time": 0.0, "task": {"category": "MongoDB", "query": "Analyze and optimize live queries"}, "is_correct": true, "target_server_name": "MongoDB Lens", "target_tool_name": "analyze-query-patterns", "target_server_description": "MongoDB数据库操作,包括:连接管理、数据聚合、查询优化、模式分析、批量操作、缓存清理、文档计数、集合/数据库/索引/用户创建与删除、查询执行计划分析、数据导出、地理空间查询、统计获取、GridFS文件管理、文档插入/更新/删除、实时变更监控等", "target_tool_description": "Analyze live queries and suggest optimizations", "match_result": {"server": "MongoDB Lens", "tool": {"name": "analyze-query-patterns", "server": "MongoDB Lens", "description": "Analyze live queries and suggest optimizations", "parameter": {}, "task": "Analyze the current live database queries and provide optimization recommendations."}, "score": 0.5888883471488953}, "sample_size": 2656, "position_index": 1825, "selection_method": "position_index_1825"}
{"pass_at_k": 26, "elapsed_time": 0.0, "task": {"category": "MongoDB", "query": "Connect to a MongoDB database"}, "is_correct": true, "target_server_name": "MongoDB Lens", "target_tool_name": "connect-mongodb", "target_server_description": "MongoDB数据库操作,包括:连接管理、数据聚合、查询优化、模式分析、批量操作、缓存清理、文档计数、集合/数据库/索引/用户创建与删除、查询执行计划分析、数据导出、地理空间查询、统计获取、GridFS文件管理、文档插入/更新/删除、实时变更监控等", "target_tool_description": "Connect to a different MongoDB URI", "match_result": {"server": "MongoDB Lens", "tool": {"name": "connect-mongodb", "server": "MongoDB Lens", "description": "Connect to a different MongoDB URI", "parameter": {}, "task": "Connect to a MongoDB database using a new URI provided by the user."}, "score": 0.7354214787483215}, "sample_size": 2656, "position_index": 1831, "selection_method": "position_index_1831"}
{"pass_at_k": 1, "elapsed_time": 0.0, "task": {"category": "MongoDB", "query": "Create new database users with roles"}, "is_correct": true, "target_server_name": "MongoDB Lens", "target_tool_name": "create-user", "target_server_description": "MongoDB数据库操作,包括:连接管理、数据聚合、查询优化、模式分析、批量操作、缓存清理、文档计数、集合/数据库/索引/用户创建与删除、查询执行计划分析、数据导出、地理空间查询、统计获取、GridFS文件管理、文档插入/更新/删除、实时变更监控等", "target_tool_description": "Create new database users with specific roles", "match_result": {"server": "MongoDB Lens", "tool": {"name": "create-user", "server": "MongoDB Lens", "description": "Create new database users with specific roles", "parameter": {}, "task": "Create a new database user with read-only access permissions."}, "score": 0.9695639610290527}, "sample_size": 2656, "position_index": 1838, "selection_method": "position_index_1838"}
{"pass_at_k": 8, "elapsed_time": 0.0, "task": {"category": "MongoDB", "query": "Remove database users"}, "is_correct": true, "target_server_name": "MongoDB Lens", "target_tool_name": "drop-user", "target_server_description": "MongoDB数据库操作,包括:连接管理、数据聚合、查询优化、模式分析、批量操作、缓存清理、文档计数、集合/数据库/索引/用户创建与删除、查询执行计划分析、数据导出、地理空间查询、统计获取、GridFS文件管理、文档插入/更新/删除、实时变更监控等", "target_tool_description": "Remove database users (requires confirmation)", "match_result": {"server": "MongoDB Lens", "tool": {"name": "drop-user", "server": "MongoDB Lens", "description": "Remove database users (requires confirmation)", "parameter": {}, "task": "Remove the specified database user after confirming the action."}, "score": 0.6735801696777344}, "sample_size": 2656, "position_index": 1845, "selection_method": "position_index_1845"}
{"pass_at_k": 21, "elapsed_time": 0.0, "task": {"category": "MongoDB", "query": "Retrieve statistics for database or collection"}, "is_correct": true, "target_server_name": "MongoDB Lens", "target_tool_name": "get-stats", "target_server_description": "MongoDB数据库操作,包括:连接管理、数据聚合、查询优化、模式分析、批量操作、缓存清理、文档计数、集合/数据库/索引/用户创建与删除、查询执行计划分析、数据导出、地理空间查询、统计获取、GridFS文件管理、文档插入/更新/删除、实时变更监控等", "target_tool_description": "Retrieve database or collection statistics", "match_result": {"server": "MongoDB Lens", "tool": {"name": "get-stats", "server": "MongoDB Lens", "description": "Retrieve database or collection statistics", "parameter": {}, "task": "Retrieve the statistics for the current MongoDB database."}, "score": 0.7550743818283081}, "sample_size": 2656, "position_index": 1851, "selection_method": "position_index_1851"}
{"pass_at_k": 2, "elapsed_time": 0.0, "task": {"category": "MongoDB", "query": "View sharding configuration"}, "is_correct": true, "target_server_name": "MongoDB Lens", "target_tool_name": "shard-status", "target_server_description": "MongoDB数据库操作,包括:连接管理、数据聚合、查询优化、模式分析、批量操作、缓存清理、文档计数、集合/数据库/索引/用户创建与删除、查询执行计划分析、数据导出、地理空间查询、统计获取、GridFS文件管理、文档插入/更新/删除、实时变更监控等", "target_tool_description": "View sharding configuration for databases and collections", "match_result": {"server": "MongoDB Lens", "tool": {"name": "shard-status", "server": "MongoDB Lens", "description": "View sharding configuration for databases and collections", "parameter": {}, "task": "Check the sharding configuration status for all databases and collections in the current MongoDB deployment."}, "score": 0.7366912364959717}, "sample_size": 2656, "position_index": 1858, "selection_method": "position_index_1858"}
{"pass_at_k": 1, "elapsed_time": 0.0, "task": {"category": "Monday.com", "query": "Create new items in a board"}, "is_correct": true, "target_server_name": "Monday.com", "target_tool_name": "monday-create-item", "target_server_description": "Monday.com平台操作，包括：创建/删除/归档项目、创建/移动项目到组、获取板组/项目/子项目列表、创建/获取文档内容、添加文档块、创建/获取更新评论", "target_tool_description": "Creates a new item or sub-item in a Monday.com board", "match_result": {"server": "Monday.com", "tool": {"name": "monday-create-item", "server": "Monday.com", "description": "Creates a new item or sub-item in a Monday.com board", "parameter": {}, "task": "Create a new task in the designated Monday.com board for the upcoming marketing campaign."}, "score": 0.8909829258918762}, "sample_size": 2656, "position_index": 1865, "selection_method": "position_index_1865"}
{"pass_at_k": 1, "elapsed_time": 0.0, "task": {"category": "Monday.com", "query": "Create a new board"}, "is_correct": true, "target_server_name": "Monday.com", "target_tool_name": "monday-create-board", "target_server_description": "Monday.com平台操作，包括：创建/删除/归档项目、创建/移动项目到组、获取板组/项目/子项目列表、创建/获取文档内容、添加文档块、创建/获取更新评论", "target_tool_description": "Creates a new Monday.com board", "match_result": {"server": "Monday.com", "tool": {"name": "monday-create-board", "server": "Monday.com", "description": "Creates a new Monday.com board", "parameter": {}, "task": "Create a new project management board for tracking quarterly goals."}, "score": 0.8092581033706665}, "sample_size": 2656, "position_index": 1871, "selection_method": "position_index_1871"}
{"pass_at_k": 9, "elapsed_time": 0.0, "task": {"category": "Monday.com", "query": "Retrieve document content"}, "is_correct": true, "target_server_name": "Monday.com", "target_tool_name": "monday-get-doc-content", "target_server_description": "Monday.com平台操作，包括：创建/删除/归档项目、创建/移动项目到组、获取板组/项目/子项目列表、创建/获取文档内容、添加文档块、创建/获取更新评论", "target_tool_description": "Retrieves the content of a specific document", "match_result": {"server": "Monday.com", "tool": {"name": "monday-get-doc-content", "server": "Monday.com", "description": "Retrieves the content of a specific document", "parameter": {}, "task": "Retrieve the content of the latest document uploaded to the workspace."}, "score": 0.7153449058532715}, "sample_size": 2656, "position_index": 1878, "selection_method": "position_index_1878"}
{"pass_at_k": 1, "elapsed_time": 0.0, "task": {"category": "n8n", "query": "Trigger workflows via webhook"}, "is_correct": true, "target_server_name": "n8n", "target_tool_name": "run_webhook", "target_server_description": "1.通过webhook触发工作流 2.工作流管理（创建、更新、删除、激活/停用） 3.工作流执行管理（执行、获取详情、列表查询、停止）", "target_tool_description": "Triggers a workflow via a webhook, passing the workflow name and optional data.", "match_result": {"server": "n8n", "tool": {"name": "run_webhook", "server": "n8n", "description": "Triggers a workflow via a webhook, passing the workflow name and optional data.", "parameter": {"workflowName": "(string) The name of the workflow to trigger", "data": "(Optional, object) Additional data to pass to the webhook"}, "task": "Trigger the \"order_processing\" workflow via webhook, including the order details as additional data."}, "score": 0.7056355476379395}, "sample_size": 2656, "position_index": 1885, "selection_method": "position_index_1885"}
{"pass_at_k": 9, "elapsed_time": 0.0, "task": {"category": "n8n", "query": "Activate a workflow"}, "is_correct": true, "target_server_name": "n8n", "target_tool_name": "workflow_activate", "target_server_description": "1.通过webhook触发工作流 2.工作流管理（创建、更新、删除、激活/停用） 3.工作流执行管理（执行、获取详情、列表查询、停止）", "target_tool_description": "Activates a workflow.", "match_result": {"server": "n8n", "tool": {"name": "workflow_activate", "server": "n8n", "description": "Activates a workflow.", "parameter": {"id": "(string) The ID of the workflow to activate"}, "task": "Activate the workflow with ID \"WF-2024-001\" to start its execution."}, "score": 0.6673831939697266}, "sample_size": 2656, "position_index": 1891, "selection_method": "position_index_1891"}
{"pass_at_k": 1, "elapsed_time": 0.0, "task": {"category": "National Parks", "query": "Retrieve detailed information about a national park"}, "is_correct": true, "target_server_name": "National Parks", "target_tool_name": "getParkDetails", "target_server_description": "1. Search for national parks based on various criteria 2. Get comprehensive information about a specific national park 3. Get current alerts for national parks including closures, hazards, and important information 4. Get information about visitor centers and their operating hours 5. Get information about available campgrounds and their amenities 6. Find upcoming events at parks", "target_tool_description": "Get comprehensive information about a specific national park", "match_result": {"server": "National Parks", "tool": {"name": "getParkDetails", "server": "National Parks", "description": "Get comprehensive information about a specific national park", "parameter": {"parkCode": "(string) The park code of the national park (e.g., 'yose' for Yosemite, 'grca' for Grand Canyon)"}, "task": "Retrieve detailed information about the national park with the park code 'yose'."}, "score": 0.9900049567222595}, "sample_size": 2656, "position_index": 1898, "selection_method": "position_index_1898"}
{"pass_at_k": -1, "elapsed_time": 0.0, "task": {"category": "NS Travel Information", "query": "Find optimal travel routes with real-time updates"}, "is_correct": false, "target_server_name": "NS Travel Information", "target_tool_name": "Journey Planning", "target_server_description": "1.提供实时列车信息，包括出发和到达时间、站台号、延误和旅行笔记 2.规划最优旅行路线，包括换乘和实时更新 3.检查服务中断、维护工作和工程活动 4.获取单程和往返旅程的准确票价，包括旅行等级和团体票价 5.访问全面的车站信息，如设施、无障碍功能、站台布局、OV-fiets可用性和位置详情", "target_tool_description": "Finds optimal travel routes with transfers and real-time updates.", "match_result": {"server": "Travel Planner", "tool": {"name": "calculateRoute", "server": "Travel Planner", "description": "Calculate route between two locations", "parameter": {"origin": "(string) Starting location", "destination": "(string) Ending location", "mode": "(optional) Travel mode (driving, walking, bicycling, transit)"}, "task": "Calculate the fastest driving route from New York City to Boston."}, "score": 0.6610979437828064}, "sample_size": 2656, "position_index": 1904, "selection_method": "position_index_1904"}
{"pass_at_k": 8, "elapsed_time": 0.0, "task": {"category": "Neovim", "query": "Edit lines in VIM editor"}, "is_correct": true, "target_server_name": "Neovim", "target_tool_name": "vim_edit", "target_server_description": "VIM编辑器操作，包括：缓冲区内容获取、命令发送、状态查询、行编辑、窗口操作、标记设置、寄存器设置和视觉选择", "target_tool_description": "Edits lines in the VIM editor using insert, replace, or replaceAll modes.", "match_result": {"server": "Neovim", "tool": {"name": "vim_edit", "server": "Neovim", "description": "Edits lines in the VIM editor using insert, replace, or replaceAll modes.", "parameter": {"startLine": "(number) Line number where the edit starts", "mode": "(\"insert\" | \"replace\" | \"replaceAll\") Mode of editing", "lines": "(string) Lines to insert or replace"}, "task": "Insert the text \"Hello, world!\" at line 5 in the VIM editor using insert mode."}, "score": 0.621116578578949}, "sample_size": 2656, "position_index": 1911, "selection_method": "position_index_1911"}
{"pass_at_k": 1, "elapsed_time": 0.0, "task": {"category": "Nomad", "query": "Create a new variable with namespace support"}, "is_correct": true, "target_server_name": "nomad-mcp", "target_tool_name": "create_variable", "target_server_description": "1. List variables with filtering and pagination 2. Get details of a specific variable 3. Create a new variable with namespace support 4. Delete a variable with CAS support", "target_tool_description": "Creates a new variable with namespace support.", "match_result": {"server": "nomad-mcp", "tool": {"name": "create_variable", "server": "nomad-mcp", "description": "Creates a new variable with namespace support.", "parameter": {"path": "(string) The path of the variable.", "key": "(string) The key of the variable.", "value": "(string) The value of the variable.", "namespace": "(string) The namespace of the variable."}, "task": "Create a new variable with the key \"api_key\" and value \"12345-abcde\" under the \"production\" namespace at the path \"/config/\"."}, "score": 0.8245587348937988}, "sample_size": 2656, "position_index": 1918, "selection_method": "position_index_1918"}
{"pass_at_k": 20, "elapsed_time": 0.0, "task": {"category": "Obsidian", "query": "Delete a note from the workspace"}, "is_correct": true, "target_server_name": "obsidian-mcp", "target_tool_name": "delete-note", "target_server_description": "1.笔记内容管理，包括读取、创建、编辑、删除和移动笔记 2.目录创建 3.笔记搜索 4.标签管理，包括添加、删除、重命名和组织标签 5.多库管理，列出所有可用库", "target_tool_description": "Delete a note", "match_result": {"server": "obsidian-mcp", "tool": {"name": "delete-note", "server": "obsidian-mcp", "description": "Delete a note", "parameter": {}, "task": "Delete the most recently created note from the system."}, "score": 0.6595013737678528}, "sample_size": 2656, "position_index": 1924, "selection_method": "position_index_1924"}
{"pass_at_k": 10, "elapsed_time": 0.0, "task": {"category": "Obsidian", "query": "List and organize tags in notes"}, "is_correct": true, "target_server_name": "obsidian-mcp", "target_tool_name": "manage-tags", "target_server_description": "1.笔记内容管理，包括读取、创建、编辑、删除和移动笔记 2.目录创建 3.笔记搜索 4.标签管理，包括添加、删除、重命名和组织标签 5.多库管理，列出所有可用库", "target_tool_description": "List and organize tags", "match_result": {"server": "obsidian-mcp", "tool": {"name": "manage-tags", "server": "obsidian-mcp", "description": "List and organize tags", "parameter": {}, "task": "List all available tags and organize them alphabetically in ascending order."}, "score": 0.6436079740524292}, "sample_size": 2656, "position_index": 1931, "selection_method": "position_index_1931"}
{"pass_at_k": -1, "elapsed_time": 0.0, "task": {"category": "Okta", "query": "Delete a user from the system"}, "is_correct": false, "target_server_name": "Okta", "target_tool_name": "delete_user", "target_server_description": "Okta用户与组管理,包括:用户信息检索、激活/停用/删除用户、用户组管理、批量用户导入、应用访问配置及入职工作流执行", "target_tool_description": "Deletes a user from Okta, noting that the user must be deactivated first.", "match_result": {"server": "Meilisearch", "tool": {"name": "update-connection-settings", "server": "Meilisearch", "description": "Update URL and/or API key to connect to a different instance", "parameter": {"url": "(string) New Meilisearch instance URL", "api_key": "(string) New Meilisearch API key"}, "task": "Update the connection settings to a new Meilisearch instance with the URL \"https://search.example.com\" and the API key \"abc123xyz\"."}, "score": 0.6851657629013062}, "sample_size": 2656, "position_index": 1938, "selection_method": "position_index_1938"}
{"pass_at_k": -1, "elapsed_time": 0.0, "task": {"category": "Okta", "query": "Assign user to a group"}, "is_correct": false, "target_server_name": "Okta", "target_tool_name": "assign_user_to_group", "target_server_description": "Okta用户与组管理,包括:用户信息检索、激活/停用/删除用户、用户组管理、批量用户导入、应用访问配置及入职工作流执行", "target_tool_description": "Assigns a user to a group in Okta.", "match_result": {"server": "Bitrise", "tool": {"name": "add_member_to_group", "server": "Bitrise", "description": "Add a member to a group", "parameter": {"group_slug": "(string) Slug of the group", "user_slug": "(string) Slug of the user"}, "task": "Add the user with the slug 'john_doe' to the group identified by the slug 'engineering_team'."}, "score": 0.9321177005767822}, "sample_size": 2656, "position_index": 1944, "selection_method": "position_index_1944"}
{"pass_at_k": 18, "elapsed_time": 0.0, "task": {"category": "OpenAI", "query": "Perform web searches using OpenAI"}, "is_correct": true, "target_server_name": "OpenAI WebSearch MCP", "target_tool_name": "web_search", "target_server_description": "Call OpenAI websearch as a tool", "target_tool_description": "Call OpenAI websearch as a tool.", "match_result": {"server": "OpenAI WebSearch MCP", "tool": {"name": "web_search", "server": "OpenAI WebSearch MCP", "description": "Call OpenAI websearch as a tool.", "parameter": {"type": "(string) web_search_preview", "search_context_size": "(string) High level guidance for the amount of context window space to use for the search. One of low, medium, or high. medium is the default.", "user_location": "(object or null) User location details, including type, city, country, region, and timezone."}, "task": "Search for the latest advancements in renewable energy technologies using a medium context window size."}, "score": 0.5073474645614624}, "sample_size": 2656, "position_index": 1951, "selection_method": "position_index_1951"}
{"pass_at_k": 1, "elapsed_time": 0.0, "task": {"category": "OpenAPI", "query": "Retrieve parameters for a specific API path"}, "is_correct": true, "target_server_name": "OpenAPI Schema", "target_tool_name": "get-path-parameters", "target_server_description": "API开发与测试工具集，包括API路径列表、端点详情、请求/响应模式、参数获取、组件列表与详情、安全方案列表及模式搜索", "target_tool_description": "Gets the parameters for a specific path", "match_result": {"server": "OpenAPI Schema", "tool": {"name": "get-path-parameters", "server": "OpenAPI Schema", "description": "Gets the parameters for a specific path", "parameter": {}, "task": "Retrieve the parameters associated with the specified path.  \n\n(Note: Since the tool does not require any input parameters, the task is kept general to reflect the tool's purpose of fetching path parameters.)"}, "score": 0.9263337254524231}, "sample_size": 2656, "position_index": 1958, "selection_method": "position_index_1958"}
{"pass_at_k": 1, "elapsed_time": 0.0, "task": {"category": "OpenCTI", "query": "Retrieve recent threat intelligence reports"}, "is_correct": true, "target_server_name": "OpenCTI", "target_tool_name": "get_latest_reports", "target_server_description": "1.威胁情报报告检索 2.恶意软件、威胁指标、威胁行为者信息搜索 3.用户、群组、攻击模式、活动、连接器、状态模板、文件、标记定义和标签列表检索", "target_tool_description": "Retrieves the most recent threat intelligence reports.", "match_result": {"server": "OpenCTI", "tool": {"name": "get_latest_reports", "server": "OpenCTI", "description": "Retrieves the most recent threat intelligence reports.", "parameter": {"first": "(Optional, number) Number of reports to retrieve, defaults to 10"}, "task": "Retrieve the 5 most recent threat intelligence reports."}, "score": 0.5804402232170105}, "sample_size": 2656, "position_index": 1964, "selection_method": "position_index_1964"}
{"pass_at_k": 20, "elapsed_time": 0.0, "task": {"category": "OpenCTI", "query": "Retrieve groups and their members"}, "is_correct": true, "target_server_name": "OpenCTI", "target_tool_name": "list_groups", "target_server_description": "1.威胁情报报告检索 2.恶意软件、威胁指标、威胁行为者信息搜索 3.用户、群组、攻击模式、活动、连接器、状态模板、文件、标记定义和标签列表检索", "target_tool_description": "Lists all groups with their members.", "match_result": {"server": "OpenCTI", "tool": {"name": "list_groups", "server": "OpenCTI", "description": "Lists all groups with their members.", "parameter": {"first": "(Optional, number) Number of groups to retrieve, defaults to 10"}, "task": "Retrieve the first 15 groups along with their member details."}, "score": 0.6253329515457153}, "sample_size": 2656, "position_index": 1971, "selection_method": "position_index_1971"}
{"pass_at_k": 73, "elapsed_time": 0.0, "task": {"category": "OpenCTI", "query": "List all available files"}, "is_correct": true, "target_server_name": "OpenCTI", "target_tool_name": "list_files", "target_server_description": "1.威胁情报报告检索 2.恶意软件、威胁指标、威胁行为者信息搜索 3.用户、群组、攻击模式、活动、连接器、状态模板、文件、标记定义和标签列表检索", "target_tool_description": "Lists all files in the system.", "match_result": {"server": "OpenCTI", "tool": {"name": "list_files", "server": "OpenCTI", "description": "Lists all files in the system.", "parameter": {}, "task": "List all files in the root directory of the system."}, "score": 0.5854556560516357}, "sample_size": 2656, "position_index": 1977, "selection_method": "position_index_1977"}
{"pass_at_k": 1, "elapsed_time": 0.0, "task": {"category": "OpenDota", "query": "Retrieve player's most played heroes"}, "is_correct": true, "target_server_name": "OpenDota", "target_tool_name": "get_player_heroes", "target_server_description": "Dota 2 player and match data retrieval, including player information, recent matches, win/loss statistics, hero stats, professional players/matches, team information, and public matches", "target_tool_description": "Get a player's most played heroes", "match_result": {"server": "OpenDota", "tool": {"name": "get_player_heroes", "server": "OpenDota", "description": "Get a player's most played heroes", "parameter": {}, "task": "Retrieve the top 5 most played heroes for the specified player."}, "score": 0.9878381490707397}, "sample_size": 2656, "position_index": 1984, "selection_method": "position_index_1984"}
{"pass_at_k": 3, "elapsed_time": 0.0, "task": {"category": "OpenDota", "query": "Retrieve player statistics"}, "is_correct": true, "target_server_name": "OpenDota", "target_tool_name": "get_player_totals", "target_server_description": "Dota 2 player and match data retrieval, including player information, recent matches, win/loss statistics, hero stats, professional players/matches, team information, and public matches", "target_tool_description": "Get player's overall stats totals", "match_result": {"server": "OpenDota", "tool": {"name": "get_player_totals", "server": "OpenDota", "description": "Get player's overall stats totals", "parameter": {}, "task": "Retrieve the overall statistics totals for the specified player."}, "score": 0.779090404510498}, "sample_size": 2656, "position_index": 1991, "selection_method": "position_index_1991"}
{"pass_at_k": 1, "elapsed_time": 0.0, "task": {"category": "JSON-RPC", "query": "Call methods on a JSON-RPC server"}, "is_correct": true, "target_server_name": "OpenRPC", "target_tool_name": "rpc_call", "target_server_description": "1.调用任意JSON-RPC方法 2.发现可用的JSON-RPC方法", "target_tool_description": "Call arbitrary JSON-RPC methods", "match_result": {"server": "OpenRPC", "tool": {"name": "rpc_call", "server": "OpenRPC", "description": "Call arbitrary JSON-RPC methods", "parameter": {"server_url": "(string) URL of the JSON-RPC server", "method_name": "(string) Name of the method to call", "parameters": "(object) Parameters to pass to the method"}, "task": "Invoke the `getBalance` method on the JSON-RPC server at `https://api.example.com/rpc` with the parameters `{\"address\": \"0x123...\", \"block\": \"latest\"}`."}, "score": 0.7782002687454224}, "sample_size": 2656, "position_index": 1997, "selection_method": "position_index_1997"}
{"pass_at_k": 37, "elapsed_time": 0.0, "task": {"category": "Outline", "query": "List available collections"}, "is_correct": true, "target_server_name": "Outline", "target_tool_name": "List Collections", "target_server_description": "1. Search for documents by keywords 2. List all available collections 3. Get document content by ID 4. Create new document in specified collection 5. Add comment to document 6. Move document to different collection", "target_tool_description": "List all available collections.", "match_result": {"server": "Outline", "tool": {"name": "List Collections", "server": "Outline", "description": "List all available collections.", "parameter": {}, "task": "List all available collections in the current database."}, "score": 0.7251929044723511}, "sample_size": 2656, "position_index": 2004, "selection_method": "position_index_2004"}
{"pass_at_k": 4, "elapsed_time": 0.0, "task": {"category": "Phone MCP", "query": "Analyze UI elements on screen"}, "is_correct": true, "target_server_name": "Phone MCP", "target_tool_name": "analyze_screen", "target_server_description": "1.执行屏幕交互操作（点击、滑动、按键、输入文本、查找元素等） 2.分析屏幕UI元素 3.通过UI自动化创建联系人 4.通过包名和活动名启动应用 5.通过Android intent系统启动活动", "target_tool_description": "Analyzes the current screen and provides structured information about UI elements.", "match_result": {"server": "Phone MCP", "tool": {"name": "analyze_screen", "server": "Phone MCP", "description": "Analyzes the current screen and provides structured information about UI elements.", "parameter": {"include_screenshot": "(Optional, bool) Whether to include base64-encoded screenshot in result", "max_elements": "(Optional, int) Maximum number of UI elements to process"}, "task": "Analyze the current screen's UI elements, including a screenshot, and process up to 20 elements."}, "score": 0.6704061031341553}, "sample_size": 2656, "position_index": 2011, "selection_method": "position_index_2011"}
{"pass_at_k": 3, "elapsed_time": 0.0, "task": {"category": "PIF", "query": "Navigate and manage workspace context"}, "is_correct": true, "target_server_name": "PIF", "target_tool_name": "read", "target_server_description": "1.工作区上下文导航与管理 2.开发连接见解 3.创建临时思考空间 4.记录发展并探索日志条目模式", "target_tool_description": "Navigate and manage workspace context", "match_result": {"server": "PIF", "tool": {"name": "read", "server": "PIF", "description": "Navigate and manage workspace context", "parameter": {}, "task": "Navigate through the current workspace to review and organize the available files and folders."}, "score": 1.0000004768371582}, "sample_size": 2656, "position_index": 2017, "selection_method": "position_index_2017"}
{"pass_at_k": 1, "elapsed_time": 0.0, "task": {"category": "UNKNOWN", "query": "Create spaces for contemplation"}, "is_correct": true, "target_server_name": "PIF", "target_tool_name": "think", "target_server_description": "1.工作区上下文导航与管理 2.开发连接见解 3.创建临时思考空间 4.记录发展并探索日志条目模式", "target_tool_description": "Create temporal spaces for contemplation", "match_result": {"server": "PIF", "tool": {"name": "think", "server": "PIF", "description": "Create temporal spaces for contemplation", "parameter": {}, "task": "Reflect on the past week's achievements and challenges in a quiet, distraction-free environment."}, "score": 0.9279556274414062}, "sample_size": 2656, "position_index": 2024, "selection_method": "position_index_2024"}
{"pass_at_k": -1, "elapsed_time": 0.0, "task": {"category": "Productboard", "query": "Retrieve list of companies"}, "is_correct": false, "target_server_name": "Productboard", "target_tool_name": "get_companies", "target_server_description": "Productboard数据检索,包括:公司列表与详情、组件列表与详情、功能列表与详情及状态、笔记、产品列表与详情", "target_tool_description": "Retrieves a list of companies from Productboard.", "match_result": {"server": "HubSpot", "tool": {"name": "hubspot_get_active_companies", "server": "HubSpot", "description": "Retrieve most recently active companies", "parameter": {}, "task": "Retrieve the 10 most recently active companies from the CRM system."}, "score": 0.8877688050270081}, "sample_size": 2656, "position_index": 2031, "selection_method": "position_index_2031"}
{"pass_at_k": -1, "elapsed_time": 0.0, "task": {"category": "Productboard", "query": "Retrieve feature statuses"}, "is_correct": false, "target_server_name": "Productboard", "target_tool_name": "get_feature_statuses", "target_server_description": "Productboard数据检索,包括:公司列表与详情、组件列表与详情、功能列表与详情及状态、笔记、产品列表与详情", "target_tool_description": "Retrieves the statuses of features from Productboard.", "match_result": {"server": "Replicate", "tool": {"name": "get_prediction", "server": "Replicate", "description": "Check a prediction's status", "parameter": {}, "task": "Check the status of the latest prediction made by the system."}, "score": 0.7595951557159424}, "sample_size": 2656, "position_index": 2037, "selection_method": "position_index_2037"}
{"pass_at_k": 2, "elapsed_time": 0.0, "task": {"category": "Prometheus", "query": "Retrieve metadata for a specific metric"}, "is_correct": true, "target_server_name": "Prometheus", "target_tool_name": "get_metric_metadata", "target_server_description": "1. Execute PromQL instant and range queries against Prometheus 2. List all available metrics in Prometheus 3. Get metadata for a specific metric 4. Get information about all scrape targets", "target_tool_description": "Get metadata for a specific metric", "match_result": {"server": "Prometheus", "tool": {"name": "get_metric_metadata", "server": "Prometheus", "description": "Get metadata for a specific metric", "parameter": {"metric_name": "(string) The name of the metric to get metadata for"}, "task": "Retrieve the metadata for the \"user_login_count\" metric."}, "score": 0.9967905879020691}, "sample_size": 2656, "position_index": 2044, "selection_method": "position_index_2044"}
{"pass_at_k": -1, "elapsed_time": 0.0, "task": {"category": "JavaFX", "query": "Create drawings using a canvas"}, "is_correct": false, "target_server_name": "Quarkus", "target_tool_name": "jfx", "target_server_description": "1.通过JDBC URL存储和检索数据库数据 2.检查运行中的JVM进程 3.从文件系统提供文件服务 4.使用JavaFX创建绘图画布 5.与Kubernetes集群交互 6.使用Docker/Podman/OCI兼容容器引擎 7.通过Wolfram Alpha LLM API进行优化的网络搜索", "target_tool_description": "A server that exposes a canvas for making drawings using JavaFX.", "match_result": {"server": "Puppeteer", "tool": {"name": "puppeteer_hover", "server": "Puppeteer", "description": "Hover elements on the page", "parameter": {"selector": "(string): CSS selector for element to hover"}, "task": "Hover over the navigation menu item with the CSS selector \".main-nav > li.dropdown\" to reveal its submenu."}, "score": 0.5975068211555481}, "sample_size": 2656, "position_index": 2050, "selection_method": "position_index_2050"}
{"pass_at_k": 26, "elapsed_time": 0.0, "task": {"category": "QGIS", "query": "Create and save a new project"}, "is_correct": true, "target_server_name": "QGIS", "target_tool_name": "create_new_project", "target_server_description": "1.执行简单的ping命令检查服务器连接性 2.QGIS项目操作,包括:项目创建/加载/保存、图层管理(矢量/栅格)、地图渲染、处理算法执行及PyQGIS代码执行", "target_tool_description": "Create a new project and save it", "match_result": {"server": "QGIS", "tool": {"name": "create_new_project", "server": "QGIS", "description": "Create a new project and save it", "parameter": {"path": "(string) Path to save the new project file"}, "task": "Create a new project file and save it to the specified directory path \"/projects/new_project_2024\"."}, "score": 0.7288947105407715}, "sample_size": 2656, "position_index": 2057, "selection_method": "position_index_2057"}
{"pass_at_k": 3, "elapsed_time": 0.0, "task": {"category": "QGIS", "query": "Retrieve features from a vector layer"}, "is_correct": true, "target_server_name": "QGIS", "target_tool_name": "get_layer_features", "target_server_description": "1.执行简单的ping命令检查服务器连接性 2.QGIS项目操作,包括:项目创建/加载/保存、图层管理(矢量/栅格)、地图渲染、处理算法执行及PyQGIS代码执行", "target_tool_description": "Retrieve features from a vector layer with an optional limit", "match_result": {"server": "QGIS", "tool": {"name": "get_layer_features", "server": "QGIS", "description": "Retrieve features from a vector layer with an optional limit", "parameter": {"layer_id": "(string) ID of the vector layer", "limit": "(Optional, integer) Maximum number of features to retrieve"}, "task": "Retrieve up to 50 features from the vector layer identified by the ID \"land_parcels_2023\"."}, "score": 0.5191470980644226}, "sample_size": 2656, "position_index": 2064, "selection_method": "position_index_2064"}
{"pass_at_k": 1, "elapsed_time": 0.0, "task": {"category": "QuickChart", "query": "Download chart images to local files"}, "is_correct": true, "target_server_name": "QuickChart", "target_tool_name": "download_chart", "target_server_description": "1. Generate chart URLs using QuickChart.io 2. Download chart images to local files", "target_tool_description": "Download a chart image to a local file", "match_result": {"server": "QuickChart", "tool": {"name": "download_chart", "server": "QuickChart", "description": "Download a chart image to a local file", "parameter": {"config": "(object) The chart configuration", "outputPath": "(string) The path where the chart image will be saved"}, "task": "Save a bar chart showing monthly sales data for Q1 2024 to the specified local directory."}, "score": 0.9120588302612305}, "sample_size": 2656, "position_index": 2070, "selection_method": "position_index_2070"}
{"pass_at_k": -1, "elapsed_time": 0.0, "task": {"category": "Rememberizer AI", "query": "Search internal knowledge repository for documents"}, "is_correct": false, "target_server_name": "Rememberizer AI", "target_tool_name": "smart_search_internal_knowledge", "target_server_description": "1.从Rememberizer个人/团队内部知识库中检索语义相似的匹配项 2.使用简单查询搜索Rememberizer内部知识库中的文档 3.列出个人/团队内部知识库的来源 4.获取Rememberizer.ai知识库账户信息 5.检索个人/团队知识系统中所有文档的分页列表 6.在Rememberizer.ai知识系统中保存文本信息以便未来召回", "target_tool_description": "Searches for documents in Rememberizer's personal/team internal knowledge and memory repository using a simple query. The search may include sources such as Slack discussions, Gmail, Dropbox documents, Google Drive documents, and uploaded files.", "match_result": {"server": "ClickUp", "tool": {"name": "list_documents", "server": "ClickUp", "description": "List documents", "parameter": {"workspaceId": "(string) The ID of the workspace", "documentId": "(Optional, string) The ID of the document", "creator": "(Optional, string) The creator of the document", "deleted": "(Optional, boolean) Whether to include deleted documents", "archived": "(Optional, boolean) Whether to include archived documents", "parent_id": "(Optional, string) The ID of the parent item", "parent_type": "(Optional, string) The type of the parent item", "limit": "(Optional, integer) The maximum number of documents to return", "next_cursor": "(Optional, string) The cursor for pagination"}, "task": "List all active documents in workspace \"WS123\" created by \"user1\", excluding deleted and archived items, with a limit of 50 documents per page."}, "score": 0.8584162592887878}, "sample_size": 2656, "position_index": 2077, "selection_method": "position_index_2077"}
{"pass_at_k": 8, "elapsed_time": 0.0, "task": {"category": "Replicate", "query": "Retrieve model details"}, "is_correct": true, "target_server_name": "Replicate", "target_tool_name": "get_model", "target_server_description": "1.模型搜索与浏览 2.模型集合管理 3.预测任务执行与状态监控 4.图像缓存管理", "target_tool_description": "Get details about a specific model", "match_result": {"server": "Replicate", "tool": {"name": "get_model", "server": "Replicate", "description": "Get details about a specific model", "parameter": {}, "task": "Retrieve the specifications and details of the current model in use."}, "score": 0.7328982949256897}, "sample_size": 2656, "position_index": 2084, "selection_method": "position_index_2084"}
{"pass_at_k": 1, "elapsed_time": 0.0, "task": {"category": "Replicate", "query": "View recent prediction history"}, "is_correct": true, "target_server_name": "Replicate", "target_tool_name": "list_predictions", "target_server_description": "1.模型搜索与浏览 2.模型集合管理 3.预测任务执行与状态监控 4.图像缓存管理", "target_tool_description": "See your recent predictions", "match_result": {"server": "Replicate", "tool": {"name": "list_predictions", "server": "Replicate", "description": "See your recent predictions", "parameter": {}, "task": "List the most recent predictions made in the system."}, "score": 0.7447067499160767}, "sample_size": 2656, "position_index": 2090, "selection_method": "position_index_2090"}
{"pass_at_k": 4, "elapsed_time": 0.0, "task": {"category": "HTTP", "query": "Send DELETE requests to remove resources"}, "is_correct": true, "target_server_name": "Rquest", "target_tool_name": "http_delete", "target_server_description": "HTTP请求操作,包括:GET/POST/PUT/DELETE/PATCH/HEAD/OPTIONS/TRACE请求,存储响应检索,HTML/PDF转Markdown,PDF模型状态获取与重启加载", "target_tool_description": "Remove resources with DELETE requests", "match_result": {"server": "Rquest", "tool": {"name": "http_delete", "server": "Rquest", "description": "Remove resources with DELETE requests", "parameter": {"url": "(string) The URL to send the DELETE request to", "headers": "(Optional, dict) Additional headers to include in the request", "cookies": "(Optional, dict) Cookies to include in the request"}, "task": "Delete the resource located at `https://api.example.com/users/123` with the header `Authorization: Bearer token123`."}, "score": 0.7582443952560425}, "sample_size": 2656, "position_index": 2097, "selection_method": "position_index_2097"}
{"pass_at_k": 3, "elapsed_time": 0.0, "task": {"category": "PDF Processing", "query": "Check the loading status of PDF models"}, "is_correct": true, "target_server_name": "Rquest", "target_tool_name": "get_model_state", "target_server_description": "HTTP请求操作,包括:GET/POST/PUT/DELETE/PATCH/HEAD/OPTIONS/TRACE请求,存储响应检索,HTML/PDF转Markdown,PDF模型状态获取与重启加载", "target_tool_description": "Get the current state of the PDF models loading process", "match_result": {"server": "Rquest", "tool": {"name": "get_model_state", "server": "Rquest", "description": "Get the current state of the PDF models loading process", "parameter": {}, "task": "Check the current loading status of all PDF models in the system."}, "score": 0.7095547914505005}, "sample_size": 2656, "position_index": 2104, "selection_method": "position_index_2104"}
{"pass_at_k": 22, "elapsed_time": 0.0, "task": {"category": "Rijksmuseum", "query": "Retrieve details of user-created collections"}, "is_correct": true, "target_server_name": "Rijksmuseum", "target_tool_name": "get_user_set_details", "target_server_description": "1.使用多种条件搜索和筛选艺术品 2.检索艺术品的详细信息 3.访问高分辨率图像数据 4.浏览用户创建的收藏集 5.访问特定用户收藏集的详细信息 6.在浏览器中直接查看艺术品图像 7.生成艺术家作品的时间线", "target_tool_description": "Access detailed information about specific user-created collections.", "match_result": {"server": "Rijksmuseum", "tool": {"name": "get_user_set_details", "server": "Rijksmuseum", "description": "Access detailed information about specific user-created collections.", "parameter": {}, "task": "Retrieve the details of the most recently created user collection."}, "score": 0.6811021566390991}, "sample_size": 2656, "position_index": 2110, "selection_method": "position_index_2110"}
{"pass_at_k": -1, "elapsed_time": 0.0, "task": {"category": "Riot Games", "query": "Retrieve match performance statistics"}, "is_correct": false, "target_server_name": "Riot Games", "target_tool_name": "get_match_summary", "target_server_description": "1. Summarize player level, rank, top champions, and recent matches 2. Return top champions by mastery points 3. Return mastery details for a specific champion 4. Return recent matches for a summoner 5. Return match performance stats for a given match ID and puuid", "target_tool_description": "Returns match performance stats for a given match ID and puuid.", "match_result": {"server": "CFBD API", "tool": {"name": "get-games-teams", "server": "CFBD API", "description": "Access team game statistics", "parameter": {}, "task": "Retrieve the latest game statistics for all teams in the current season."}, "score": 0.8262497186660767}, "sample_size": 2656, "position_index": 2117, "selection_method": "position_index_2117"}
{"pass_at_k": 39, "elapsed_time": 0.0, "task": {"category": "SEC EDGAR", "query": "Retrieve financial concepts for a company"}, "is_correct": true, "target_server_name": "SEC EDGAR", "target_tool_name": "get_company_concepts", "target_server_description": "1. Fetch a company's submissions (filings history) by CIK 2. Get a specific reported concept for a company by CIK, taxonomy, and tag 3. Retrieve all facts for a company (full XBRL fact set) by CIK 4. Query XBRL frames (data across entities or time) by taxonomy, tag, unit, year, and quarter", "target_tool_description": "Get a specific reported concept for a company by CIK, taxonomy, and tag.", "match_result": {"server": "SEC EDGAR", "tool": {"name": "get_company_concepts", "server": "SEC EDGAR", "description": "Get a specific reported concept for a company by CIK, taxonomy, and tag.", "parameter": {"cik": "(string) The Central Index Key (CIK) of the company.", "taxonomy": "(string) The accounting taxonomy (e.g., us-gaap).", "tag": "(string) The specific financial concept tag (e.g., AccountsPayableCurrent)."}, "task": "Retrieve the 'AccountsPayableCurrent' financial concept for the company with CIK 1234567890 using the 'us-gaap' taxonomy."}, "score": 0.5319498777389526}, "sample_size": 2656, "position_index": 2124, "selection_method": "position_index_2124"}
{"pass_at_k": 7, "elapsed_time": 0.0, "task": {"category": "ServiceNow", "query": "Resolve incidents in a service management platform"}, "is_correct": true, "target_server_name": "ServiceNow", "target_tool_name": "resolve_incident", "target_server_description": "ServiceNow平台操作，包括：事件管理、服务目录管理、变更请求管理、工作流管理、脚本管理、变更集管理、知识库管理、用户与群组管理、UI策略管理及工具包管理", "target_tool_description": "Resolve an incident in ServiceNow", "match_result": {"server": "ServiceNow", "tool": {"name": "resolve_incident", "server": "ServiceNow", "description": "Resolve an incident in ServiceNow", "parameter": {}, "task": "Resolve the latest incident reported in the ServiceNow system."}, "score": 0.7032959461212158}, "sample_size": 2656, "position_index": 2130, "selection_method": "position_index_2130"}
{"pass_at_k": -1, "elapsed_time": 0.0, "task": {"category": "ServiceNow", "query": "Move items between categories"}, "is_correct": false, "target_server_name": "ServiceNow", "target_tool_name": "move_catalog_items", "target_server_description": "ServiceNow平台操作，包括：事件管理、服务目录管理、变更请求管理、工作流管理、脚本管理、变更集管理、知识库管理、用户与群组管理、UI策略管理及工具包管理", "target_tool_description": "Move catalog items between categories in ServiceNow", "match_result": {"server": "Monday.com", "tool": {"name": "monday-move-item-to-group", "server": "Monday.com", "description": "Moves a Monday.com item to a different group", "parameter": {}, "task": "Move the specified item in Monday.com to the 'Completed Tasks' group."}, "score": 0.7270753979682922}, "sample_size": 2656, "position_index": 2137, "selection_method": "position_index_2137"}
{"pass_at_k": 1, "elapsed_time": 0.0, "task": {"category": "ServiceNow", "query": "Update service catalog items"}, "is_correct": true, "target_server_name": "ServiceNow", "target_tool_name": "update_catalog_item", "target_server_description": "ServiceNow平台操作，包括：事件管理、服务目录管理、变更请求管理、工作流管理、脚本管理、变更集管理、知识库管理、用户与群组管理、UI策略管理及工具包管理", "target_tool_description": "Update a service catalog item", "match_result": {"server": "ServiceNow", "tool": {"name": "update_catalog_item", "server": "ServiceNow", "description": "Update a service catalog item", "parameter": {}, "task": "Update the details of a service catalog item with the latest specifications and pricing information. Ensure all relevant fields such as description, availability, and service level agreements are accurately reflected."}, "score": 0.8972962498664856}, "sample_size": 2656, "position_index": 2143, "selection_method": "position_index_2143"}
{"pass_at_k": 1, "elapsed_time": 0.0, "task": {"category": "ServiceNow", "query": "Approve change requests"}, "is_correct": true, "target_server_name": "ServiceNow", "target_tool_name": "approve_change", "target_server_description": "ServiceNow平台操作，包括：事件管理、服务目录管理、变更请求管理、工作流管理、脚本管理、变更集管理、知识库管理、用户与群组管理、UI策略管理及工具包管理", "target_tool_description": "Approve a change request", "match_result": {"server": "ServiceNow", "tool": {"name": "approve_change", "server": "ServiceNow", "description": "Approve a change request", "parameter": {}, "task": "Approve the pending change request in the system."}, "score": 0.9508119821548462}, "sample_size": 2656, "position_index": 2150, "selection_method": "position_index_2150"}
{"pass_at_k": -1, "elapsed_time": 0.0, "task": {"category": "ServiceNow", "query": "List script includes"}, "is_correct": false, "target_server_name": "ServiceNow", "target_tool_name": "list_script_includes", "target_server_description": "ServiceNow平台操作，包括：事件管理、服务目录管理、变更请求管理、工作流管理、脚本管理、变更集管理、知识库管理、用户与群组管理、UI策略管理及工具包管理", "target_tool_description": "List script includes from ServiceNow", "match_result": {"server": "llm-context", "tool": {"name": "lc-sel-files", "server": "llm-context", "description": "Select files for inclusion", "parameter": {}, "task": "Select 10 files from the current directory for inclusion in the project."}, "score": 0.7100086212158203}, "sample_size": 2656, "position_index": 2157, "selection_method": "position_index_2157"}
{"pass_at_k": 1, "elapsed_time": 0.0, "task": {"category": "ServiceNow", "query": "Retrieve detailed changeset information"}, "is_correct": true, "target_server_name": "ServiceNow", "target_tool_name": "get_changeset_details", "target_server_description": "ServiceNow平台操作，包括：事件管理、服务目录管理、变更请求管理、工作流管理、脚本管理、变更集管理、知识库管理、用户与群组管理、UI策略管理及工具包管理", "target_tool_description": "Get detailed information about a specific changeset", "match_result": {"server": "ServiceNow", "tool": {"name": "get_changeset_details", "server": "ServiceNow", "description": "Get detailed information about a specific changeset", "parameter": {}, "task": "Retrieve the detailed information for the most recent changeset in the system."}, "score": 0.7569959163665771}, "sample_size": 2656, "position_index": 2163, "selection_method": "position_index_2163"}
{"pass_at_k": 1, "elapsed_time": 0.0, "task": {"category": "ServiceNow", "query": "List knowledge bases with filtering options"}, "is_correct": true, "target_server_name": "ServiceNow", "target_tool_name": "list_knowledge_bases", "target_server_description": "ServiceNow平台操作，包括：事件管理、服务目录管理、变更请求管理、工作流管理、脚本管理、变更集管理、知识库管理、用户与群组管理、UI策略管理及工具包管理", "target_tool_description": "List knowledge bases with filtering options", "match_result": {"server": "ServiceNow", "tool": {"name": "list_knowledge_bases", "server": "ServiceNow", "description": "List knowledge bases with filtering options", "parameter": {}, "task": "List all available knowledge bases with their respective details."}, "score": 1.0}, "sample_size": 2656, "position_index": 2170, "selection_method": "position_index_2170"}
{"pass_at_k": -1, "elapsed_time": 0.0, "task": {"category": "ServiceNow", "query": "Create a new user"}, "is_correct": false, "target_server_name": "ServiceNow", "target_tool_name": "create_user", "target_server_description": "ServiceNow平台操作，包括：事件管理、服务目录管理、变更请求管理、工作流管理、脚本管理、变更集管理、知识库管理、用户与群组管理、UI策略管理及工具包管理", "target_tool_description": "Create a new user in ServiceNow", "match_result": {"server": "SingleStore", "tool": {"name": "create_virtual_workspace", "server": "SingleStore", "description": "Create a new starter workspace with a user", "parameter": {"name": "(string) Name of the starter workspace", "database_name": "(string) Name of the database to create", "username": "(string) Username for accessing the workspace", "password": "(string) Password for the user", "workspace_group": "(object) Object containing 'name' (optional) and 'cellID' (mandatory)"}, "task": "Create a new starter workspace named \"DevTeam2024\" with a database called \"dev_db\", assigning the username \"dev_user\" and password \"secure123\", and associate it with workspace group cellID \"cell-5a2b\"."}, "score": 0.8632037043571472}, "sample_size": 2656, "position_index": 2177, "selection_method": "position_index_2177"}
{"pass_at_k": -1, "elapsed_time": 0.0, "task": {"category": "ServiceNow", "query": "Add members to a group"}, "is_correct": false, "target_server_name": "ServiceNow", "target_tool_name": "add_group_members", "target_server_description": "ServiceNow平台操作，包括：事件管理、服务目录管理、变更请求管理、工作流管理、脚本管理、变更集管理、知识库管理、用户与群组管理、UI策略管理及工具包管理", "target_tool_description": "Add members to a group in ServiceNow", "match_result": {"server": "Bitrise", "tool": {"name": "add_member_to_group", "server": "Bitrise", "description": "Add a member to a group", "parameter": {"group_slug": "(string) Slug of the group", "user_slug": "(string) Slug of the user"}, "task": "Add the user with the slug 'john_doe' to the group identified by the slug 'engineering_team'."}, "score": 0.984954833984375}, "sample_size": 2656, "position_index": 2183, "selection_method": "position_index_2183"}
{"pass_at_k": 1, "elapsed_time": 0.0, "task": {"category": "Shopify", "query": "Retrieve product details by ID"}, "is_correct": true, "target_server_name": "Shopify", "target_tool_name": "get-product-by-id", "target_server_description": "1.获取所有产品或按标题搜索 2.通过ID获取特定产品 3.获取客户或按名称/电子邮件搜索 4.更新客户信息 5.获取特定客户的订单 6.获取订单并可选过滤 7.通过ID获取特定订单 8.更新现有订单信息", "target_tool_description": "Get a specific product by ID", "match_result": {"server": "Shopify", "tool": {"name": "get-product-by-id", "server": "Shopify", "description": "Get a specific product by ID", "parameter": {"productId": "(string) ID of the product to retrieve"}, "task": "Retrieve the product details for the item with ID \"PRD-2024-0456\"."}, "score": 0.8843966126441956}, "sample_size": 2656, "position_index": 2190, "selection_method": "position_index_2190"}
{"pass_at_k": -1, "elapsed_time": 0.0, "task": {"category": "Siri Shortcuts", "query": "List all available shortcuts"}, "is_correct": false, "target_server_name": "Siri Shortcuts", "target_tool_name": "list_shortcuts", "target_server_description": "1.列出系统上所有可用的Siri快捷方式 2.在快捷方式应用中打开快捷方式 3.运行带有可选输入的快捷方式", "target_tool_description": "Lists all available Siri shortcuts on the system", "match_result": {"server": "MCP Create", "tool": {"name": "get-server-tools", "server": "MCP Create", "description": "Get list of server tools", "parameter": {"serverId": "(string) The ID of the server"}, "task": "Retrieve the list of tools installed on the server with ID \"SRV-12345\"."}, "score": 0.5941305160522461}, "sample_size": 2656, "position_index": 2197, "selection_method": "position_index_2197"}
{"pass_at_k": 39, "elapsed_time": 0.0, "task": {"category": "Snowflake", "query": "Execute data modification queries"}, "is_correct": true, "target_server_name": "Snowflake", "target_tool_name": "write_query", "target_server_description": "Snowflake数据库操作,包括:数据查询(SELECT)、数据写入(INSERT/UPDATE/DELETE)、表创建、数据库/模式/表列表查询、表结构描述、数据洞察添加", "target_tool_description": "Execute INSERT, UPDATE, or DELETE queries.", "match_result": {"server": "Snowflake", "tool": {"name": "write_query", "server": "Snowflake", "description": "Execute INSERT, UPDATE, or DELETE queries.", "parameter": {"query": "(string) The SQL modification query"}, "task": "Insert a new customer record into the database with the following details: name 'Alice', email 'alice@example.com', and registration date '2024-01-15'."}, "score": 0.5860229134559631}, "sample_size": 2656, "position_index": 2203, "selection_method": "position_index_2203"}
{"pass_at_k": 1, "elapsed_time": 0.0, "task": {"category": "Solver", "query": "Clear all items from the model"}, "is_correct": true, "target_server_name": "Solver", "target_tool_name": "clear_model", "target_server_description": "1. Remove all items from the model 2. Add new item at a specific index 3. Delete item at index 4. Replace item at index 5. Get current model content with numbered items 6. Solve the model with timeout parameter", "target_tool_description": "Remove all items from the model", "match_result": {"server": "Solver", "tool": {"name": "clear_model", "server": "Solver", "description": "Remove all items from the model", "parameter": {}, "task": "Clear all items from the current model."}, "score": 0.9838249683380127}, "sample_size": 2656, "position_index": 2210, "selection_method": "position_index_2210"}
{"pass_at_k": 1, "elapsed_time": 0.0, "task": {"category": "SoccerDataAPI", "query": "Get real-time football match updates"}, "is_correct": true, "target_server_name": "SoccerDataAPI", "target_tool_name": "get_livescores", "target_server_description": "获取全球实时足球比赛信息", "target_tool_description": "Returns real-time information about ongoing football matches around the world.", "match_result": {"server": "SoccerDataAPI", "tool": {"name": "get_livescores", "server": "SoccerDataAPI", "description": "Returns real-time information about ongoing football matches around the world.", "parameter": {}, "task": "Check the live scores of all ongoing football matches worldwide."}, "score": 0.6517690420150757}, "sample_size": 2656, "position_index": 2216, "selection_method": "position_index_2216"}
{"pass_at_k": 2, "elapsed_time": 0.0, "task": {"category": "Solana", "query": "Create a new NFT on 3Land"}, "is_correct": true, "target_server_name": "Solana Agent Kit", "target_tool_name": "create3LandNft", "target_server_description": "1.部署和管理SPL代币 2.使用Wormhole进行跨链代币转移和包装 3.创建和管理NFT集合 4.使用DEX进行代币交换 5.资产借贷和质押 6.使用ZK压缩发送空投 7.获取Pyth价格数据 8.进行永续合约交易 9.管理Drift账户和保险库 10.Voltr策略存款和提款 11.获取Solana资产信息和价格推断 12.使用deBridge进行跨链订单创建和执行 13.获取代币价格数据和趋势信息 14.在OKX DEX上执行代币交换", "target_tool_description": "Creates a new NFT on 3Land.", "match_result": {"server": "Solana Agent Kit", "tool": {"name": "create3LandNft", "server": "Solana Agent Kit", "description": "Creates a new NFT on 3Land.", "parameter": {"collectionAccount": "(string) Hash for the collection", "createItemOptions": "(CreateSingleOptions) Options for the NFT", "isDevnet": "(Optional, boolean) Whether to use devnet (defaults to false)", "withPool": "(Optional, boolean) Whether to create with a liquidity pool", "priorityFeeParam": "(Optional, number) Priority fee (defaults to 50000)"}, "task": "Create a new NFT on 3Land with the collection hash \"abc123\", set the priority fee to 75000, and enable liquidity pool creation. Use the mainnet for deployment."}, "score": 0.8114826083183289}, "sample_size": 2656, "position_index": 2223, "selection_method": "position_index_2223"}
{"pass_at_k": 9, "elapsed_time": 0.0, "task": {"category": "Solana", "query": "Retrieve price feed ID for an asset"}, "is_correct": true, "target_server_name": "Solana Agent Kit", "target_tool_name": "getPythPriceFeedID", "target_server_description": "1.部署和管理SPL代币 2.使用Wormhole进行跨链代币转移和包装 3.创建和管理NFT集合 4.使用DEX进行代币交换 5.资产借贷和质押 6.使用ZK压缩发送空投 7.获取Pyth价格数据 8.进行永续合约交易 9.管理Drift账户和保险库 10.Voltr策略存款和提款 11.获取Solana资产信息和价格推断 12.使用deBridge进行跨链订单创建和执行 13.获取代币价格数据和趋势信息 14.在OKX DEX上执行代币交换", "target_tool_description": "Gets the Pyth price feed ID for a given asset.", "match_result": {"server": "Solana Agent Kit", "tool": {"name": "getPythPriceFeedID", "server": "Solana Agent Kit", "description": "Gets the Pyth price feed ID for a given asset.", "parameter": {"asset": "(string) Asset symbol"}, "task": "Retrieve the Pyth price feed ID for the asset 'BTC/USD'."}, "score": 0.6345074772834778}, "sample_size": 2656, "position_index": 2230, "selection_method": "position_index_2230"}
{"pass_at_k": -1, "elapsed_time": 0.0, "task": {"category": "Solana", "query": "Create a new vault on Drift"}, "is_correct": false, "target_server_name": "Solana Agent Kit", "target_tool_name": "createDriftVault", "target_server_description": "1.部署和管理SPL代币 2.使用Wormhole进行跨链代币转移和包装 3.创建和管理NFT集合 4.使用DEX进行代币交换 5.资产借贷和质押 6.使用ZK压缩发送空投 7.获取Pyth价格数据 8.进行永续合约交易 9.管理Drift账户和保险库 10.Voltr策略存款和提款 11.获取Solana资产信息和价格推断 12.使用deBridge进行跨链订单创建和执行 13.获取代币价格数据和趋势信息 14.在OKX DEX上执行代币交换", "target_tool_description": "Creates a new Drift vault.", "match_result": {"server": "InfluxDB", "tool": {"name": "create-bucket", "server": "InfluxDB", "description": "Create a new bucket", "parameter": {"name": "(string) The name of the new bucket", "orgID": "(string) The ID of the organization", "retentionPeriodSeconds": "(Optional, number) The retention period in seconds"}, "task": "Create a new storage bucket named \"project-backups\" for organization ID \"org-12345\" with a retention period of 30 days."}, "score": 0.4943704605102539}, "sample_size": 2656, "position_index": 2236, "selection_method": "position_index_2236"}
{"pass_at_k": 2, "elapsed_time": 0.0, "task": {"category": "Solana", "query": "Execute trades using delegated vaults"}, "is_correct": true, "target_server_name": "Solana Agent Kit", "target_tool_name": "tradeUsingDelegatedDriftVault", "target_server_description": "1.部署和管理SPL代币 2.使用Wormhole进行跨链代币转移和包装 3.创建和管理NFT集合 4.使用DEX进行代币交换 5.资产借贷和质押 6.使用ZK压缩发送空投 7.获取Pyth价格数据 8.进行永续合约交易 9.管理Drift账户和保险库 10.Voltr策略存款和提款 11.获取Solana资产信息和价格推断 12.使用deBridge进行跨链订单创建和执行 13.获取代币价格数据和趋势信息 14.在OKX DEX上执行代币交换", "target_tool_description": "Executes a trade using a delegated Drift vault.", "match_result": {"server": "Solana Agent Kit", "tool": {"name": "tradeUsingDelegatedDriftVault", "server": "Solana Agent Kit", "description": "Executes a trade using a delegated Drift vault.", "parameter": {"vault": "(string) Vault address", "amount": "(number) Trade amount", "symbol": "(string) Trade symbol", "action": "(string) Action (long or short)", "type": "(string) Order type (limit or market)", "price": "(number) Price"}, "task": "Execute a market order trade for 100 units of BTC with a long position using the delegated vault at address 0x1234."}, "score": 0.6349512934684753}, "sample_size": 2656, "position_index": 2243, "selection_method": "position_index_2243"}
{"pass_at_k": 3, "elapsed_time": 0.0, "task": {"category": "Solana", "query": "Retrieve position values from a Voltr vault"}, "is_correct": true, "target_server_name": "Solana Agent Kit", "target_tool_name": "voltrGetPositionValues", "target_server_description": "1.部署和管理SPL代币 2.使用Wormhole进行跨链代币转移和包装 3.创建和管理NFT集合 4.使用DEX进行代币交换 5.资产借贷和质押 6.使用ZK压缩发送空投 7.获取Pyth价格数据 8.进行永续合约交易 9.管理Drift账户和保险库 10.Voltr策略存款和提款 11.获取Solana资产信息和价格推断 12.使用deBridge进行跨链订单创建和执行 13.获取代币价格数据和趋势信息 14.在OKX DEX上执行代币交换", "target_tool_description": "Gets the current position values and total value of assets in a Voltr vault.", "match_result": {"server": "Solana Agent Kit", "tool": {"name": "voltrGetPositionValues", "server": "Solana Agent Kit", "description": "Gets the current position values and total value of assets in a Voltr vault.", "parameter": {"vaultAddress": "(string) Vault address"}, "task": "Retrieve the current position values and total asset value for the Voltr vault at address 0x1234abcd5678ef90."}, "score": 0.5830626487731934}, "sample_size": 2656, "position_index": 2250, "selection_method": "position_index_2250"}
{"pass_at_k": -1, "elapsed_time": 0.0, "task": {"category": "Solana", "query": "Retrieve inference for a specific topic"}, "is_correct": false, "target_server_name": "Solana Agent Kit", "target_tool_name": "getInferenceByTopicId", "target_server_description": "1.部署和管理SPL代币 2.使用Wormhole进行跨链代币转移和包装 3.创建和管理NFT集合 4.使用DEX进行代币交换 5.资产借贷和质押 6.使用ZK压缩发送空投 7.获取Pyth价格数据 8.进行永续合约交易 9.管理Drift账户和保险库 10.Voltr策略存款和提款 11.获取Solana资产信息和价格推断 12.使用deBridge进行跨链订单创建和执行 13.获取代币价格数据和趋势信息 14.在OKX DEX上执行代币交换", "target_tool_description": "Gets an inference for a specific topic from Allora.", "match_result": {"server": "Google Maps", "tool": {"name": "maps_place_details", "server": "Google Maps", "description": "Get detailed information about a place", "parameter": {"place_id": "(string) Place ID to get details for"}, "task": "Retrieve the detailed information for the place with ID 'ChIJN1t_tDeuEmsRUsoyG83frY4'."}, "score": 0.6263420581817627}, "sample_size": 2656, "position_index": 2256, "selection_method": "position_index_2256"}
{"pass_at_k": 63, "elapsed_time": 0.0, "task": {"category": "Solana", "query": "Check transaction status on deBridge"}, "is_correct": true, "target_server_name": "Solana Agent Kit", "target_tool_name": "checkDebridgeTransactionStatus", "target_server_description": "1.部署和管理SPL代币 2.使用Wormhole进行跨链代币转移和包装 3.创建和管理NFT集合 4.使用DEX进行代币交换 5.资产借贷和质押 6.使用ZK压缩发送空投 7.获取Pyth价格数据 8.进行永续合约交易 9.管理Drift账户和保险库 10.Voltr策略存款和提款 11.获取Solana资产信息和价格推断 12.使用deBridge进行跨链订单创建和执行 13.获取代币价格数据和趋势信息 14.在OKX DEX上执行代币交换", "target_tool_description": "Checks the status of a deBridge transaction.", "match_result": {"server": "Solana Agent Kit", "tool": {"name": "checkDebridgeTransactionStatus", "server": "Solana Agent Kit", "description": "Checks the status of a deBridge transaction.", "parameter": {"signature": "(string) Transaction signature"}, "task": "Check the status of the deBridge transaction with the signature '0x123abc456def789ghi'."}, "score": 0.47491997480392456}, "sample_size": 2656, "position_index": 2263, "selection_method": "position_index_2263"}
{"pass_at_k": -1, "elapsed_time": 0.0, "task": {"category": "OKX DEX", "query": "Retrieve supported tokens list"}, "is_correct": false, "target_server_name": "Solana Agent Kit", "target_tool_name": "getTokens", "target_server_description": "1.部署和管理SPL代币 2.使用Wormhole进行跨链代币转移和包装 3.创建和管理NFT集合 4.使用DEX进行代币交换 5.资产借贷和质押 6.使用ZK压缩发送空投 7.获取Pyth价格数据 8.进行永续合约交易 9.管理Drift账户和保险库 10.Voltr策略存款和提款 11.获取Solana资产信息和价格推断 12.使用deBridge进行跨链订单创建和执行 13.获取代币价格数据和趋势信息 14.在OKX DEX上执行代币交换", "target_tool_description": "Gets the list of supported tokens on OKX DEX.", "match_result": {"server": "ClickUp", "tool": {"name": "get_tasks", "server": "ClickUp", "description": "Get tasks from list", "parameter": {"listId": "(string) The ID of the list to get tasks from", "listName": "(Optional, string) The name of the list to get tasks from"}, "task": "Retrieve all tasks from the list with ID \"L12345\"."}, "score": 0.6876383423805237}, "sample_size": 2656, "position_index": 2270, "selection_method": "position_index_2270"}
{"pass_at_k": 1, "elapsed_time": 0.0, "task": {"category": "Starwind UI", "query": "Retrieve documentation links for UI components and guides"}, "is_correct": true, "target_server_name": "Starwind UI", "target_tool_name": "get_documentation", "target_server_description": "1.初始化Starwind UI项目 2.生成Starwind UI组件安装命令 3.生成Starwind UI组件更新命令 4.获取Starwind UI组件文档链接 5.从starwind.dev获取LLM数据 6.检测并返回当前包管理器信息", "target_tool_description": "Returns documentation links for Starwind UI components and guides", "match_result": {"server": "Starwind UI", "tool": {"name": "get_documentation", "server": "Starwind UI", "description": "Returns documentation links for Starwind UI components and guides", "parameter": {}, "task": "Retrieve the latest documentation links for Starwind UI components and guides."}, "score": 0.9599140882492065}, "sample_size": 2656, "position_index": 2276, "selection_method": "position_index_2276"}
{"pass_at_k": 1, "elapsed_time": 0.0, "task": {"category": "Strava", "query": "List athlete's club memberships"}, "is_correct": true, "target_server_name": "Strava", "target_tool_name": "list-athlete-clubs", "target_server_description": "Strava API operations, including: fetching athlete profiles and activities, retrieving segment details, managing starred segments, exporting routes in GPX/TCX formats, and accessing activity streams and zones", "target_tool_description": "Lists the clubs the authenticated athlete is a member of.", "match_result": {"server": "Strava", "tool": {"name": "list-athlete-clubs", "server": "Strava", "description": "Lists the clubs the authenticated athlete is a member of.", "parameter": {}, "task": "List all the clubs that the currently authenticated athlete is a member of."}, "score": 0.6940386891365051}, "sample_size": 2656, "position_index": 2283, "selection_method": "position_index_2283"}
{"pass_at_k": 2, "elapsed_time": 0.0, "task": {"category": "Strava", "query": "Retrieve athlete's segment efforts"}, "is_correct": true, "target_server_name": "Strava", "target_tool_name": "list-segment-efforts", "target_server_description": "Strava API operations, including: fetching athlete profiles and activities, retrieving segment details, managing starred segments, exporting routes in GPX/TCX formats, and accessing activity streams and zones", "target_tool_description": "Lists the authenticated athlete's efforts on a given segment, optionally filtered by date.", "match_result": {"server": "Strava", "tool": {"name": "list-segment-efforts", "server": "Strava", "description": "Lists the authenticated athlete's efforts on a given segment, optionally filtered by date.", "parameter": {"segmentId": "(Required, number) The ID of the segment.", "startDateLocal": "(Optional, string) Filter efforts starting after this date-time (ISO 8601 format).", "endDateLocal": "(Optional, string) Filter efforts ending before this date-time (ISO 8601 format).", "perPage": "(Optional, number) Number of results per page. Default: 30"}, "task": "Retrieve the authenticated athlete's efforts on segment ID 12345 between June 1, 2024, and June 30, 2024, limited to 20 results per page."}, "score": 0.5785436034202576}, "sample_size": 2656, "position_index": 2289, "selection_method": "position_index_2289"}
{"pass_at_k": 1, "elapsed_time": 0.0, "task": {"category": "Strava", "query": "Retrieve athlete's heart rate and power zones"}, "is_correct": true, "target_server_name": "Strava", "target_tool_name": "get-athlete-zones", "target_server_description": "Strava API operations, including: fetching athlete profiles and activities, retrieving segment details, managing starred segments, exporting routes in GPX/TCX formats, and accessing activity streams and zones", "target_tool_description": "Retrieves the authenticated athlete's configured heart rate and power zones.", "match_result": {"server": "Strava", "tool": {"name": "get-athlete-zones", "server": "Strava", "description": "Retrieves the authenticated athlete's configured heart rate and power zones.", "parameter": {}, "task": "Retrieve the authenticated athlete's current heart rate and power zone configurations."}, "score": 0.7066958546638489}, "sample_size": 2656, "position_index": 2296, "selection_method": "position_index_2296"}
{"pass_at_k": 21, "elapsed_time": 0.0, "task": {"category": "Figma", "query": "Retrieve information about design nodes"}, "is_correct": true, "target_server_name": "Talk To Figma", "target_tool_name": "get_nodes_info", "target_server_description": "Figma文档操作，包括：获取文档信息、节点操作（创建/修改/删除）、文本处理、布局设置、颜色与样式管理、组件实例操作、图像导出及通信通道管理", "target_tool_description": "Get detailed information about multiple nodes by providing an array of node IDs", "match_result": {"server": "Talk To Figma", "tool": {"name": "get_nodes_info", "server": "Talk To Figma", "description": "Get detailed information about multiple nodes by providing an array of node IDs", "parameter": {}, "task": "Retrieve detailed information for the nodes with IDs [101, 102, 103, 104]."}, "score": 0.6273550391197205}, "sample_size": 2656, "position_index": 2303, "selection_method": "position_index_2303"}
{"pass_at_k": 41, "elapsed_time": 0.0, "task": {"category": "Figma", "query": "Set default connector style in FigJam"}, "is_correct": true, "target_server_name": "Talk To Figma", "target_tool_name": "set_default_connector", "target_server_description": "Figma文档操作，包括：获取文档信息、节点操作（创建/修改/删除）、文本处理、布局设置、颜色与样式管理、组件实例操作、图像导出及通信通道管理", "target_tool_description": "Set a copied FigJam connector as the default connector style for creating connections (must be set before creating connections)", "match_result": {"server": "Talk To Figma", "tool": {"name": "set_default_connector", "server": "Talk To Figma", "description": "Set a copied FigJam connector as the default connector style for creating connections (must be set before creating connections)", "parameter": {}, "task": "Set the copied FigJam connector as the default style for creating new connections in the current session."}, "score": 0.5081216096878052}, "sample_size": 2656, "position_index": 2309, "selection_method": "position_index_2309"}
{"pass_at_k": 2, "elapsed_time": 0.0, "task": {"category": "Figma", "query": "Batch update text nodes"}, "is_correct": true, "target_server_name": "Talk To Figma", "target_tool_name": "set_multiple_text_contents", "target_server_description": "Figma文档操作，包括：获取文档信息、节点操作（创建/修改/删除）、文本处理、布局设置、颜色与样式管理、组件实例操作、图像导出及通信通道管理", "target_tool_description": "Batch update multiple text nodes efficiently", "match_result": {"server": "Talk To Figma", "tool": {"name": "set_multiple_text_contents", "server": "Talk To Figma", "description": "Batch update multiple text nodes efficiently", "parameter": {}, "task": "Update the content of three text nodes in a document with the following new values: \"Introduction\", \"Main Content\", and \"Conclusion\"."}, "score": 0.7536517977714539}, "sample_size": 2656, "position_index": 2316, "selection_method": "position_index_2316"}
{"pass_at_k": 1, "elapsed_time": 0.0, "task": {"category": "Figma", "query": "Modify stroke properties of a design element"}, "is_correct": true, "target_server_name": "Talk To Figma", "target_tool_name": "set_stroke_color", "target_server_description": "Figma文档操作，包括：获取文档信息、节点操作（创建/修改/删除）、文本处理、布局设置、颜色与样式管理、组件实例操作、图像导出及通信通道管理", "target_tool_description": "Set the stroke color and weight of a node", "match_result": {"server": "Talk To Figma", "tool": {"name": "set_stroke_color", "server": "Talk To Figma", "description": "Set the stroke color and weight of a node", "parameter": {}, "task": "Set the stroke color to red and the stroke weight to 3 pixels for the selected node."}, "score": 0.6983249187469482}, "sample_size": 2656, "position_index": 2323, "selection_method": "position_index_2323"}
{"pass_at_k": 1, "elapsed_time": 0.0, "task": {"category": "Figma", "query": "Duplicate a node with optional offset"}, "is_correct": true, "target_server_name": "Talk To Figma", "target_tool_name": "clone_node", "target_server_description": "Figma文档操作，包括：获取文档信息、节点操作（创建/修改/删除）、文本处理、布局设置、颜色与样式管理、组件实例操作、图像导出及通信通道管理", "target_tool_description": "Create a copy of an existing node with optional position offset", "match_result": {"server": "Talk To Figma", "tool": {"name": "clone_node", "server": "Talk To Figma", "description": "Create a copy of an existing node with optional position offset", "parameter": {}, "task": "Create a duplicate of the selected node with a 20-pixel horizontal offset to the right."}, "score": 0.8980787396430969}, "sample_size": 2656, "position_index": 2329, "selection_method": "position_index_2329"}
{"pass_at_k": -1, "elapsed_time": 0.0, "task": {"category": "Figma", "query": "Join a communication channel"}, "is_correct": false, "target_server_name": "Talk To Figma", "target_tool_name": "join_channel", "target_server_description": "Figma文档操作，包括：获取文档信息、节点操作（创建/修改/删除）、文本处理、布局设置、颜色与样式管理、组件实例操作、图像导出及通信通道管理", "target_tool_description": "Join a specific channel to communicate with Figma", "match_result": {"server": "Slack", "tool": {"name": "channels_list", "server": "Slack", "description": "Get list of channels", "parameter": {"channel_types": "(array) Possible channel types. Allowed values: 'mpim', 'im', 'public_channel', 'private_channel'.", "sort": "(string) Type of sorting. Allowed values: 'popularity' - sort by number of members/participants in each channel."}, "task": "Retrieve a sorted list of public channels based on their member count."}, "score": 0.8188477754592896}, "sample_size": 2656, "position_index": 2336, "selection_method": "position_index_2336"}
{"pass_at_k": 5, "elapsed_time": 0.0, "task": {"category": "Telegram", "query": "Retrieve a list of chats with pagination"}, "is_correct": true, "target_server_name": "Telegram", "target_tool_name": "get_chats", "target_server_description": "Telegram chat and user management, including chat operations (create/edit/delete), message handling (send/edit/delete), contact management (add/block/import), profile updates, and privacy settings", "target_tool_description": "Get a paginated list of chats.", "match_result": {"server": "Telegram", "tool": {"name": "get_chats", "server": "Telegram", "description": "Get a paginated list of chats.", "parameter": {"page": "(int) Page number (1-indexed)", "page_size": "(int) Number of chats per page"}, "task": "Retrieve the first 20 chats from the paginated list, starting from page 1."}, "score": 0.6362749338150024}, "sample_size": 2656, "position_index": 2343, "selection_method": "position_index_2343"}
{"pass_at_k": 1, "elapsed_time": 0.0, "task": {"category": "Telegram", "query": "Remove photo from chat, group, or channel"}, "is_correct": true, "target_server_name": "Telegram", "target_tool_name": "delete_chat_photo", "target_server_description": "Telegram chat and user management, including chat operations (create/edit/delete), message handling (send/edit/delete), contact management (add/block/import), profile updates, and privacy settings", "target_tool_description": "Remove chat/group/channel photo.", "match_result": {"server": "Telegram", "tool": {"name": "delete_chat_photo", "server": "Telegram", "description": "Remove chat/group/channel photo.", "parameter": {"chat_id": "(int) ID of the chat"}, "task": "Remove the profile photo from the chat with ID 123456789."}, "score": 0.6369780898094177}, "sample_size": 2656, "position_index": 2349, "selection_method": "position_index_2349"}
{"pass_at_k": 20, "elapsed_time": 0.0, "task": {"category": "Telegram", "query": "Ban a user from a chat"}, "is_correct": true, "target_server_name": "Telegram", "target_tool_name": "ban_user", "target_server_description": "Telegram chat and user management, including chat operations (create/edit/delete), message handling (send/edit/delete), contact management (add/block/import), profile updates, and privacy settings", "target_tool_description": "Ban user from a chat.", "match_result": {"server": "Telegram", "tool": {"name": "ban_user", "server": "Telegram", "description": "Ban user from a chat.", "parameter": {"chat_id": "(int) ID of the chat", "user_id": "(int) ID of the user to ban"}, "task": "Ban the user with ID 12345 from the chat with ID 67890."}, "score": 0.582461953163147}, "sample_size": 2656, "position_index": 2356, "selection_method": "position_index_2356"}
{"pass_at_k": 24, "elapsed_time": 0.0, "task": {"category": "Telegram", "query": "Retrieve paginated messages from a chat"}, "is_correct": true, "target_server_name": "Telegram", "target_tool_name": "get_messages", "target_server_description": "Telegram chat and user management, including chat operations (create/edit/delete), message handling (send/edit/delete), contact management (add/block/import), profile updates, and privacy settings", "target_tool_description": "Get paginated messages.", "match_result": {"server": "Telegram", "tool": {"name": "get_messages", "server": "Telegram", "description": "Get paginated messages.", "parameter": {"chat_id": "(int) ID of the chat", "page": "(int) Page number (1-indexed)", "page_size": "(int) Number of messages per page"}, "task": "Retrieve the second page of messages from chat ID 12345, displaying 20 messages per page."}, "score": 0.5465012788772583}, "sample_size": 2656, "position_index": 2362, "selection_method": "position_index_2362"}
{"pass_at_k": -1, "elapsed_time": 0.0, "task": {"category": "Telegram", "query": "Pin a message in a chat"}, "is_correct": false, "target_server_name": "Telegram", "target_tool_name": "pin_message", "target_server_description": "Telegram chat and user management, including chat operations (create/edit/delete), message handling (send/edit/delete), contact management (add/block/import), profile updates, and privacy settings", "target_tool_description": "Pin a message.", "match_result": {"server": "OpenDota", "tool": {"name": "get_player_wordcloud", "server": "OpenDota", "description": "Get most common words used by player in chat", "parameter": {}, "task": "Generate a word cloud showing the most frequently used words by a specific player in their chat messages."}, "score": 0.7152043581008911}, "sample_size": 2656, "position_index": 2369, "selection_method": "position_index_2369"}
{"pass_at_k": 8, "elapsed_time": 0.0, "task": {"category": "Telegram", "query": "Retrieve list of contacts"}, "is_correct": true, "target_server_name": "Telegram", "target_tool_name": "list_contacts", "target_server_description": "Telegram chat and user management, including chat operations (create/edit/delete), message handling (send/edit/delete), contact management (add/block/import), profile updates, and privacy settings", "target_tool_description": "List all contacts.", "match_result": {"server": "Telegram", "tool": {"name": "list_contacts", "server": "Telegram", "description": "List all contacts.", "parameter": {}, "task": "List all available contacts in the address book."}, "score": 0.6638834476470947}, "sample_size": 2656, "position_index": 2376, "selection_method": "position_index_2376"}
{"pass_at_k": 1, "elapsed_time": 0.0, "task": {"category": "Telegram", "query": "Bulk import contact information"}, "is_correct": true, "target_server_name": "Telegram", "target_tool_name": "import_contacts", "target_server_description": "Telegram chat and user management, including chat operations (create/edit/delete), message handling (send/edit/delete), contact management (add/block/import), profile updates, and privacy settings", "target_tool_description": "Bulk import contacts.", "match_result": {"server": "Telegram", "tool": {"name": "import_contacts", "server": "Telegram", "description": "Bulk import contacts.", "parameter": {"contacts": "(list of dict) List of contact dictionaries"}, "task": "Import a list of 50 contacts with their names, email addresses, and phone numbers into the system."}, "score": 0.7579520344734192}, "sample_size": 2656, "position_index": 2382, "selection_method": "position_index_2382"}
{"pass_at_k": 10, "elapsed_time": 0.0, "task": {"category": "Telegram", "query": "Update user profile information"}, "is_correct": true, "target_server_name": "Telegram", "target_tool_name": "update_profile", "target_server_description": "Telegram chat and user management, including chat operations (create/edit/delete), message handling (send/edit/delete), contact management (add/block/import), profile updates, and privacy settings", "target_tool_description": "Update your profile.", "match_result": {"server": "Telegram", "tool": {"name": "update_profile", "server": "Telegram", "description": "Update your profile.", "parameter": {"first_name": "(str) New first name", "last_name": "(Optional, str) New last name", "about": "(Optional, str) New about text"}, "task": "Update your profile with the first name \"Alex\", last name \"Smith\", and a brief description stating \"Software Engineer specializing in backend development.\""}, "score": 0.713607668876648}, "sample_size": 2656, "position_index": 2389, "selection_method": "position_index_2389"}
{"pass_at_k": 10, "elapsed_time": 0.0, "task": {"category": "Telegram", "query": "Resolve Telegram username to ID"}, "is_correct": true, "target_server_name": "Telegram", "target_tool_name": "resolve_username", "target_server_description": "Telegram chat and user management, including chat operations (create/edit/delete), message handling (send/edit/delete), contact management (add/block/import), profile updates, and privacy settings", "target_tool_description": "Resolve a username to ID.", "match_result": {"server": "Telegram", "tool": {"name": "resolve_username", "server": "Telegram", "description": "Resolve a username to ID.", "parameter": {"username": "(str) Username to resolve"}, "task": "Resolve the user ID associated with the username 'john_doe'."}, "score": 0.6220729351043701}, "sample_size": 2656, "position_index": 2396, "selection_method": "position_index_2396"}
{"pass_at_k": 9, "elapsed_time": 0.0, "task": {"category": "Telegram", "query": "Mute notifications in a chat"}, "is_correct": true, "target_server_name": "Telegram", "target_tool_name": "mute_chat", "target_server_description": "Telegram chat and user management, including chat operations (create/edit/delete), message handling (send/edit/delete), contact management (add/block/import), profile updates, and privacy settings", "target_tool_description": "Mute notifications for a chat.", "match_result": {"server": "Telegram", "tool": {"name": "mute_chat", "server": "Telegram", "description": "Mute notifications for a chat.", "parameter": {"chat_id": "(int) ID of the chat"}, "task": "Mute notifications for the chat with ID 12345."}, "score": 0.6091724634170532}, "sample_size": 2656, "position_index": 2402, "selection_method": "position_index_2402"}
{"pass_at_k": 1, "elapsed_time": 0.0, "task": {"category": "Telegram", "query": "Mark dialog as read"}, "is_correct": true, "target_server_name": "Telegram-Client", "target_tool_name": "tg_read", "target_server_description": "Telegram account operations, including: account information retrieval, dialog listing and filtering, message marking as read, dialog message retrieval, and message sending", "target_tool_description": "Mark dialog as read.", "match_result": {"server": "Telegram-Client", "tool": {"name": "tg_read", "server": "Telegram-Client", "description": "Mark dialog as read.", "parameter": {}, "task": "Mark all unread messages in the current Telegram conversation as read."}, "score": 0.7502731084823608}, "sample_size": 2656, "position_index": 2409, "selection_method": "position_index_2409"}
{"pass_at_k": 19, "elapsed_time": 0.0, "task": {"category": "Terminal", "query": "List contents of a directory"}, "is_correct": true, "target_server_name": "Terminal-Control", "target_tool_name": "list_directory", "target_server_description": "1.执行终端命令并返回结果 2.获取命令执行历史 3.获取和更改当前工作目录 4.列出目录内容 5.文件内容操作（写入、读取、插入、删除、更新）", "target_tool_description": "List files and subdirectories in the specified directory.", "match_result": {"server": "Terminal-Control", "tool": {"name": "list_directory", "server": "Terminal-Control", "description": "List files and subdirectories in the specified directory.", "parameter": {"path": "(Optional, string) Directory path to list contents (default: current directory)"}, "task": "List all files and subdirectories in the \"/documents/projects\" directory."}, "score": 0.6809120178222656}, "sample_size": 2656, "position_index": 2416, "selection_method": "position_index_2416"}
{"pass_at_k": 3, "elapsed_time": 0.0, "task": {"category": "TFT", "query": "Retrieve match history for the current player"}, "is_correct": true, "target_server_name": "TFT-Match-Analyzer", "target_tool_name": "tft_match_history", "target_server_description": "1. Get TFT match history for the current player 2. Get detailed information about a specific TFT match", "target_tool_description": "Get TFT match history for the current player.", "match_result": {"server": "TFT-Match-Analyzer", "tool": {"name": "tft_match_history", "server": "TFT-Match-Analyzer", "description": "Get TFT match history for the current player.", "parameter": {"count": "(Optional, number) Number of matches to retrieve. Defaults to 20", "start": "(Optional, number) Start index for pagination. Defaults to 0"}, "task": "Retrieve the last 15 matches from the current player's TFT match history, starting from the 5th most recent match."}, "score": 0.7365915179252625}, "sample_size": 2656, "position_index": 2422, "selection_method": "position_index_2422"}
{"pass_at_k": 1, "elapsed_time": 0.0, "task": {"category": "TickTick", "query": "Delete a task from a project"}, "is_correct": true, "target_server_name": "TickTick", "target_tool_name": "delete_task", "target_server_description": "1.任务管理,包括:创建、更新、完成和删除任务 2.项目管理,包括:创建、更新、删除项目及获取项目详情", "target_tool_description": "Delete a task from a project", "match_result": {"server": "TickTick", "tool": {"name": "delete_task", "server": "TickTick", "description": "Delete a task from a project", "parameter": {"taskId": "(string) Task identifier", "projectId": "(string) Project identifier"}, "task": "Remove the task with ID 'TASK123' from the project identified as 'PROJ456'."}, "score": 1.0000014305114746}, "sample_size": 2656, "position_index": 2429, "selection_method": "position_index_2429"}
{"pass_at_k": 1, "elapsed_time": 0.0, "task": {"category": "TickTick", "query": "Delete a project"}, "is_correct": true, "target_server_name": "TickTick", "target_tool_name": "delete_project", "target_server_description": "1.任务管理,包括:创建、更新、完成和删除任务 2.项目管理,包括:创建、更新、删除项目及获取项目详情", "target_tool_description": "Delete a project", "match_result": {"server": "TickTick", "tool": {"name": "delete_project", "server": "TickTick", "description": "Delete a project", "parameter": {"projectId": "(string) Project identifier"}, "task": "Delete the project with the identifier \"PRJ-2024-001\"."}, "score": 0.9999996423721313}, "sample_size": 2656, "position_index": 2435, "selection_method": "position_index_2435"}
{"pass_at_k": 1, "elapsed_time": 0.0, "task": {"category": "Typesense", "query": "Retrieve documents by ID from collections"}, "is_correct": true, "target_server_name": "Typesense", "target_tool_name": "typesense_get_document", "target_server_description": "1.在Typesense集合中搜索文档 2.通过ID从集合中检索特定文档 3.获取Typesense集合的统计信息 4.分析集合结构和内容 5.获取集合的有效搜索查询建议", "target_tool_description": "Retrieve specific documents by ID from collections", "match_result": {"server": "Typesense", "tool": {"name": "typesense_get_document", "server": "Typesense", "description": "Retrieve specific documents by ID from collections", "parameter": {"collection_name": "(string) The name of the collection", "document_id": "(string) The ID of the document to retrieve"}, "task": "Retrieve the document with ID \"user123\" from the \"customers\" collection."}, "score": 0.9848215579986572}, "sample_size": 2656, "position_index": 2442, "selection_method": "position_index_2442"}
{"pass_at_k": 1, "elapsed_time": 0.0, "task": {"category": "Travel Planner", "query": "Retrieve timezone details for a location"}, "is_correct": true, "target_server_name": "Travel Planner", "target_tool_name": "getTimeZone", "target_server_description": "1.使用Google Places API搜索地点 2.获取特定地点的详细信息 3.计算两个位置之间的路线 4.获取位置时区信息", "target_tool_description": "Get timezone information for a location", "match_result": {"server": "Travel Planner", "tool": {"name": "getTimeZone", "server": "Travel Planner", "description": "Get timezone information for a location", "parameter": {"location": "(string) Latitude and longitude coordinates", "timestamp": "(optional) Timestamp for time zone calculation"}, "task": "Get the timezone information for the coordinates \"40.7128, -74.0060\" at the current timestamp."}, "score": 0.9746049642562866}, "sample_size": 2656, "position_index": 2449, "selection_method": "position_index_2449"}
{"pass_at_k": 9, "elapsed_time": 0.0, "task": {"category": "Unity3D", "query": "Select game objects in Unity hierarchy"}, "is_correct": true, "target_server_name": "Unity3d Game Engine", "target_tool_name": "select_gameobject", "target_server_description": "Unity游戏开发工具集，包括：执行菜单项、选择游戏对象、更新组件、安装包、运行测试、发送控制台日志、添加资源到场景", "target_tool_description": "Selects game objects in the Unity hierarchy by path or instance ID", "match_result": {"server": "Unity3d Game Engine", "tool": {"name": "select_gameobject", "server": "Unity3d Game Engine", "description": "Selects game objects in the Unity hierarchy by path or instance ID", "parameter": {"pathOrId": "(string) The path or instance ID of the game object to select"}, "task": "Select the game object with the path \"Player/Weapons/Sword\" in the Unity hierarchy."}, "score": 0.5590757131576538}, "sample_size": 2656, "position_index": 2455, "selection_method": "position_index_2455"}
{"pass_at_k": 1, "elapsed_time": 0.0, "task": {"category": "Unity", "query": "Retrieve detailed information about the current scene"}, "is_correct": true, "target_server_name": "Unity Integration (Advanced)", "target_tool_name": "get_current_scene_info", "target_server_description": "Unity Editor operations, including: project and editor state information retrieval, scene and GameObject information retrieval, C# code execution, log retrieval and filtering, file operations (read/write/edit), directory listing and searching, asset type filtering", "target_tool_description": "Get detailed information about the current scene", "match_result": {"server": "Unity Integration (Advanced)", "tool": {"name": "get_current_scene_info", "server": "Unity Integration (Advanced)", "description": "Get detailed information about the current scene", "parameter": {}, "task": "Retrieve the detailed information about the currently active scene."}, "score": 0.9877426624298096}, "sample_size": 2656, "position_index": 2462, "selection_method": "position_index_2462"}
{"pass_at_k": 83, "elapsed_time": 0.0, "task": {"category": "Unity", "query": "Create or overwrite files in Unity project"}, "is_correct": true, "target_server_name": "Unity Integration (Advanced)", "target_tool_name": "write_file", "target_server_description": "Unity Editor operations, including: project and editor state information retrieval, scene and GameObject information retrieval, C# code execution, log retrieval and filtering, file operations (read/write/edit), directory listing and searching, asset type filtering", "target_tool_description": "Create or overwrite a file with new content", "match_result": {"server": "Unity Integration (Advanced)", "tool": {"name": "write_file", "server": "Unity Integration (Advanced)", "description": "Create or overwrite a file with new content", "parameter": {"path": "(string) Path to the file, can be absolute or relative to the Unity project's Assets folder", "content": "(string) Content to write to the file"}, "task": "Create a new file named \"PlayerSettings.json\" in the Unity project's Assets folder with the content `{\"playerName\": \"Hero\", \"health\": 100, \"level\": 1}`."}, "score": 0.45701873302459717}, "sample_size": 2656, "position_index": 2469, "selection_method": "position_index_2469"}
{"pass_at_k": -1, "elapsed_time": 0.0, "task": {"category": "Unity", "query": "Search for assets by type"}, "is_correct": false, "target_server_name": "Unity Integration (Advanced)", "target_tool_name": "find_assets_by_type", "target_server_description": "Unity Editor operations, including: project and editor state information retrieval, scene and GameObject information retrieval, C# code execution, log retrieval and filtering, file operations (read/write/edit), directory listing and searching, asset type filtering", "target_tool_description": "Find all assets of a specific type (e.g., Material, Prefab)", "match_result": {"server": "Godot", "tool": {"name": "create_scene", "server": "Godot", "description": "Create new scenes with specified root node types", "parameter": {}, "task": "Create a new scene with a root node type of \"3D environment\" for a game development project."}, "score": 0.6752171516418457}, "sample_size": 2656, "position_index": 2475, "selection_method": "position_index_2475"}
{"pass_at_k": 7, "elapsed_time": 0.0, "task": {"category": "Video Editor", "query": "Create edits from a single video file"}, "is_correct": true, "target_server_name": "Video Editor", "target_tool_name": "generate-edit-from-single-video", "target_server_description": "1.从URL添加视频到用户库并分析 2.使用嵌入和关键词搜索视频 3.根据指定条件从一组视频文件生成渲染视频编辑 4.根据指定条件从单个输入视频文件生成编辑", "target_tool_description": "Generates an edit from a single input video file based on specified criteria.", "match_result": {"server": "Video Editor", "tool": {"name": "generate-edit-from-single-video", "server": "Video Editor", "description": "Generates an edit from a single input video file based on specified criteria.", "parameter": {}, "task": "Generate a 30-second highlight reel from the uploaded video file, focusing on the most dynamic and engaging moments."}, "score": 0.6169189214706421}, "sample_size": 2656, "position_index": 2482, "selection_method": "position_index_2482"}
{"pass_at_k": -1, "elapsed_time": 0.0, "task": {"category": "Google Street View", "query": "Start a journey at a virtual location"}, "is_correct": false, "target_server_name": "Virtual location (Google Street View,etc.)", "target_tool_name": "start_traveler_journey", "target_server_description": "1.获取和设置旅行虚拟角色的位置、目的地和属性 2.控制旅行虚拟角色的旅程 3.在Bluesky SNS上发布、回复和点赞文章 4.获取和设置环境及图像设置", "target_tool_description": "Starts the journey at the destination (moveMode=realtime only).", "match_result": {"server": "Travel Planner", "tool": {"name": "calculateRoute", "server": "Travel Planner", "description": "Calculate route between two locations", "parameter": {"origin": "(string) Starting location", "destination": "(string) Ending location", "mode": "(optional) Travel mode (driving, walking, bicycling, transit)"}, "task": "Calculate the fastest driving route from New York City to Boston."}, "score": 0.7538406848907471}, "sample_size": 2656, "position_index": 2489, "selection_method": "position_index_2489"}
{"pass_at_k": 3, "elapsed_time": 0.0, "task": {"category": "Bluesky SNS", "query": "Retrieve articles from custom feeds"}, "is_correct": true, "target_server_name": "Virtual location (Google Street View,etc.)", "target_tool_name": "get_sns_feeds", "target_server_description": "1.获取和设置旅行虚拟角色的位置、目的地和属性 2.控制旅行虚拟角色的旅程 3.在Bluesky SNS上发布、回复和点赞文章 4.获取和设置环境及图像设置", "target_tool_description": "Gets Bluesky SNS articles for the specified custom feed (feeds containing a specific tag).", "match_result": {"server": "Virtual location (Google Street View,etc.)", "tool": {"name": "get_sns_feeds", "server": "Virtual location (Google Street View,etc.)", "description": "Gets Bluesky SNS articles for the specified custom feed (feeds containing a specific tag).", "parameter": {}, "task": "Retrieve the latest 10 articles from a Bluesky custom feed tagged with \"technology\"."}, "score": 0.5736948251724243}, "sample_size": 2656, "position_index": 2495, "selection_method": "position_index_2495"}
{"pass_at_k": 2, "elapsed_time": 0.0, "task": {"category": "VolcEngine TOS", "query": "List all buckets owned by the authenticated user"}, "is_correct": true, "target_server_name": "VolcEngine TOS", "target_tool_name": "list_buckets", "target_server_description": "Volcengine TOS operations, including: listing buckets, listing objects in a bucket, and retrieving objects from TOS", "target_tool_description": "Returns a list of all buckets owned by the authenticated sender of the request", "match_result": {"server": "VolcEngine TOS", "tool": {"name": "list_buckets", "server": "VolcEngine TOS", "description": "Returns a list of all buckets owned by the authenticated sender of the request", "parameter": {}, "task": "List all available storage buckets owned by the authenticated user."}, "score": 0.6585832834243774}, "sample_size": 2656, "position_index": 2502, "selection_method": "position_index_2502"}
{"pass_at_k": 16, "elapsed_time": 0.0, "task": {"category": "whale-tracker-mcp", "query": "Retrieve transaction details by ID"}, "is_correct": true, "target_server_name": "whale-tracker-mcp", "target_tool_name": "get_transaction_details", "target_server_description": "1. Fetch recent whale transactions with filters 2. Retrieve detailed transaction information by ID", "target_tool_description": "Retrieve detailed information about a specific transaction by its ID.", "match_result": {"server": "whale-tracker-mcp", "tool": {"name": "get_transaction_details", "server": "whale-tracker-mcp", "description": "Retrieve detailed information about a specific transaction by its ID.", "parameter": {"transaction_id": "(string) The ID of the transaction to retrieve details for."}, "task": "Retrieve the details of the transaction with ID 'TX123456789' from the database."}, "score": 0.6416747570037842}, "sample_size": 2656, "position_index": 2508, "selection_method": "position_index_2508"}
{"pass_at_k": 1, "elapsed_time": 0.0, "task": {"category": "Wikidata", "query": "Retrieve properties for a Wikidata entity"}, "is_correct": true, "target_server_name": "Wikidata MCP", "target_tool_name": "get_properties", "target_server_description": "1. Search for Wikidata entity and property IDs 2. Retrieve properties associated with a Wikidata entity ID 3. Execute SPARQL queries on Wikidata 4. Retrieve labels and descriptions for Wikidata entity IDs", "target_tool_description": "Get the properties associated with a given Wikidata entity ID.", "match_result": {"server": "Wikidata MCP", "tool": {"name": "get_properties", "server": "Wikidata MCP", "description": "Get the properties associated with a given Wikidata entity ID.", "parameter": {"entity_id": "(str) The ID of the entity to get properties for."}, "task": "Retrieve all properties associated with the Wikidata entity with ID \"Q42\"."}, "score": 0.7396692633628845}, "sample_size": 2656, "position_index": 2515, "selection_method": "position_index_2515"}
{"pass_at_k": 1, "elapsed_time": 0.0, "task": {"category": "Windows CLI", "query": "Set up a new SSH connection"}, "is_correct": true, "target_server_name": "Windows CLI", "target_tool_name": "create_ssh_connection", "target_server_description": "1.在指定shell中执行命令 2.获取执行命令的历史记录 3.通过SSH在远程系统上执行命令 4.SSH连接管理（创建/读取/更新/删除） 5.获取服务器当前工作目录", "target_tool_description": "Create a new SSH connection", "match_result": {"server": "Windows CLI", "tool": {"name": "create_ssh_connection", "server": "Windows CLI", "description": "Create a new SSH connection", "parameter": {"connectionId": "(string) ID for the new SSH connection", "connectionConfig": "(object) Connection configuration details including host, port, username, and either password or privateKeyPath"}, "task": "Establish a new SSH connection to the server at `example.com` on port `22` using the username `admin` and the private key located at `/home/user/.ssh/id_rsa`."}, "score": 0.9875997304916382}, "sample_size": 2656, "position_index": 2522, "selection_method": "position_index_2522"}
{"pass_at_k": 3, "elapsed_time": 0.0, "task": {"category": "World Bank", "query": "List available indicators in open data"}, "is_correct": true, "target_server_name": "World Bank data API", "target_tool_name": "list_indicators", "target_server_description": "1.列出世界银行开放数据API中的可用国家 2.列出世界银行开放数据API中的可用指标 3.分析国家指标，如人口分段、贫困数字等", "target_tool_description": "Lists available indicators in the World Bank open data API", "match_result": {"server": "World Bank data API", "tool": {"name": "list_indicators", "server": "World Bank data API", "description": "Lists available indicators in the World Bank open data API", "parameter": {}, "task": "List all available economic indicators from the World Bank open data API."}, "score": 0.5986639261245728}, "sample_size": 2656, "position_index": 2528, "selection_method": "position_index_2528"}
{"pass_at_k": 2, "elapsed_time": 0.0, "task": {"category": "Xero", "query": "Retrieve balance sheet report"}, "is_correct": true, "target_server_name": "Xero-mcp-server", "target_tool_name": "get_balance_sheet", "target_server_description": "Xero accounting operations, including: OAuth2 authentication, bank transactions creation, contacts management, balance sheet retrieval, accounts listing, invoices management, journals listing, organizations details retrieval, payments management, and quotes listing", "target_tool_description": "Retrieves report for balance sheet", "match_result": {"server": "Xero-mcp-server", "tool": {"name": "get_balance_sheet", "server": "Xero-mcp-server", "description": "Retrieves report for balance sheet", "parameter": {}, "task": "Retrieve the balance sheet report for the current fiscal year."}, "score": 0.7777239084243774}, "sample_size": 2656, "position_index": 2535, "selection_method": "position_index_2535"}
{"pass_at_k": 1, "elapsed_time": 0.0, "task": {"category": "Xero", "query": "Retrieve payments for invoices and credit notes"}, "is_correct": true, "target_server_name": "Xero-mcp-server", "target_tool_name": "list_payments", "target_server_description": "Xero accounting operations, including: OAuth2 authentication, bank transactions creation, contacts management, balance sheet retrieval, accounts listing, invoices management, journals listing, organizations details retrieval, payments management, and quotes listing", "target_tool_description": "Retrieves payments for invoices and credit notes", "match_result": {"server": "Xero-mcp-server", "tool": {"name": "list_payments", "server": "Xero-mcp-server", "description": "Retrieves payments for invoices and credit notes", "parameter": {}, "task": "Retrieve all payments associated with invoices and credit notes from the last 30 days."}, "score": 0.9710054397583008}, "sample_size": 2656, "position_index": 2542, "selection_method": "position_index_2542"}
{"pass_at_k": 58, "elapsed_time": 0.0, "task": {"category": "XMind", "query": "Compare and analyze multiple mind maps"}, "is_correct": true, "target_server_name": "XMind", "target_tool_name": "read_multiple_xmind_files", "target_server_description": "XMind文件处理工具集,包括:解析分析思维导图结构、提取TODO任务、递归扫描XMind文件、多文件对比分析、文件名模式搜索、智能模糊路径匹配、节点ID精确检索、多条件内容搜索", "target_tool_description": "Process multiple files simultaneously, comparing and analyzing across files.", "match_result": {"server": "XMind", "tool": {"name": "read_multiple_xmind_files", "server": "XMind", "description": "Process multiple files simultaneously, comparing and analyzing across files.", "parameter": {}, "task": "Compare and analyze the content of three XMind files to identify common themes and differences."}, "score": 0.4973375201225281}, "sample_size": 2656, "position_index": 2548, "selection_method": "position_index_2548"}
{"pass_at_k": 1, "elapsed_time": 0.0, "task": {"category": "YouTube", "query": "Search for videos on YouTube"}, "is_correct": true, "target_server_name": "YouTube", "target_tool_name": "videos.searchVideos", "target_server_description": "YouTube视频与频道管理,包括:视频详情获取、多语言字幕检索、视频搜索、频道详情获取、频道视频列表获取、播放列表详情获取、播放列表内容获取", "target_tool_description": "Search for videos across YouTube.", "match_result": {"server": "YouTube", "tool": {"name": "videos.searchVideos", "server": "YouTube", "description": "Search for videos across YouTube.", "parameter": {"query": "(string) The search term.", "maxResults": "(number) The maximum number of results to return."}, "task": "Search for the top 5 most recent tutorial videos on Python programming."}, "score": 0.7734758257865906}, "sample_size": 2656, "position_index": 2555, "selection_method": "position_index_2555"}
{"pass_at_k": 3, "elapsed_time": 0.0, "task": {"category": "mcp_weather", "query": "Get current time in a specified timezone"}, "is_correct": true, "target_server_name": "mcp_weather", "target_tool_name": "get_current_datetime", "target_server_description": "1.获取指定城市的当前天气信息 2.获取指定城市在特定日期范围内的天气信息 3.获取指定时区的当前时间", "target_tool_description": "Retrieves the current time in a specified timezone.", "match_result": {"server": "mcp_weather", "tool": {"name": "get_current_datetime", "server": "mcp_weather", "description": "Retrieves the current time in a specified timezone.", "parameter": {"timezone_name": "(string, required) IANA timezone name (e.g., 'America/New_York', 'Europe/London'). Use UTC timezone if no timezone provided by the user."}, "task": "Retrieve the current time in the 'Asia/Tokyo' timezone. If no timezone is specified, use UTC."}, "score": 0.6371520757675171}, "sample_size": 2656, "position_index": 2562, "selection_method": "position_index_2562"}
{"pass_at_k": 1, "elapsed_time": 0.0, "task": {"category": "UNKNOWN", "query": "Perform basic arithmetic operations"}, "is_correct": true, "target_server_name": "Everything", "target_tool_name": "add", "target_server_description": "1.回显输入消息 2.数字相加 3.长时间操作进度通知 4.使用MCP采样功能演示LLM采样能力 5.返回小型测试图像 6.打印所有环境变量 7.演示如何使用注释提供内容元数据 8.返回MCP客户端可使用的资源引用", "target_tool_description": "Adds two numbers together", "match_result": {"server": "Everything", "tool": {"name": "add", "server": "Everything", "description": "Adds two numbers together", "parameter": {"a": "(number) First number", "b": "(number) Second number"}, "task": "Add the numbers 15 and 27 together."}, "score": 0.7840278148651123}, "sample_size": 2656, "position_index": 2568, "selection_method": "position_index_2568"}
{"pass_at_k": 2, "elapsed_time": 0.0, "task": {"category": "Filesystem", "query": "Read contents from a file"}, "is_correct": true, "target_server_name": "Filesystem", "target_tool_name": "read_file", "target_server_description": "File system operations including: reading single/multiple files, writing/editing files, creating directories, listing directory contents, moving/renaming files, searching files/directories, retrieving file metadata, and listing accessible directories", "target_tool_description": "Read complete contents of a file", "match_result": {"server": "Filesystem", "tool": {"name": "read_file", "server": "Filesystem", "description": "Read complete contents of a file", "parameter": {"path": "(string) File path"}, "task": "Read the contents of the file located at \"/var/log/applications/system.log\"."}, "score": 0.9708662033081055}, "sample_size": 2656, "position_index": 2575, "selection_method": "position_index_2575"}
{"pass_at_k": 2, "elapsed_time": 0.0, "task": {"category": "Filesystem", "query": "Move or rename files and directories"}, "is_correct": true, "target_server_name": "Filesystem", "target_tool_name": "move_file", "target_server_description": "File system operations including: reading single/multiple files, writing/editing files, creating directories, listing directory contents, moving/renaming files, searching files/directories, retrieving file metadata, and listing accessible directories", "target_tool_description": "Move or rename files and directories", "match_result": {"server": "Filesystem", "tool": {"name": "move_file", "server": "Filesystem", "description": "Move or rename files and directories", "parameter": {"source": "(string) Source path", "destination": "(string) Destination path"}, "task": "Move the file located at `/home/user/documents/report.txt` to `/home/user/archive/report_2024.txt`."}, "score": 1.000000238418579}, "sample_size": 2656, "position_index": 2581, "selection_method": "position_index_2581"}
{"pass_at_k": 9, "elapsed_time": 0.0, "task": {"category": "GitHub", "query": "Create a new repository"}, "is_correct": true, "target_server_name": "GitHub", "target_tool_name": "create_repository", "target_server_description": "GitHub仓库管理,包括:文件操作、仓库搜索与创建、问题管理、拉取请求管理、分支管理、代码搜索、用户搜索、提交管理", "target_tool_description": "Create a new GitHub repository", "match_result": {"server": "GitHub", "tool": {"name": "create_repository", "server": "GitHub", "description": "Create a new GitHub repository", "parameter": {"name": "(string) Repository name", "description": "(optional string) Repository description", "private": "(optional boolean) Whether repo should be private", "autoInit": "(optional boolean) Initialize with README"}, "task": "Create a new private GitHub repository named \"project-alpha\" with a description \"Backend services for the alpha project\" and initialize it with a README file."}, "score": 0.8002802133560181}, "sample_size": 2656, "position_index": 2588, "selection_method": "position_index_2588"}
{"pass_at_k": 2, "elapsed_time": 0.0, "task": {"category": "GitHub", "query": "Modify details of an existing issue"}, "is_correct": true, "target_server_name": "GitHub", "target_tool_name": "update_issue", "target_server_description": "GitHub仓库管理,包括:文件操作、仓库搜索与创建、问题管理、拉取请求管理、分支管理、代码搜索、用户搜索、提交管理", "target_tool_description": "Update an existing issue", "match_result": {"server": "GitHub", "tool": {"name": "update_issue", "server": "GitHub", "description": "Update an existing issue", "parameter": {"owner": "(string) Repository owner", "repo": "(string) Repository name", "issue_number": "(number) Issue number to update", "title": "(optional string) New title", "body": "(optional string) New description", "state": "(optional string) New state ('open' or 'closed')", "labels": "(optional string[]) New labels", "assignees": "(optional string[]) New assignees", "milestone": "(optional number) New milestone number"}, "task": "Update the issue with number 42 in the repository \"project-x\" owned by \"dev-team\" by changing its title to \"Fix critical security vulnerability\", setting the state to \"open\", adding the labels [\"bug\", \"security\"], and assigning it to [\"alice\", \"bob\"]."}, "score": 0.9830946922302246}, "sample_size": 2656, "position_index": 2595, "selection_method": "position_index_2595"}
{"pass_at_k": 1, "elapsed_time": 0.0, "task": {"category": "GitHub", "query": "Retrieve issue details from a repository"}, "is_correct": true, "target_server_name": "GitHub", "target_tool_name": "get_issue", "target_server_description": "GitHub仓库管理,包括:文件操作、仓库搜索与创建、问题管理、拉取请求管理、分支管理、代码搜索、用户搜索、提交管理", "target_tool_description": "Gets the contents of an issue within a repository", "match_result": {"server": "GitHub", "tool": {"name": "get_issue", "server": "GitHub", "description": "Gets the contents of an issue within a repository", "parameter": {"owner": "(string) Repository owner", "repo": "(string) Repository name", "issue_number": "(number) Issue number to retrieve"}, "task": "Retrieve the details of issue number 42 from the repository named \"project-alpha\" owned by \"dev-team\"."}, "score": 0.8456719517707825}, "sample_size": 2656, "position_index": 2601, "selection_method": "position_index_2601"}
{"pass_at_k": 19, "elapsed_time": 0.0, "task": {"category": "GitHub", "query": "Update pull request branch with latest changes"}, "is_correct": true, "target_server_name": "GitHub", "target_tool_name": "update_pull_request_branch", "target_server_description": "GitHub仓库管理,包括:文件操作、仓库搜索与创建、问题管理、拉取请求管理、分支管理、代码搜索、用户搜索、提交管理", "target_tool_description": "Update a pull request branch with the latest changes from the base branch (equivalent to GitHub's 'Update branch' button)", "match_result": {"server": "GitHub", "tool": {"name": "update_pull_request_branch", "server": "GitHub", "description": "Update a pull request branch with the latest changes from the base branch (equivalent to GitHub's 'Update branch' button)", "parameter": {"owner": "(string) Repository owner", "repo": "(string) Repository name", "pull_number": "(number) Pull request number", "expected_head_sha": "(optional string) The expected SHA of the pull request's HEAD ref"}, "task": "Update the branch for pull request #42 in the repository \"example-repo\" owned by \"example-owner\" with the latest changes from the base branch."}, "score": 0.6164313554763794}, "sample_size": 2656, "position_index": 2608, "selection_method": "position_index_2608"}
{"pass_at_k": 32, "elapsed_time": 0.0, "task": {"category": "GitLab", "query": "Retrieve file or directory contents from a project"}, "is_correct": true, "target_server_name": "GitLab", "target_tool_name": "get_file_contents", "target_server_description": "GitLab operations including: file management, repository search/creation, issue/merge request creation, branching and forking", "target_tool_description": "Get contents of a file or directory", "match_result": {"server": "GitLab", "tool": {"name": "get_file_contents", "server": "GitLab", "description": "Get contents of a file or directory", "parameter": {"project_id": "(string) Project ID or URL-encoded path", "file_path": "(string) Path to file/directory", "ref": "(Optional, string) Branch/tag/commit to get contents from"}, "task": "Retrieve the contents of the file located at `/src/main.py` from the branch `development` in the project with ID `PRJ-12345`."}, "score": 0.6734294295310974}, "sample_size": 2656, "position_index": 2615, "selection_method": "position_index_2615"}
{"pass_at_k": 1, "elapsed_time": 0.0, "task": {"category": "Google Maps", "query": "Convert address to geographic coordinates"}, "is_correct": true, "target_server_name": "Google Maps", "target_tool_name": "maps_geocode", "target_server_description": "1.Convert address to coordinates 2.Convert coordinates to address 3.Search for places using text query 4.Get detailed information about a place 5.Calculate distances and times between points 6.Get elevation data for locations 7.Get directions between points", "target_tool_description": "Convert address to coordinates", "match_result": {"server": "Google Maps", "tool": {"name": "maps_geocode", "server": "Google Maps", "description": "Convert address to coordinates", "parameter": {"address": "(string) Address to be converted"}, "task": "Find the geographic coordinates for the address \"1600 Amphitheatre Parkway, Mountain View, CA\"."}, "score": 0.9580193758010864}, "sample_size": 2656, "position_index": 2621, "selection_method": "position_index_2621"}
{"pass_at_k": 3, "elapsed_time": 0.0, "task": {"category": "Knowledge Graph", "query": "Add multiple entities to knowledge graph"}, "is_correct": true, "target_server_name": "Memory", "target_tool_name": "create_entities", "target_server_description": "1.在知识图谱中创建多个新实体 2.创建实体间的新关系 3.向现有实体添加新观察 4.删除实体及其关系 5.从实体中删除特定观察 6.从图谱中删除特定关系 7.读取整个知识图谱 8.基于查询搜索节点 9.按名称检索特定节点", "target_tool_description": "Create multiple new entities in the knowledge graph.", "match_result": {"server": "Memory", "tool": {"name": "create_entities", "server": "Memory", "description": "Create multiple new entities in the knowledge graph.", "parameter": {"entities": "(array of objects) Each object contains: `name` (string): Entity identifier, `entityType` (string): Type classification, `observations` (string[]): Associated observations"}, "task": "Add three new entities to the knowledge graph with the following details:  \n1. Entity identifier \"Customer_A\", type classification \"Person\", and observations [\"High purchase frequency\", \"Prefers premium products\"].  \n2. Entity identifier \"Product_X\", type classification \"Item\", and observations [\"High demand\", \"Low stock\"].  \n3. Entity identifier \"Store_123\", type classification \"Location\", and observations [\"Urban area\", \"High foot traffic\"]."}, "score": 0.6788083910942078}, "sample_size": 2656, "position_index": 2628, "selection_method": "position_index_2628"}
{"pass_at_k": 45, "elapsed_time": 0.0, "task": {"category": "Memory", "query": "Search for nodes matching a query term"}, "is_correct": true, "target_server_name": "Memory", "target_tool_name": "search_nodes", "target_server_description": "1.在知识图谱中创建多个新实体 2.创建实体间的新关系 3.向现有实体添加新观察 4.删除实体及其关系 5.从实体中删除特定观察 6.从图谱中删除特定关系 7.读取整个知识图谱 8.基于查询搜索节点 9.按名称检索特定节点", "target_tool_description": "Search for nodes based on a query.", "match_result": {"server": "Memory", "tool": {"name": "search_nodes", "server": "Memory", "description": "Search for nodes based on a query.", "parameter": {"query": "(string) Search term to match against entity names, types, and observation content"}, "task": "Search for nodes matching the term \"database server\" in their names, types, or observation content."}, "score": 0.571186363697052}, "sample_size": 2656, "position_index": 2635, "selection_method": "position_index_2635"}
{"pass_at_k": 1, "elapsed_time": 0.0, "task": {"category": "Puppeteer", "query": "Hover over elements on a webpage"}, "is_correct": true, "target_server_name": "Puppeteer", "target_tool_name": "puppeteer_hover", "target_server_description": "Browser automation using Puppeteer, including: navigation, screenshot capture, element interaction (click/hover/fill/select), and JavaScript execution", "target_tool_description": "Hover elements on the page", "match_result": {"server": "Puppeteer", "tool": {"name": "puppeteer_hover", "server": "Puppeteer", "description": "Hover elements on the page", "parameter": {"selector": "(string): CSS selector for element to hover"}, "task": "Hover over the navigation menu item with the CSS selector \".main-nav > li.dropdown\" to reveal its submenu."}, "score": 0.8793642520904541}, "sample_size": 2656, "position_index": 2641, "selection_method": "position_index_2641"}
{"pass_at_k": 6, "elapsed_time": 0.0, "task": {"category": "Sqlite", "query": "Execute SELECT queries to read data"}, "is_correct": true, "target_server_name": "Sqlite", "target_tool_name": "read_query", "target_server_description": "1. Execute SELECT queries to read data from the database 2. Execute INSERT, UPDATE, or DELETE queries 3. Create new tables in the database 4. Get a list of all tables in the database 5. View schema information for a specific table 6. Add new business insights to the memo resource", "target_tool_description": "Execute SELECT queries to read data from the database", "match_result": {"server": "Sqlite", "tool": {"name": "read_query", "server": "Sqlite", "description": "Execute SELECT queries to read data from the database", "parameter": {"query": "(string) The SELECT SQL query to execute"}, "task": "Retrieve the names and email addresses of all customers who made a purchase in the last 30 days using a SELECT query."}, "score": 0.7630125284194946}, "sample_size": 2656, "position_index": 2648, "selection_method": "position_index_2648"}
{"pass_at_k": 1, "elapsed_time": 0.0, "task": {"category": "Time", "query": "Convert time between different timezones"}, "is_correct": true, "target_server_name": "Time", "target_tool_name": "convert_time", "target_server_description": "1.获取特定时区或系统时区的当前时间 2.在不同时区之间转换时间", "target_tool_description": "Convert time between timezones.", "match_result": {"server": "Time", "tool": {"name": "convert_time", "server": "Time", "description": "Convert time between timezones.", "parameter": {"source_timezone": "(string) Source IANA timezone name", "time": "(string) Time in 24-hour format (HH:MM)", "target_timezone": "(string) Target IANA timezone name"}, "task": "Convert the time 14:30 from the timezone \"America/New_York\" to \"Asia/Tokyo\"."}, "score": 0.7159389853477478}, "sample_size": 2656, "position_index": 2655, "selection_method": "position_index_2655"}
